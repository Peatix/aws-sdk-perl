# Generated by default/object.tt
package Paws::ResourceGroups::ResourceQuery;
  use Moose;
  has Query => (is => 'ro', isa => 'Str', required => 1);
  has Type => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ResourceGroups::ResourceQuery

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ResourceGroups::ResourceQuery object:

  $service_obj->Method(Att1 => { Query => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ResourceGroups::ResourceQuery object:

  $result = $service_obj->Method(...);
  $result->Att1->Query

=head1 DESCRIPTION

The query you can use to define a resource group or a search for
resources. A C<ResourceQuery> specifies both a query C<Type> and a
C<Query> string as JSON string objects. See the examples section for
example JSON strings. For more information about creating a resource
group with a resource query, see Build queries and groups in Resource
Groups
(https://docs.aws.amazon.com/ARG/latest/userguide/gettingstarted-query.html)
in the I<Resource Groups User Guide>

When you combine all of the elements together into a single string, any
double quotes that are embedded inside another double quote pair must
be escaped by preceding the embedded double quote with a backslash
character (\). For example, a complete C<ResourceQuery> parameter must
be formatted like the following CLI parameter example:

C<--resource-query
'{"Type":"TAG_FILTERS_1_0","Query":"{\"ResourceTypeFilters\":[\"AWS::AllSupported\"],\"TagFilters\":[{\"Key\":\"Stage\",\"Values\":[\"Test\"]}]}"}'>

In the preceding example, all of the double quote characters in the
value part of the C<Query> element must be escaped because the value
itself is surrounded by double quotes. For more information, see
Quoting strings
(https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-parameters-quoting-strings.html)
in the I<Command Line Interface User Guide>.

For the complete list of resource types that you can use in the array
value for C<ResourceTypeFilters>, see Resources you can use with
Resource Groups and Tag Editor
(https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html)
in the I<Resource Groups User Guide>. For example:

C<"ResourceTypeFilters":["AWS::S3::Bucket", "AWS::EC2::Instance"]>

=head1 ATTRIBUTES


=head2 B<REQUIRED> Query => Str

The query that defines a group or a search. The contents depends on the
value of the C<Type> element.

=over

=item *

C<ResourceTypeFilters> E<ndash> Applies to all C<ResourceQuery> objects
of either C<Type>. This element contains one of the following two
items:

=over

=item *

The value C<AWS::AllSupported>. This causes the ResourceQuery to match
resources of any resource type that also match the query.

=item *

A list (a JSON array) of resource type identifiers that limit the query
to only resources of the specified types. For the complete list of
resource types that you can use in the array value for
C<ResourceTypeFilters>, see Resources you can use with Resource Groups
and Tag Editor
(https://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html)
in the I<Resource Groups User Guide>.

=back

Example: C<"ResourceTypeFilters": ["AWS::AllSupported"]> or
C<"ResourceTypeFilters": ["AWS::EC2::Instance", "AWS::S3::Bucket"]>

=item *

C<TagFilters> E<ndash> applicable only if C<Type> = C<TAG_FILTERS_1_0>.
The C<Query> contains a JSON string that represents a collection of
simple tag filters. The JSON string uses a syntax similar to the C<
GetResources
(https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html)
> operation, but uses only the C< ResourceTypeFilters
(https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters)
> and C< TagFilters
(https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters)
> fields. If you specify more than one tag key, only resources that
match all tag keys, and at least one value of each specified tag key,
are returned in your query. If you specify more than one value for a
tag key, a resource matches the filter if it has a tag key value that
matches I<any> of the specified values.

For example, consider the following sample query for resources that
have two tags, C<Stage> and C<Version>, with two values each:

C<[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]>

The results of this resource query could include the following.

=over

=item *

An Amazon EC2 instance that has the following two tags:
C<{"Stage":"Deploy"}>, and C<{"Version":"2"}>

=item *

An S3 bucket that has the following two tags: C<{"Stage":"Test"}>, and
C<{"Version":"1"}>

=back

The resource query results would I<not> include the following items in
the results, however.

=over

=item *

An Amazon EC2 instance that has only the following tag:
C<{"Stage":"Deploy"}>.

The instance does not have B<all> of the tag keys specified in the
filter, so it is excluded from the results.

=item *

An RDS database that has the following two tags:
C<{"Stage":"Archived"}> and C<{"Version":"4"}>

The database has all of the tag keys, but none of those keys has an
associated value that matches at least one of the specified values in
the filter.

=back

Example: C<"TagFilters": [ { "Key": "Stage", "Values": [ "Gamma",
"Beta" ] }>

=item *

C<StackIdentifier> E<ndash> applicable only if C<Type> =
C<CLOUDFORMATION_STACK_1_0>. The value of this parameter is the Amazon
Resource Name (ARN) of the CloudFormation stack whose resources you
want included in the group.

=back



=head2 B<REQUIRED> Type => Str

The type of the query to perform. This can have one of two values:

=over

=item *

I<C<CLOUDFORMATION_STACK_1_0:> > Specifies that you want the group to
contain the members of an CloudFormation stack. The C<Query> contains a
C<StackIdentifier> element with an Amazon resource name (ARN) for a
CloudFormation stack.

=item *

I<C<TAG_FILTERS_1_0:> > Specifies that you want the group to include
resource that have tags that match the query.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ResourceGroups>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

