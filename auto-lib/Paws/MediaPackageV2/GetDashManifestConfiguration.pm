# Generated by default/object.tt
package Paws::MediaPackageV2::GetDashManifestConfiguration;
  use Moose;
  has BaseUrls => (is => 'ro', isa => 'ArrayRef[Paws::MediaPackageV2::DashBaseUrl]');
  has Compactness => (is => 'ro', isa => 'Str');
  has DrmSignaling => (is => 'ro', isa => 'Str');
  has DvbSettings => (is => 'ro', isa => 'Paws::MediaPackageV2::DashDvbSettings');
  has FilterConfiguration => (is => 'ro', isa => 'Paws::MediaPackageV2::FilterConfiguration');
  has ManifestName => (is => 'ro', isa => 'Str', required => 1);
  has ManifestWindowSeconds => (is => 'ro', isa => 'Int');
  has MinBufferTimeSeconds => (is => 'ro', isa => 'Int');
  has MinUpdatePeriodSeconds => (is => 'ro', isa => 'Int');
  has PeriodTriggers => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Profiles => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ProgramInformation => (is => 'ro', isa => 'Paws::MediaPackageV2::DashProgramInformation');
  has ScteDash => (is => 'ro', isa => 'Paws::MediaPackageV2::ScteDash');
  has SegmentTemplateFormat => (is => 'ro', isa => 'Str');
  has SubtitleConfiguration => (is => 'ro', isa => 'Paws::MediaPackageV2::DashSubtitleConfiguration');
  has SuggestedPresentationDelaySeconds => (is => 'ro', isa => 'Int');
  has Url => (is => 'ro', isa => 'Str', required => 1);
  has UtcTiming => (is => 'ro', isa => 'Paws::MediaPackageV2::DashUtcTiming');

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaPackageV2::GetDashManifestConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaPackageV2::GetDashManifestConfiguration object:

  $service_obj->Method(Att1 => { BaseUrls => $value, ..., UtcTiming => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaPackageV2::GetDashManifestConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->BaseUrls

=head1 DESCRIPTION

Retrieve the DASH manifest configuration.

=head1 ATTRIBUTES


=head2 BaseUrls => ArrayRef[L<Paws::MediaPackageV2::DashBaseUrl>]

The base URL to use for retrieving segments.


=head2 Compactness => Str

The layout of the DASH manifest that MediaPackage produces. C<STANDARD>
indicates a default manifest, which is compacted. C<NONE> indicates a
full manifest.


=head2 DrmSignaling => Str

Determines how the DASH manifest signals the DRM content.


=head2 DvbSettings => L<Paws::MediaPackageV2::DashDvbSettings>

For endpoints that use the DVB-DASH profile only. The font download and
error reporting information that you want MediaPackage to pass through
to the manifest.


=head2 FilterConfiguration => L<Paws::MediaPackageV2::FilterConfiguration>




=head2 B<REQUIRED> ManifestName => Str

A short string that's appended to the endpoint URL. The manifest name
creates a unique path to this endpoint. If you don't enter a value,
MediaPackage uses the default manifest name, index.


=head2 ManifestWindowSeconds => Int

The total duration (in seconds) of the manifest's content.


=head2 MinBufferTimeSeconds => Int

Minimum amount of content (in seconds) that a player must keep
available in the buffer.


=head2 MinUpdatePeriodSeconds => Int

Minimum amount of time (in seconds) that the player should wait before
requesting updates to the manifest.


=head2 PeriodTriggers => ArrayRef[Str|Undef]

A list of triggers that controls when AWS Elemental MediaPackage
separates the MPEG-DASH manifest into multiple periods. Leave this
value empty to indicate that the manifest is contained all in one
period. For more information about periods in the DASH manifest, see
Multi-period DASH in AWS Elemental MediaPackage
(https://docs.aws.amazon.com/mediapackage/latest/userguide/multi-period.html).


=head2 Profiles => ArrayRef[Str|Undef]

The profile that the output is compliant with.


=head2 ProgramInformation => L<Paws::MediaPackageV2::DashProgramInformation>

Details about the content that you want MediaPackage to pass through in
the manifest to the playback device.


=head2 ScteDash => L<Paws::MediaPackageV2::ScteDash>

The SCTE configuration.


=head2 SegmentTemplateFormat => Str

Determines the type of variable used in the C<media> URL of the
C<SegmentTemplate> tag in the manifest. Also specifies if segment
timeline information is included in C<SegmentTimeline> or
C<SegmentTemplate>.

Value description:

=over

=item *

C<NUMBER_WITH_TIMELINE> - The C<$Number$> variable is used in the
C<media> URL. The value of this variable is the sequential number of
the segment. A full C<SegmentTimeline> object is presented in each
C<SegmentTemplate>.

=back



=head2 SubtitleConfiguration => L<Paws::MediaPackageV2::DashSubtitleConfiguration>

The configuration for DASH subtitles.


=head2 SuggestedPresentationDelaySeconds => Int

The amount of time (in seconds) that the player should be from the end
of the manifest.


=head2 B<REQUIRED> Url => Str

The egress domain URL for stream delivery from MediaPackage.


=head2 UtcTiming => L<Paws::MediaPackageV2::DashUtcTiming>

Determines the type of UTC timing included in the DASH Media
Presentation Description (MPD).



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaPackageV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

