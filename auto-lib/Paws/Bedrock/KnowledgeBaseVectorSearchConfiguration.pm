# Generated by default/object.tt
package Paws::Bedrock::KnowledgeBaseVectorSearchConfiguration;
  use Moose;
  has Filter => (is => 'ro', isa => 'Paws::Bedrock::RetrievalFilter', request_name => 'filter', traits => ['NameInRequest']);
  has NumberOfResults => (is => 'ro', isa => 'Int', request_name => 'numberOfResults', traits => ['NameInRequest']);
  has OverrideSearchType => (is => 'ro', isa => 'Str', request_name => 'overrideSearchType', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Bedrock::KnowledgeBaseVectorSearchConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Bedrock::KnowledgeBaseVectorSearchConfiguration object:

  $service_obj->Method(Att1 => { Filter => $value, ..., OverrideSearchType => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Bedrock::KnowledgeBaseVectorSearchConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->Filter

=head1 DESCRIPTION

The configuration details for returning the results from the knowledge
base vector search.

=head1 ATTRIBUTES


=head2 Filter => L<Paws::Bedrock::RetrievalFilter>

Specifies the filters to use on the metadata fields in the knowledge
base data sources before returning results.


=head2 NumberOfResults => Int

The number of text chunks to retrieve; the number of results to return.


=head2 OverrideSearchType => Str

By default, Amazon Bedrock decides a search strategy for you. If you're
using an Amazon OpenSearch Serverless vector store that contains a
filterable text field, you can specify whether to query the knowledge
base with a C<HYBRID> search using both vector embeddings and raw text,
or C<SEMANTIC> search using only vector embeddings. For other vector
store configurations, only C<SEMANTIC> search is available.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Bedrock>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

