# Generated by default/object.tt
package Paws::WAFV2::UriFragment;
  use Moose;
  has FallbackBehavior => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::UriFragment

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::UriFragment object:

  $service_obj->Method(Att1 => { FallbackBehavior => $value, ..., FallbackBehavior => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::UriFragment object:

  $result = $service_obj->Method(...);
  $result->Att1->FallbackBehavior

=head1 DESCRIPTION

Inspect fragments of the request URI. You can specify the parts of the
URI fragment to inspect and you can narrow the set of URI fragments to
inspect by including or excluding specific keys.

This is used to indicate the web request component to inspect, in the
FieldToMatch specification.

Example JSON: C<"UriFragment": { "MatchPattern": { "All": {} },
"MatchScope": "KEY", "OversizeHandling": "MATCH" }>

=head1 ATTRIBUTES


=head2 FallbackBehavior => Str

What WAF should do if it fails to completely parse the JSON body. The
options are the following:

=over

=item *

C<EVALUATE_AS_STRING> - Inspect the body as plain text. WAF applies the
text transformations and inspection criteria that you defined for the
JSON inspection to the body text string.

=item *

C<MATCH> - Treat the web request as matching the rule statement. WAF
applies the rule action to the request.

=item *

C<NO_MATCH> - Treat the web request as not matching the rule statement.

=back

If you don't provide this setting, WAF parses and evaluates the content
only up to the first parsing failure that it encounters.

Example JSON: C<{ "UriFragment": { "FallbackBehavior": "MATCH"} }>

WAF parsing doesn't fully validate the input JSON string, so parsing
can succeed even for invalid JSON. When parsing succeeds, WAF doesn't
apply the fallback behavior. For more information, see JSON body
(https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-fields-list.html#waf-rule-statement-request-component-json-body)
in the I<WAF Developer Guide>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

