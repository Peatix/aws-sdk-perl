# Generated by default/object.tt
package Paws::WAFV2::ChallengeAction;
  use Moose;
  has CustomRequestHandling => (is => 'ro', isa => 'Paws::WAFV2::CustomRequestHandling');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::ChallengeAction

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::ChallengeAction object:

  $service_obj->Method(Att1 => { CustomRequestHandling => $value, ..., CustomRequestHandling => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::ChallengeAction object:

  $result = $service_obj->Method(...);
  $result->Att1->CustomRequestHandling

=head1 DESCRIPTION

Specifies that WAF should run a C<Challenge> check against the request
to verify that the request is coming from a legitimate client session:

=over

=item *

If the request includes a valid, unexpired challenge token, WAF applies
any custom request handling and labels that you've configured and then
allows the web request inspection to proceed to the next rule, similar
to a C<CountAction>.

=item *

If the request doesn't include a valid, unexpired challenge token, WAF
discontinues the web ACL evaluation of the request and blocks it from
going to its intended destination.

WAF then generates a challenge response that it sends back to the
client, which includes the following:

=over

=item *

The header C<x-amzn-waf-action> with a value of C<challenge>.

=item *

The HTTP status code C<202 Request Accepted>.

=item *

If the request contains an C<Accept> header with a value of
C<text/html>, the response includes a JavaScript page interstitial with
a challenge script.

=back

Challenges run silent browser interrogations in the background, and
don't generally affect the end user experience.

A challenge enforces token acquisition using an interstitial JavaScript
challenge that inspects the client session for legitimate behavior. The
challenge blocks bots or at least increases the cost of operating
sophisticated bots.

After the client session successfully responds to the challenge, it
receives a new token from WAF, which the challenge script uses to
resubmit the original request.

=back

You can configure the expiration time in the C<ChallengeConfig>
C<ImmunityTimeProperty> setting at the rule and web ACL level. The rule
setting overrides the web ACL setting.

This action option is available for rules. It isn't available for web
ACL default actions.

=head1 ATTRIBUTES


=head2 CustomRequestHandling => L<Paws::WAFV2::CustomRequestHandling>

Defines custom handling for the web request, used when the challenge
inspection determines that the request's token is valid and unexpired.

For information about customizing web requests and responses, see
Customizing web requests and responses in WAF
(https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html)
in the I<WAF Developer Guide>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

