# Generated by default/object.tt
package Paws::WAFV2::RequestInspectionACFP;
  use Moose;
  has AddressFields => (is => 'ro', isa => 'ArrayRef[Paws::WAFV2::AddressField]');
  has EmailField => (is => 'ro', isa => 'Paws::WAFV2::EmailField');
  has PasswordField => (is => 'ro', isa => 'Paws::WAFV2::PasswordField');
  has PayloadType => (is => 'ro', isa => 'Str', required => 1);
  has PhoneNumberFields => (is => 'ro', isa => 'ArrayRef[Paws::WAFV2::PhoneNumberField]');
  has UsernameField => (is => 'ro', isa => 'Paws::WAFV2::UsernameField');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::RequestInspectionACFP

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::RequestInspectionACFP object:

  $service_obj->Method(Att1 => { AddressFields => $value, ..., UsernameField => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::RequestInspectionACFP object:

  $result = $service_obj->Method(...);
  $result->Att1->AddressFields

=head1 DESCRIPTION

The criteria for inspecting account creation requests, used by the ACFP
rule group to validate and track account creation attempts.

This is part of the C<AWSManagedRulesACFPRuleSet> configuration in
C<ManagedRuleGroupConfig>.

In these settings, you specify how your application accepts account
creation attempts by providing the request payload type and the names
of the fields within the request body where the username, password,
email, and primary address and phone number fields are provided.

=head1 ATTRIBUTES


=head2 AddressFields => ArrayRef[L<Paws::WAFV2::AddressField>]

The names of the fields in the request payload that contain your
customer's primary physical address.

Order the address fields in the array exactly as they are ordered in
the request payload.

How you specify the address fields depends on the request inspection
payload type.

=over

=item *

For JSON payloads, specify the field identifiers in JSON pointer
syntax. For information about the JSON Pointer syntax, see the Internet
Engineering Task Force (IETF) documentation JavaScript Object Notation
(JSON) Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "primaryaddressline1":
"THE_ADDRESS1", "primaryaddressline2": "THE_ADDRESS2",
"primaryaddressline3": "THE_ADDRESS3" } }>, the address field idenfiers
are C</form/primaryaddressline1>, C</form/primaryaddressline2>, and
C</form/primaryaddressline3>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with input elements named
C<primaryaddressline1>, C<primaryaddressline2>, and
C<primaryaddressline3>, the address fields identifiers are
C<primaryaddressline1>, C<primaryaddressline2>, and
C<primaryaddressline3>.

=back



=head2 EmailField => L<Paws::WAFV2::EmailField>

The name of the field in the request payload that contains your
customer's email.

How you specify this depends on the request inspection payload type.

=over

=item *

For JSON payloads, specify the field name in JSON pointer syntax. For
information about the JSON Pointer syntax, see the Internet Engineering
Task Force (IETF) documentation JavaScript Object Notation (JSON)
Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "email": "THE_EMAIL" }
}>, the email field specification is C</form/email>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with the input element named C<email1>,
the email field specification is C<email1>.

=back



=head2 PasswordField => L<Paws::WAFV2::PasswordField>

The name of the field in the request payload that contains your
customer's password.

How you specify this depends on the request inspection payload type.

=over

=item *

For JSON payloads, specify the field name in JSON pointer syntax. For
information about the JSON Pointer syntax, see the Internet Engineering
Task Force (IETF) documentation JavaScript Object Notation (JSON)
Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "password":
"THE_PASSWORD" } }>, the password field specification is
C</form/password>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with the input element named
C<password1>, the password field specification is C<password1>.

=back



=head2 B<REQUIRED> PayloadType => Str

The payload type for your account creation endpoint, either JSON or
form encoded.


=head2 PhoneNumberFields => ArrayRef[L<Paws::WAFV2::PhoneNumberField>]

The names of the fields in the request payload that contain your
customer's primary phone number.

Order the phone number fields in the array exactly as they are ordered
in the request payload.

How you specify the phone number fields depends on the request
inspection payload type.

=over

=item *

For JSON payloads, specify the field identifiers in JSON pointer
syntax. For information about the JSON Pointer syntax, see the Internet
Engineering Task Force (IETF) documentation JavaScript Object Notation
(JSON) Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "primaryphoneline1":
"THE_PHONE1", "primaryphoneline2": "THE_PHONE2", "primaryphoneline3":
"THE_PHONE3" } }>, the phone number field identifiers are
C</form/primaryphoneline1>, C</form/primaryphoneline2>, and
C</form/primaryphoneline3>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with input elements named
C<primaryphoneline1>, C<primaryphoneline2>, and C<primaryphoneline3>,
the phone number field identifiers are C<primaryphoneline1>,
C<primaryphoneline2>, and C<primaryphoneline3>.

=back



=head2 UsernameField => L<Paws::WAFV2::UsernameField>

The name of the field in the request payload that contains your
customer's username.

How you specify this depends on the request inspection payload type.

=over

=item *

For JSON payloads, specify the field name in JSON pointer syntax. For
information about the JSON Pointer syntax, see the Internet Engineering
Task Force (IETF) documentation JavaScript Object Notation (JSON)
Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "username":
"THE_USERNAME" } }>, the username field specification is
C</form/username>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with the input element named
C<username1>, the username field specification is C<username1>

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

