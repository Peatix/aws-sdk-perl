# Generated by default/object.tt
package Paws::WAFV2::AWSManagedRulesATPRuleSet;
  use Moose;
  has EnableRegexInPath => (is => 'ro', isa => 'Bool');
  has LoginPath => (is => 'ro', isa => 'Str', required => 1);
  has RequestInspection => (is => 'ro', isa => 'Paws::WAFV2::RequestInspection');
  has ResponseInspection => (is => 'ro', isa => 'Paws::WAFV2::ResponseInspection');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::AWSManagedRulesATPRuleSet

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::AWSManagedRulesATPRuleSet object:

  $service_obj->Method(Att1 => { EnableRegexInPath => $value, ..., ResponseInspection => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::AWSManagedRulesATPRuleSet object:

  $result = $service_obj->Method(...);
  $result->Att1->EnableRegexInPath

=head1 DESCRIPTION

Details for your use of the account takeover prevention managed rule
group, C<AWSManagedRulesATPRuleSet>. This configuration is used in
C<ManagedRuleGroupConfig>.

=head1 ATTRIBUTES


=head2 EnableRegexInPath => Bool

Allow the use of regular expressions in the login page path.


=head2 B<REQUIRED> LoginPath => Str

The path of the login endpoint for your application. For example, for
the URL C<https://example.com/web/login>, you would provide the path
C</web/login>. Login paths that start with the path that you provide
are considered a match. For example C</web/login> matches the login
paths C</web/login>, C</web/login/>, C</web/loginPage>, and
C</web/login/thisPage>, but doesn't match the login path
C</home/web/login> or C</website/login>.

The rule group inspects only HTTP C<POST> requests to your specified
login endpoint.


=head2 RequestInspection => L<Paws::WAFV2::RequestInspection>

The criteria for inspecting login requests, used by the ATP rule group
to validate credentials usage.


=head2 ResponseInspection => L<Paws::WAFV2::ResponseInspection>

The criteria for inspecting responses to login requests, used by the
ATP rule group to track login failure rates.

Response inspection is available only in web ACLs that protect Amazon
CloudFront distributions.

The ATP rule group evaluates the responses that your protected
resources send back to client login attempts, keeping count of
successful and failed attempts for each IP address and client session.
Using this information, the rule group labels and mitigates requests
from client sessions and IP addresses that have had too many failed
login attempts in a short amount of time.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

