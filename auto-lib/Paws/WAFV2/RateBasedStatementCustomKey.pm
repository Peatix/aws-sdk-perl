# Generated by default/object.tt
package Paws::WAFV2::RateBasedStatementCustomKey;
  use Moose;
  has Cookie => (is => 'ro', isa => 'Paws::WAFV2::RateLimitCookie');
  has ForwardedIP => (is => 'ro', isa => 'Paws::WAFV2::RateLimitForwardedIP');
  has Header => (is => 'ro', isa => 'Paws::WAFV2::RateLimitHeader');
  has HTTPMethod => (is => 'ro', isa => 'Paws::WAFV2::RateLimitHTTPMethod');
  has IP => (is => 'ro', isa => 'Paws::WAFV2::RateLimitIP');
  has JA3Fingerprint => (is => 'ro', isa => 'Paws::WAFV2::RateLimitJA3Fingerprint');
  has JA4Fingerprint => (is => 'ro', isa => 'Paws::WAFV2::RateLimitJA4Fingerprint');
  has LabelNamespace => (is => 'ro', isa => 'Paws::WAFV2::RateLimitLabelNamespace');
  has QueryArgument => (is => 'ro', isa => 'Paws::WAFV2::RateLimitQueryArgument');
  has QueryString => (is => 'ro', isa => 'Paws::WAFV2::RateLimitQueryString');
  has UriPath => (is => 'ro', isa => 'Paws::WAFV2::RateLimitUriPath');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::RateBasedStatementCustomKey

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::RateBasedStatementCustomKey object:

  $service_obj->Method(Att1 => { Cookie => $value, ..., UriPath => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::RateBasedStatementCustomKey object:

  $result = $service_obj->Method(...);
  $result->Att1->Cookie

=head1 DESCRIPTION

Specifies a single custom aggregate key for a rate-base rule.

Web requests that are missing any of the components specified in the
aggregation keys are omitted from the rate-based rule evaluation and
handling.

=head1 ATTRIBUTES


=head2 Cookie => L<Paws::WAFV2::RateLimitCookie>

Use the value of a cookie in the request as an aggregate key. Each
distinct value in the cookie contributes to the aggregation instance.
If you use a single cookie as your custom key, then each value fully
defines an aggregation instance.


=head2 ForwardedIP => L<Paws::WAFV2::RateLimitForwardedIP>

Use the first IP address in an HTTP header as an aggregate key. Each
distinct forwarded IP address contributes to the aggregation instance.

When you specify an IP or forwarded IP in the custom key settings, you
must also specify at least one other key to use. You can aggregate on
only the forwarded IP address by specifying C<FORWARDED_IP> in your
rate-based statement's C<AggregateKeyType>.

With this option, you must specify the header to use in the rate-based
rule's C<ForwardedIPConfig> property.


=head2 Header => L<Paws::WAFV2::RateLimitHeader>

Use the value of a header in the request as an aggregate key. Each
distinct value in the header contributes to the aggregation instance.
If you use a single header as your custom key, then each value fully
defines an aggregation instance.


=head2 HTTPMethod => L<Paws::WAFV2::RateLimitHTTPMethod>

Use the request's HTTP method as an aggregate key. Each distinct HTTP
method contributes to the aggregation instance. If you use just the
HTTP method as your custom key, then each method fully defines an
aggregation instance.


=head2 IP => L<Paws::WAFV2::RateLimitIP>

Use the request's originating IP address as an aggregate key. Each
distinct IP address contributes to the aggregation instance.

When you specify an IP or forwarded IP in the custom key settings, you
must also specify at least one other key to use. You can aggregate on
only the IP address by specifying C<IP> in your rate-based statement's
C<AggregateKeyType>.


=head2 JA3Fingerprint => L<Paws::WAFV2::RateLimitJA3Fingerprint>

Use the request's JA3 fingerprint as an aggregate key. If you use a
single JA3 fingerprint as your custom key, then each value fully
defines an aggregation instance.


=head2 JA4Fingerprint => L<Paws::WAFV2::RateLimitJA4Fingerprint>

Use the request's JA4 fingerprint as an aggregate key. If you use a
single JA4 fingerprint as your custom key, then each value fully
defines an aggregation instance.


=head2 LabelNamespace => L<Paws::WAFV2::RateLimitLabelNamespace>

Use the specified label namespace as an aggregate key. Each distinct
fully qualified label name that has the specified label namespace
contributes to the aggregation instance. If you use just one label
namespace as your custom key, then each label name fully defines an
aggregation instance.

This uses only labels that have been added to the request by rules that
are evaluated before this rate-based rule in the web ACL.

For information about label namespaces and names, see Label syntax and
naming requirements
(https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-label-requirements.html)
in the I<WAF Developer Guide>.


=head2 QueryArgument => L<Paws::WAFV2::RateLimitQueryArgument>

Use the specified query argument as an aggregate key. Each distinct
value for the named query argument contributes to the aggregation
instance. If you use a single query argument as your custom key, then
each value fully defines an aggregation instance.


=head2 QueryString => L<Paws::WAFV2::RateLimitQueryString>

Use the request's query string as an aggregate key. Each distinct
string contributes to the aggregation instance. If you use just the
query string as your custom key, then each string fully defines an
aggregation instance.


=head2 UriPath => L<Paws::WAFV2::RateLimitUriPath>

Use the request's URI path as an aggregate key. Each distinct URI path
contributes to the aggregation instance. If you use just the URI path
as your custom key, then each URI path fully defines an aggregation
instance.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

