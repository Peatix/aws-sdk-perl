# Generated by default/object.tt
package Paws::WAFV2::RuleGroupReferenceStatement;
  use Moose;
  has ARN => (is => 'ro', isa => 'Str', required => 1);
  has ExcludedRules => (is => 'ro', isa => 'ArrayRef[Paws::WAFV2::ExcludedRule]');
  has RuleActionOverrides => (is => 'ro', isa => 'ArrayRef[Paws::WAFV2::RuleActionOverride]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::RuleGroupReferenceStatement

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::RuleGroupReferenceStatement object:

  $service_obj->Method(Att1 => { ARN => $value, ..., RuleActionOverrides => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::RuleGroupReferenceStatement object:

  $result = $service_obj->Method(...);
  $result->Att1->ARN

=head1 DESCRIPTION

A rule statement used to run the rules that are defined in a RuleGroup.
To use this, create a rule group with your rules, then provide the ARN
of the rule group in this statement.

You cannot nest a C<RuleGroupReferenceStatement>, for example for use
inside a C<NotStatement> or C<OrStatement>. You cannot use a rule group
reference statement inside another rule group. You can only reference a
rule group as a top-level statement within a rule that you define in a
web ACL.

=head1 ATTRIBUTES


=head2 B<REQUIRED> ARN => Str

The Amazon Resource Name (ARN) of the entity.


=head2 ExcludedRules => ArrayRef[L<Paws::WAFV2::ExcludedRule>]

Rules in the referenced rule group whose actions are set to C<Count>.

Instead of this option, use C<RuleActionOverrides>. It accepts any
valid action setting, including C<Count>.


=head2 RuleActionOverrides => ArrayRef[L<Paws::WAFV2::RuleActionOverride>]

Action settings to use in the place of the rule actions that are
configured inside the rule group. You specify one override for each
rule whose action you want to change.

Take care to verify the rule names in your overrides. If you provide a
rule name that doesn't match the name of any rule in the rule group,
WAF doesn't return an error and doesn't apply the override setting.

You can use overrides for testing, for example you can override all of
rule actions to C<Count> and then monitor the resulting count metrics
to understand how the rule group would handle your web traffic. You can
also permanently override some or all actions, to modify how the rule
group manages your web traffic.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

