# Generated by default/object.tt
package Paws::WAFV2::Cookies;
  use Moose;
  has MatchPattern => (is => 'ro', isa => 'Paws::WAFV2::CookieMatchPattern', required => 1);
  has MatchScope => (is => 'ro', isa => 'Str', required => 1);
  has OversizeHandling => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::Cookies

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::Cookies object:

  $service_obj->Method(Att1 => { MatchPattern => $value, ..., OversizeHandling => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::Cookies object:

  $result = $service_obj->Method(...);
  $result->Att1->MatchPattern

=head1 DESCRIPTION

Inspect the cookies in the web request. You can specify the parts of
the cookies to inspect and you can narrow the set of cookies to inspect
by including or excluding specific keys.

This is used to indicate the web request component to inspect, in the
FieldToMatch specification.

Example JSON: C<"Cookies": { "MatchPattern": { "All": {} },
"MatchScope": "KEY", "OversizeHandling": "MATCH" }>

=head1 ATTRIBUTES


=head2 B<REQUIRED> MatchPattern => L<Paws::WAFV2::CookieMatchPattern>

The filter to use to identify the subset of cookies to inspect in a web
request.

You must specify exactly one setting: either C<All>,
C<IncludedCookies>, or C<ExcludedCookies>.

Example JSON: C<"MatchPattern": { "IncludedCookies": [
"session-id-time", "session-id" ] }>


=head2 B<REQUIRED> MatchScope => Str

The parts of the cookies to inspect with the rule inspection criteria.
If you specify C<ALL>, WAF inspects both keys and values.

C<All> does not require a match to be found in the keys and a match to
be found in the values. It requires a match to be found in the keys or
the values or both. To require a match in the keys and in the values,
use a logical C<AND> statement to combine two match rules, one that
inspects the keys and another that inspects the values.


=head2 B<REQUIRED> OversizeHandling => Str

What WAF should do if the cookies of the request are more numerous or
larger than WAF can inspect. WAF does not support inspecting the entire
contents of request cookies when they exceed 8 KB (8192 bytes) or 200
total cookies. The underlying host service forwards a maximum of 200
cookies and at most 8 KB of cookie contents to WAF.

The options for oversize handling are the following:

=over

=item *

C<CONTINUE> - Inspect the available cookies normally, according to the
rule inspection criteria.

=item *

C<MATCH> - Treat the web request as matching the rule statement. WAF
applies the rule action to the request.

=item *

C<NO_MATCH> - Treat the web request as not matching the rule statement.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

