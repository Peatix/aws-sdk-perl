# Generated by default/object.tt
package Paws::WAFV2::RequestInspection;
  use Moose;
  has PasswordField => (is => 'ro', isa => 'Paws::WAFV2::PasswordField', required => 1);
  has PayloadType => (is => 'ro', isa => 'Str', required => 1);
  has UsernameField => (is => 'ro', isa => 'Paws::WAFV2::UsernameField', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::WAFV2::RequestInspection

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WAFV2::RequestInspection object:

  $service_obj->Method(Att1 => { PasswordField => $value, ..., UsernameField => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WAFV2::RequestInspection object:

  $result = $service_obj->Method(...);
  $result->Att1->PasswordField

=head1 DESCRIPTION

The criteria for inspecting login requests, used by the ATP rule group
to validate credentials usage.

This is part of the C<AWSManagedRulesATPRuleSet> configuration in
C<ManagedRuleGroupConfig>.

In these settings, you specify how your application accepts login
attempts by providing the request payload type and the names of the
fields within the request body where the username and password are
provided.

=head1 ATTRIBUTES


=head2 B<REQUIRED> PasswordField => L<Paws::WAFV2::PasswordField>

The name of the field in the request payload that contains your
customer's password.

How you specify this depends on the request inspection payload type.

=over

=item *

For JSON payloads, specify the field name in JSON pointer syntax. For
information about the JSON Pointer syntax, see the Internet Engineering
Task Force (IETF) documentation JavaScript Object Notation (JSON)
Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "password":
"THE_PASSWORD" } }>, the password field specification is
C</form/password>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with the input element named
C<password1>, the password field specification is C<password1>.

=back



=head2 B<REQUIRED> PayloadType => Str

The payload type for your login endpoint, either JSON or form encoded.


=head2 B<REQUIRED> UsernameField => L<Paws::WAFV2::UsernameField>

The name of the field in the request payload that contains your
customer's username.

How you specify this depends on the request inspection payload type.

=over

=item *

For JSON payloads, specify the field name in JSON pointer syntax. For
information about the JSON Pointer syntax, see the Internet Engineering
Task Force (IETF) documentation JavaScript Object Notation (JSON)
Pointer (https://tools.ietf.org/html/rfc6901).

For example, for the JSON payload C<{ "form": { "username":
"THE_USERNAME" } }>, the username field specification is
C</form/username>.

=item *

For form encoded payload types, use the HTML form names.

For example, for an HTML form with the input element named
C<username1>, the username field specification is C<username1>

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WAFV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

