# Generated by default/object.tt
package Paws::SageMaker::StoppingCondition;
  use Moose;
  has MaxPendingTimeInSeconds => (is => 'ro', isa => 'Int');
  has MaxRuntimeInSeconds => (is => 'ro', isa => 'Int');
  has MaxWaitTimeInSeconds => (is => 'ro', isa => 'Int');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SageMaker::StoppingCondition

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SageMaker::StoppingCondition object:

  $service_obj->Method(Att1 => { MaxPendingTimeInSeconds => $value, ..., MaxWaitTimeInSeconds => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SageMaker::StoppingCondition object:

  $result = $service_obj->Method(...);
  $result->Att1->MaxPendingTimeInSeconds

=head1 DESCRIPTION

Specifies a limit to how long a job can run. When the job reaches the
time limit, SageMaker ends the job. Use this API to cap costs.

To stop a training job, SageMaker sends the algorithm the C<SIGTERM>
signal, which delays job termination for 120 seconds. Algorithms can
use this 120-second window to save the model artifacts, so the results
of training are not lost.

The training algorithms provided by SageMaker automatically save the
intermediate results of a model training job when possible. This
attempt to save artifacts is only a best effort case as model might not
be in a state from which it can be saved. For example, if training has
just started, the model might not be ready to save. When saved, this
intermediate data is a valid model artifact. You can use it to create a
model with C<CreateModel>.

The Neural Topic Model (NTM) currently does not support saving
intermediate model artifacts. When training NTMs, make sure that the
maximum runtime is sufficient for the training job to complete.

=head1 ATTRIBUTES


=head2 MaxPendingTimeInSeconds => Int

The maximum length of time, in seconds, that a training or compilation
job can be pending before it is stopped.

When working with training jobs that use capacity from training plans
(https://docs.aws.amazon.com/sagemaker/latest/dg/reserve-capacity-with-training-plans.html),
not all C<Pending> job states count against the
C<MaxPendingTimeInSeconds> limit. The following scenarios do not
increment the C<MaxPendingTimeInSeconds> counter:

=over

=item *

The plan is in a C<Scheduled> state: Jobs queued (in C<Pending> status)
before a plan's start date (waiting for scheduled start time)

=item *

Between capacity reservations: Jobs temporarily back to C<Pending>
status between two capacity reservation periods

=back

C<MaxPendingTimeInSeconds> only increments when jobs are actively
waiting for capacity in an C<Active> plan.


=head2 MaxRuntimeInSeconds => Int

The maximum length of time, in seconds, that a training or compilation
job can run before it is stopped.

For compilation jobs, if the job does not complete during this time, a
C<TimeOut> error is generated. We recommend starting with 900 seconds
and increasing as necessary based on your model.

For all other jobs, if the job does not complete during this time,
SageMaker ends the job. When C<RetryStrategy> is specified in the job
request, C<MaxRuntimeInSeconds> specifies the maximum time for all of
the attempts in total, not each individual attempt. The default value
is 1 day. The maximum value is 28 days.

The maximum time that a C<TrainingJob> can run in total, including any
time spent publishing metrics or archiving and uploading models after
it has been stopped, is 30 days.


=head2 MaxWaitTimeInSeconds => Int

The maximum length of time, in seconds, that a managed Spot training
job has to complete. It is the amount of time spent waiting for Spot
capacity plus the amount of time the job can run. It must be equal to
or greater than C<MaxRuntimeInSeconds>. If the job does not complete
during this time, SageMaker ends the job.

When C<RetryStrategy> is specified in the job request,
C<MaxWaitTimeInSeconds> specifies the maximum time for all of the
attempts in total, not each individual attempt.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SageMaker>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

