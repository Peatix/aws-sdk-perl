# Generated by default/object.tt
package Paws::SageMaker::HyperParameterTrainingJobDefinition;
  use Moose;
  has AlgorithmSpecification => (is => 'ro', isa => 'Paws::SageMaker::HyperParameterAlgorithmSpecification', required => 1);
  has CheckpointConfig => (is => 'ro', isa => 'Paws::SageMaker::CheckpointConfig');
  has DefinitionName => (is => 'ro', isa => 'Str');
  has EnableInterContainerTrafficEncryption => (is => 'ro', isa => 'Bool');
  has EnableManagedSpotTraining => (is => 'ro', isa => 'Bool');
  has EnableNetworkIsolation => (is => 'ro', isa => 'Bool');
  has Environment => (is => 'ro', isa => 'Paws::SageMaker::HyperParameterTrainingJobEnvironmentMap');
  has HyperParameterRanges => (is => 'ro', isa => 'Paws::SageMaker::ParameterRanges');
  has HyperParameterTuningResourceConfig => (is => 'ro', isa => 'Paws::SageMaker::HyperParameterTuningResourceConfig');
  has InputDataConfig => (is => 'ro', isa => 'ArrayRef[Paws::SageMaker::Channel]');
  has OutputDataConfig => (is => 'ro', isa => 'Paws::SageMaker::OutputDataConfig', required => 1);
  has ResourceConfig => (is => 'ro', isa => 'Paws::SageMaker::ResourceConfig');
  has RetryStrategy => (is => 'ro', isa => 'Paws::SageMaker::RetryStrategy');
  has RoleArn => (is => 'ro', isa => 'Str', required => 1);
  has StaticHyperParameters => (is => 'ro', isa => 'Paws::SageMaker::HyperParameters');
  has StoppingCondition => (is => 'ro', isa => 'Paws::SageMaker::StoppingCondition', required => 1);
  has TuningObjective => (is => 'ro', isa => 'Paws::SageMaker::HyperParameterTuningJobObjective');
  has VpcConfig => (is => 'ro', isa => 'Paws::SageMaker::VpcConfig');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SageMaker::HyperParameterTrainingJobDefinition

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SageMaker::HyperParameterTrainingJobDefinition object:

  $service_obj->Method(Att1 => { AlgorithmSpecification => $value, ..., VpcConfig => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SageMaker::HyperParameterTrainingJobDefinition object:

  $result = $service_obj->Method(...);
  $result->Att1->AlgorithmSpecification

=head1 DESCRIPTION

Defines the training jobs launched by a hyperparameter tuning job.

=head1 ATTRIBUTES


=head2 B<REQUIRED> AlgorithmSpecification => L<Paws::SageMaker::HyperParameterAlgorithmSpecification>

The HyperParameterAlgorithmSpecification
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_HyperParameterAlgorithmSpecification.html)
object that specifies the resource algorithm to use for the training
jobs that the tuning job launches.


=head2 CheckpointConfig => L<Paws::SageMaker::CheckpointConfig>




=head2 DefinitionName => Str

The job definition name.


=head2 EnableInterContainerTrafficEncryption => Bool

To encrypt all communications between ML compute instances in
distributed training, choose C<True>. Encryption provides greater
security for distributed training, but training might take longer. How
long it takes depends on the amount of communication between compute
instances, especially if you use a deep learning algorithm in
distributed training.


=head2 EnableManagedSpotTraining => Bool

A Boolean indicating whether managed spot training is enabled (C<True>)
or not (C<False>).


=head2 EnableNetworkIsolation => Bool

Isolates the training container. No inbound or outbound network calls
can be made, except for calls between peers within a training cluster
for distributed training. If network isolation is used for training
jobs that are configured to use a VPC, SageMaker downloads and uploads
customer data and model artifacts through the specified VPC, but the
training container does not have network access.


=head2 Environment => L<Paws::SageMaker::HyperParameterTrainingJobEnvironmentMap>

An environment variable that you can pass into the SageMaker
CreateTrainingJob
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html)
API. You can use an existing environment variable from the training
container
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateTrainingJob.html#sagemaker-CreateTrainingJob-request-Environment)
or use your own. See Define metrics and variables
(https://docs.aws.amazon.com/sagemaker/latest/dg/automatic-model-tuning-define-metrics-variables.html)
for more information.

The maximum number of items specified for C<Map Entries> refers to the
maximum number of environment variables for each
C<TrainingJobDefinition> and also the maximum for the hyperparameter
tuning job itself. That is, the sum of the number of environment
variables for all the training job definitions can't exceed the maximum
number specified.


=head2 HyperParameterRanges => L<Paws::SageMaker::ParameterRanges>




=head2 HyperParameterTuningResourceConfig => L<Paws::SageMaker::HyperParameterTuningResourceConfig>

The configuration for the hyperparameter tuning resources, including
the compute instances and storage volumes, used for training jobs
launched by the tuning job. By default, storage volumes hold model
artifacts and incremental states. Choose C<File> for
C<TrainingInputMode> in the C<AlgorithmSpecification> parameter to
additionally store training data in the storage volume (optional).


=head2 InputDataConfig => ArrayRef[L<Paws::SageMaker::Channel>]

An array of Channel
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Channel.html)
objects that specify the input for the training jobs that the tuning
job launches.


=head2 B<REQUIRED> OutputDataConfig => L<Paws::SageMaker::OutputDataConfig>

Specifies the path to the Amazon S3 bucket where you store model
artifacts from the training jobs that the tuning job launches.


=head2 ResourceConfig => L<Paws::SageMaker::ResourceConfig>

The resources, including the compute instances and storage volumes, to
use for the training jobs that the tuning job launches.

Storage volumes store model artifacts and incremental states. Training
algorithms might also use storage volumes for scratch space. If you
want SageMaker to use the storage volume to store the training data,
choose C<File> as the C<TrainingInputMode> in the algorithm
specification. For distributed training algorithms, specify an instance
count greater than 1.

If you want to use hyperparameter optimization with instance type
flexibility, use C<HyperParameterTuningResourceConfig> instead.


=head2 RetryStrategy => L<Paws::SageMaker::RetryStrategy>

The number of times to retry the job when the job fails due to an
C<InternalServerError>.


=head2 B<REQUIRED> RoleArn => Str

The Amazon Resource Name (ARN) of the IAM role associated with the
training jobs that the tuning job launches.


=head2 StaticHyperParameters => L<Paws::SageMaker::HyperParameters>

Specifies the values of hyperparameters that do not change for the
tuning job.


=head2 B<REQUIRED> StoppingCondition => L<Paws::SageMaker::StoppingCondition>

Specifies a limit to how long a model hyperparameter training job can
run. It also specifies how long a managed spot training job has to
complete. When the job reaches the time limit, SageMaker ends the
training job. Use this API to cap model training costs.


=head2 TuningObjective => L<Paws::SageMaker::HyperParameterTuningJobObjective>




=head2 VpcConfig => L<Paws::SageMaker::VpcConfig>

The VpcConfig
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_VpcConfig.html)
object that specifies the VPC that you want the training jobs that this
hyperparameter tuning job launches to connect to. Control access to and
from your training container by configuring the VPC. For more
information, see Protect Training Jobs by Using an Amazon Virtual
Private Cloud
(https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html).



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SageMaker>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

