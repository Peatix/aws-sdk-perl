# Generated by default/object.tt
package Paws::SageMaker::TimeSeriesForecastingJobConfig;
  use Moose;
  has CandidateGenerationConfig => (is => 'ro', isa => 'Paws::SageMaker::CandidateGenerationConfig');
  has CompletionCriteria => (is => 'ro', isa => 'Paws::SageMaker::AutoMLJobCompletionCriteria');
  has FeatureSpecificationS3Uri => (is => 'ro', isa => 'Str');
  has ForecastFrequency => (is => 'ro', isa => 'Str', required => 1);
  has ForecastHorizon => (is => 'ro', isa => 'Int', required => 1);
  has ForecastQuantiles => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has HolidayConfig => (is => 'ro', isa => 'ArrayRef[Paws::SageMaker::HolidayConfigAttributes]');
  has TimeSeriesConfig => (is => 'ro', isa => 'Paws::SageMaker::TimeSeriesConfig', required => 1);
  has Transformations => (is => 'ro', isa => 'Paws::SageMaker::TimeSeriesTransformations');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SageMaker::TimeSeriesForecastingJobConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SageMaker::TimeSeriesForecastingJobConfig object:

  $service_obj->Method(Att1 => { CandidateGenerationConfig => $value, ..., Transformations => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SageMaker::TimeSeriesForecastingJobConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->CandidateGenerationConfig

=head1 DESCRIPTION

The collection of settings used by an AutoML job V2 for the time-series
forecasting problem type.

=head1 ATTRIBUTES


=head2 CandidateGenerationConfig => L<Paws::SageMaker::CandidateGenerationConfig>




=head2 CompletionCriteria => L<Paws::SageMaker::AutoMLJobCompletionCriteria>




=head2 FeatureSpecificationS3Uri => Str

A URL to the Amazon S3 data source containing additional selected
features that complement the target, itemID, timestamp, and grouped
columns set in C<TimeSeriesConfig>. When not provided, the AutoML job
V2 includes all the columns from the original dataset that are not
already declared in C<TimeSeriesConfig>. If provided, the AutoML job V2
only considers these additional columns as a complement to the ones
declared in C<TimeSeriesConfig>.

You can input C<FeatureAttributeNames> (optional) in JSON format as
shown below:

C<{ "FeatureAttributeNames":["col1", "col2", ...] }>.

You can also specify the data type of the feature (optional) in the
format shown below:

C<{ "FeatureDataTypes":{"col1":"numeric", "col2":"categorical" ... } }>

Autopilot supports the following data types: C<numeric>,
C<categorical>, C<text>, and C<datetime>.

These column keys must not include any column set in
C<TimeSeriesConfig>.


=head2 B<REQUIRED> ForecastFrequency => Str

The frequency of predictions in a forecast.

Valid intervals are an integer followed by Y (Year), M (Month), W
(Week), D (Day), H (Hour), and min (Minute). For example, C<1D>
indicates every day and C<15min> indicates every 15 minutes. The value
of a frequency must not overlap with the next larger frequency. For
example, you must use a frequency of C<1H> instead of C<60min>.

The valid values for each frequency are the following:

=over

=item *

Minute - 1-59

=item *

Hour - 1-23

=item *

Day - 1-6

=item *

Week - 1-4

=item *

Month - 1-11

=item *

Year - 1

=back



=head2 B<REQUIRED> ForecastHorizon => Int

The number of time-steps that the model predicts. The forecast horizon
is also called the prediction length. The maximum forecast horizon is
the lesser of 500 time-steps or 1/4 of the time-steps in the dataset.


=head2 ForecastQuantiles => ArrayRef[Str|Undef]

The quantiles used to train the model for forecasts at a specified
quantile. You can specify quantiles from C<0.01> (p1) to C<0.99> (p99),
by increments of 0.01 or higher. Up to five forecast quantiles can be
specified. When C<ForecastQuantiles> is not provided, the AutoML job
uses the quantiles p10, p50, and p90 as default.


=head2 HolidayConfig => ArrayRef[L<Paws::SageMaker::HolidayConfigAttributes>]

The collection of holiday featurization attributes used to incorporate
national holiday information into your forecasting model.


=head2 B<REQUIRED> TimeSeriesConfig => L<Paws::SageMaker::TimeSeriesConfig>

The collection of components that defines the time-series.


=head2 Transformations => L<Paws::SageMaker::TimeSeriesTransformations>

The transformations modifying specific attributes of the time-series,
such as filling strategies for missing values.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SageMaker>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

