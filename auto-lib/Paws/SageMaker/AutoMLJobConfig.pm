# Generated by default/object.tt
package Paws::SageMaker::AutoMLJobConfig;
  use Moose;
  has CandidateGenerationConfig => (is => 'ro', isa => 'Paws::SageMaker::AutoMLCandidateGenerationConfig');
  has CompletionCriteria => (is => 'ro', isa => 'Paws::SageMaker::AutoMLJobCompletionCriteria');
  has DataSplitConfig => (is => 'ro', isa => 'Paws::SageMaker::AutoMLDataSplitConfig');
  has Mode => (is => 'ro', isa => 'Str');
  has SecurityConfig => (is => 'ro', isa => 'Paws::SageMaker::AutoMLSecurityConfig');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SageMaker::AutoMLJobConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SageMaker::AutoMLJobConfig object:

  $service_obj->Method(Att1 => { CandidateGenerationConfig => $value, ..., SecurityConfig => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SageMaker::AutoMLJobConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->CandidateGenerationConfig

=head1 DESCRIPTION

A collection of settings used for an AutoML job.

=head1 ATTRIBUTES


=head2 CandidateGenerationConfig => L<Paws::SageMaker::AutoMLCandidateGenerationConfig>

The configuration for generating a candidate for an AutoML job
(optional).


=head2 CompletionCriteria => L<Paws::SageMaker::AutoMLJobCompletionCriteria>

How long an AutoML job is allowed to run, or how many candidates a job
is allowed to generate.


=head2 DataSplitConfig => L<Paws::SageMaker::AutoMLDataSplitConfig>

The configuration for splitting the input training dataset.

Type: AutoMLDataSplitConfig


=head2 Mode => Str

The method that Autopilot uses to train the data. You can either
specify the mode manually or let Autopilot choose for you based on the
dataset size by selecting C<AUTO>. In C<AUTO> mode, Autopilot chooses
C<ENSEMBLING> for datasets smaller than 100 MB, and
C<HYPERPARAMETER_TUNING> for larger ones.

The C<ENSEMBLING> mode uses a multi-stack ensemble model to predict
classification and regression tasks directly from your dataset. This
machine learning mode combines several base models to produce an
optimal predictive model. It then uses a stacking ensemble method to
combine predictions from contributing members. A multi-stack ensemble
model can provide better performance over a single model by combining
the predictive capabilities of multiple models. See Autopilot algorithm
support
(https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support)
for a list of algorithms supported by C<ENSEMBLING> mode.

The C<HYPERPARAMETER_TUNING> (HPO) mode uses the best hyperparameters
to train the best version of a model. HPO automatically selects an
algorithm for the type of problem you want to solve. Then HPO finds the
best hyperparameters according to your objective metric. See Autopilot
algorithm support
(https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support)
for a list of algorithms supported by C<HYPERPARAMETER_TUNING> mode.


=head2 SecurityConfig => L<Paws::SageMaker::AutoMLSecurityConfig>

The security configuration for traffic encryption or Amazon VPC
settings.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SageMaker>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

