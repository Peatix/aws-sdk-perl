# Generated by default/object.tt
package Paws::SageMaker::AutoMLCandidateGenerationConfig;
  use Moose;
  has AlgorithmsConfig => (is => 'ro', isa => 'ArrayRef[Paws::SageMaker::AutoMLAlgorithmConfig]');
  has FeatureSpecificationS3Uri => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SageMaker::AutoMLCandidateGenerationConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SageMaker::AutoMLCandidateGenerationConfig object:

  $service_obj->Method(Att1 => { AlgorithmsConfig => $value, ..., FeatureSpecificationS3Uri => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SageMaker::AutoMLCandidateGenerationConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->AlgorithmsConfig

=head1 DESCRIPTION

Stores the configuration information for how a candidate is generated
(optional).

=head1 ATTRIBUTES


=head2 AlgorithmsConfig => ArrayRef[L<Paws::SageMaker::AutoMLAlgorithmConfig>]

Stores the configuration information for the selection of algorithms
trained on tabular data.

The list of available algorithms to choose from depends on the training
mode set in C<TabularJobConfig.Mode>
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_TabularJobConfig.html).

=over

=item *

C<AlgorithmsConfig> should not be set if the training mode is set on
C<AUTO>.

=item *

When C<AlgorithmsConfig> is provided, one C<AutoMLAlgorithms> attribute
must be set and one only.

If the list of algorithms provided as values for C<AutoMLAlgorithms> is
empty, C<CandidateGenerationConfig> uses the full set of algorithms for
the given training mode.

=item *

When C<AlgorithmsConfig> is not provided, C<CandidateGenerationConfig>
uses the full set of algorithms for the given training mode.

=back

For the list of all algorithms per problem type and training mode, see
AutoMLAlgorithmConfig
(https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLAlgorithmConfig.html).

For more information on each algorithm, see the Algorithm support
(https://docs.aws.amazon.com/sagemaker/latest/dg/autopilot-model-support-validation.html#autopilot-algorithm-support)
section in Autopilot developer guide.


=head2 FeatureSpecificationS3Uri => Str

A URL to the Amazon S3 data source containing selected features from
the input data source to run an Autopilot job. You can input
C<FeatureAttributeNames> (optional) in JSON format as shown below:

C<{ "FeatureAttributeNames":["col1", "col2", ...] }>.

You can also specify the data type of the feature (optional) in the
format shown below:

C<{ "FeatureDataTypes":{"col1":"numeric", "col2":"categorical" ... } }>

These column keys may not include the target column.

In ensembling mode, Autopilot only supports the following data types:
C<numeric>, C<categorical>, C<text>, and C<datetime>. In HPO mode,
Autopilot can support C<numeric>, C<categorical>, C<text>, C<datetime>,
and C<sequence>.

If only C<FeatureDataTypes> is provided, the column keys (C<col1>,
C<col2>,..) should be a subset of the column names in the input data.

If both C<FeatureDataTypes> and C<FeatureAttributeNames> are provided,
then the column keys should be a subset of the column names provided in
C<FeatureAttributeNames>.

The key name C<FeatureAttributeNames> is fixed. The values listed in
C<["col1", "col2", ...]> are case sensitive and should be a list of
strings containing unique values that are a subset of the column names
in the input data. The list of columns provided must not include the
target column.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SageMaker>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

