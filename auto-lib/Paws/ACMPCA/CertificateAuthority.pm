# Generated by default/object.tt
package Paws::ACMPCA::CertificateAuthority;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str');
  has CertificateAuthorityConfiguration => (is => 'ro', isa => 'Paws::ACMPCA::CertificateAuthorityConfiguration');
  has CreatedAt => (is => 'ro', isa => 'Str');
  has FailureReason => (is => 'ro', isa => 'Str');
  has KeyStorageSecurityStandard => (is => 'ro', isa => 'Str');
  has LastStateChangeAt => (is => 'ro', isa => 'Str');
  has NotAfter => (is => 'ro', isa => 'Str');
  has NotBefore => (is => 'ro', isa => 'Str');
  has OwnerAccount => (is => 'ro', isa => 'Str');
  has RestorableUntil => (is => 'ro', isa => 'Str');
  has RevocationConfiguration => (is => 'ro', isa => 'Paws::ACMPCA::RevocationConfiguration');
  has Serial => (is => 'ro', isa => 'Str');
  has Status => (is => 'ro', isa => 'Str');
  has Type => (is => 'ro', isa => 'Str');
  has UsageMode => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::ACMPCA::CertificateAuthority

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ACMPCA::CertificateAuthority object:

  $service_obj->Method(Att1 => { Arn => $value, ..., UsageMode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ACMPCA::CertificateAuthority object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

Contains information about your private certificate authority (CA).
Your private CA can issue and revoke X.509 digital certificates.
Digital certificates verify that the entity named in the certificate
B<Subject> field owns or controls the public key contained in the
B<Subject Public Key Info> field. Call the CreateCertificateAuthority
(https://docs.aws.amazon.com/privateca/latest/APIReference/API_CreateCertificateAuthority.html)
action to create your private CA. You must then call the
GetCertificateAuthorityCertificate
(https://docs.aws.amazon.com/privateca/latest/APIReference/API_GetCertificateAuthorityCertificate.html)
action to retrieve a private CA certificate signing request (CSR). Sign
the CSR with your Amazon Web Services Private CA-hosted or on-premises
root or subordinate CA certificate. Call the
ImportCertificateAuthorityCertificate
(https://docs.aws.amazon.com/privateca/latest/APIReference/API_ImportCertificateAuthorityCertificate.html)
action to import the signed certificate into Certificate Manager (ACM).

=head1 ATTRIBUTES


=head2 Arn => Str

Amazon Resource Name (ARN) for your private certificate authority (CA).
The format is C< I<12345678-1234-1234-1234-123456789012> >.


=head2 CertificateAuthorityConfiguration => L<Paws::ACMPCA::CertificateAuthorityConfiguration>

Your private CA configuration.


=head2 CreatedAt => Str

Date and time at which your private CA was created.


=head2 FailureReason => Str

Reason the request to create your private CA failed.


=head2 KeyStorageSecurityStandard => Str

Defines a cryptographic key management compliance standard used for
handling CA keys.

Default: FIPS_140_2_LEVEL_3_OR_HIGHER

Note: Amazon Web Services Region ap-northeast-3 supports only
FIPS_140_2_LEVEL_2_OR_HIGHER. You must explicitly specify this
parameter and value when creating a CA in that Region. Specifying a
different value (or no value) results in an C<InvalidArgsException>
with the message "A certificate authority cannot be created in this
region with the specified security standard."


=head2 LastStateChangeAt => Str

Date and time at which your private CA was last updated.


=head2 NotAfter => Str

Date and time after which your private CA certificate is not valid.


=head2 NotBefore => Str

Date and time before which your private CA certificate is not valid.


=head2 OwnerAccount => Str

The Amazon Web Services account ID that owns the certificate authority.


=head2 RestorableUntil => Str

The period during which a deleted CA can be restored. For more
information, see the C<PermanentDeletionTimeInDays> parameter of the
DeleteCertificateAuthorityRequest
(https://docs.aws.amazon.com/privateca/latest/APIReference/API_DeleteCertificateAuthorityRequest.html)
action.


=head2 RevocationConfiguration => L<Paws::ACMPCA::RevocationConfiguration>

Information about the Online Certificate Status Protocol (OCSP)
configuration or certificate revocation list (CRL) created and
maintained by your private CA.


=head2 Serial => Str

Serial number of your private CA.


=head2 Status => Str

Status of your private CA.


=head2 Type => Str

Type of your private CA.


=head2 UsageMode => Str

Specifies whether the CA issues general-purpose certificates that
typically require a revocation mechanism, or short-lived certificates
that may optionally omit revocation because they expire quickly.
Short-lived certificate validity is limited to seven days.

The default value is GENERAL_PURPOSE.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ACMPCA>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

