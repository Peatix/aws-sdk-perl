# Generated by default/object.tt
package Paws::SSM::TargetLocation;
  use Moose;
  has Accounts => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ExcludeAccounts => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ExecutionRoleName => (is => 'ro', isa => 'Str');
  has IncludeChildOrganizationUnits => (is => 'ro', isa => 'Bool');
  has Regions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has TargetLocationAlarmConfiguration => (is => 'ro', isa => 'Paws::SSM::AlarmConfiguration');
  has TargetLocationMaxConcurrency => (is => 'ro', isa => 'Str');
  has TargetLocationMaxErrors => (is => 'ro', isa => 'Str');
  has Targets => (is => 'ro', isa => 'ArrayRef[Paws::SSM::Target]');
  has TargetsMaxConcurrency => (is => 'ro', isa => 'Str');
  has TargetsMaxErrors => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SSM::TargetLocation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SSM::TargetLocation object:

  $service_obj->Method(Att1 => { Accounts => $value, ..., TargetsMaxErrors => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SSM::TargetLocation object:

  $result = $service_obj->Method(...);
  $result->Att1->Accounts

=head1 DESCRIPTION

The combination of Amazon Web Services Regions and Amazon Web Services
accounts targeted by the current Automation execution.

=head1 ATTRIBUTES


=head2 Accounts => ArrayRef[Str|Undef]

The Amazon Web Services accounts targeted by the current Automation
execution.


=head2 ExcludeAccounts => ArrayRef[Str|Undef]

Amazon Web Services accounts or organizational units to exclude as
expanded targets.


=head2 ExecutionRoleName => Str

The Automation execution role used by the currently running Automation.
If not specified, the default value is
C<AWS-SystemsManager-AutomationExecutionRole>.


=head2 IncludeChildOrganizationUnits => Bool

Indicates whether to include child organizational units (OUs) that are
children of the targeted OUs. The default is C<false>.


=head2 Regions => ArrayRef[Str|Undef]

The Amazon Web Services Regions targeted by the current Automation
execution.


=head2 TargetLocationAlarmConfiguration => L<Paws::SSM::AlarmConfiguration>




=head2 TargetLocationMaxConcurrency => Str

The maximum number of Amazon Web Services Regions and Amazon Web
Services accounts allowed to run the Automation concurrently.


=head2 TargetLocationMaxErrors => Str

The maximum number of errors allowed before the system stops queueing
additional Automation executions for the currently running Automation.


=head2 Targets => ArrayRef[L<Paws::SSM::Target>]

A list of key-value mappings to target resources. If you specify values
for this data type, you must also specify a value for
C<TargetParameterName>.

This C<Targets> parameter takes precedence over the
C<StartAutomationExecution:Targets> parameter if both are supplied.


=head2 TargetsMaxConcurrency => Str

The maximum number of targets allowed to run this task in parallel.
This C<TargetsMaxConcurrency> takes precedence over the
C<StartAutomationExecution:MaxConcurrency> parameter if both are
supplied.


=head2 TargetsMaxErrors => Str

The maximum number of errors that are allowed before the system stops
running the automation on additional targets. This C<TargetsMaxErrors>
parameter takes precedence over the
C<StartAutomationExecution:MaxErrors> parameter if both are supplied.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SSM>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

