# Generated by default/object.tt
package Paws::Finspace::KxVolume;
  use Moose;
  has AvailabilityZoneIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'availabilityZoneIds', traits => ['NameInRequest']);
  has AzMode => (is => 'ro', isa => 'Str', request_name => 'azMode', traits => ['NameInRequest']);
  has CreatedTimestamp => (is => 'ro', isa => 'Str', request_name => 'createdTimestamp', traits => ['NameInRequest']);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest']);
  has LastModifiedTimestamp => (is => 'ro', isa => 'Str', request_name => 'lastModifiedTimestamp', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has StatusReason => (is => 'ro', isa => 'Str', request_name => 'statusReason', traits => ['NameInRequest']);
  has VolumeName => (is => 'ro', isa => 'Str', request_name => 'volumeName', traits => ['NameInRequest']);
  has VolumeType => (is => 'ro', isa => 'Str', request_name => 'volumeType', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Finspace::KxVolume

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Finspace::KxVolume object:

  $service_obj->Method(Att1 => { AvailabilityZoneIds => $value, ..., VolumeType => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Finspace::KxVolume object:

  $result = $service_obj->Method(...);
  $result->Att1->AvailabilityZoneIds

=head1 DESCRIPTION

The structure that contains the metadata of the volume.

=head1 ATTRIBUTES


=head2 AvailabilityZoneIds => ArrayRef[Str|Undef]

The identifier of the availability zones.


=head2 AzMode => Str

The number of availability zones you want to assign per volume.
Currently, FinSpace only supports C<SINGLE> for volumes. This places
dataview in a single AZ.


=head2 CreatedTimestamp => Str

The timestamp at which the volume was created in FinSpace. The value is
determined as epoch time in milliseconds. For example, the value for
Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.


=head2 Description => Str

A description of the volume.


=head2 LastModifiedTimestamp => Str

The last time that the volume was updated in FinSpace. The value is
determined as epoch time in milliseconds. For example, the value for
Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.


=head2 Status => Str

The status of volume.

=over

=item *

CREATING E<ndash> The volume creation is in progress.

=item *

CREATE_FAILED E<ndash> The volume creation has failed.

=item *

ACTIVE E<ndash> The volume is active.

=item *

UPDATING E<ndash> The volume is in the process of being updated.

=item *

UPDATE_FAILED E<ndash> The update action failed.

=item *

UPDATED E<ndash> The volume is successfully updated.

=item *

DELETING E<ndash> The volume is in the process of being deleted.

=item *

DELETE_FAILED E<ndash> The system failed to delete the volume.

=item *

DELETED E<ndash> The volume is successfully deleted.

=back



=head2 StatusReason => Str

The error message when a failed state occurs.


=head2 VolumeName => Str

A unique identifier for the volume.


=head2 VolumeType => Str

The type of file system volume. Currently, FinSpace only supports
C<NAS_1> volume type.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Finspace>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

