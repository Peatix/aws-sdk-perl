# Generated by default/object.tt
package Paws::Finspace::NetworkACLEntry;
  use Moose;
  has CidrBlock => (is => 'ro', isa => 'Str', request_name => 'cidrBlock', traits => ['NameInRequest'], required => 1);
  has IcmpTypeCode => (is => 'ro', isa => 'Paws::Finspace::IcmpTypeCode', request_name => 'icmpTypeCode', traits => ['NameInRequest']);
  has PortRange => (is => 'ro', isa => 'Paws::Finspace::PortRange', request_name => 'portRange', traits => ['NameInRequest']);
  has Protocol => (is => 'ro', isa => 'Str', request_name => 'protocol', traits => ['NameInRequest'], required => 1);
  has RuleAction => (is => 'ro', isa => 'Str', request_name => 'ruleAction', traits => ['NameInRequest'], required => 1);
  has RuleNumber => (is => 'ro', isa => 'Int', request_name => 'ruleNumber', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Finspace::NetworkACLEntry

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Finspace::NetworkACLEntry object:

  $service_obj->Method(Att1 => { CidrBlock => $value, ..., RuleNumber => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Finspace::NetworkACLEntry object:

  $result = $service_obj->Method(...);
  $result->Att1->CidrBlock

=head1 DESCRIPTION

The network access control list (ACL) is an optional layer of security
for your VPC that acts as a firewall for controlling traffic in and out
of one or more subnets. The entry is a set of numbered ingress and
egress rules that determine whether a packet should be allowed in or
out of a subnet associated with the ACL. We process the entries in the
ACL according to the rule numbers, in ascending order.

=head1 ATTRIBUTES


=head2 B<REQUIRED> CidrBlock => Str

The IPv4 network range to allow or deny, in CIDR notation. For example,
C<172.16.0.0/24>. We modify the specified CIDR block to its canonical
form. For example, if you specify C<100.68.0.18/18>, we modify it to
C<100.68.0.0/18>.


=head2 IcmpTypeCode => L<Paws::Finspace::IcmpTypeCode>

Defines the ICMP protocol that consists of the ICMP type and code.


=head2 PortRange => L<Paws::Finspace::PortRange>

The range of ports the rule applies to.


=head2 B<REQUIRED> Protocol => Str

The protocol number. A value of I<-1> means all the protocols.


=head2 B<REQUIRED> RuleAction => Str

Indicates whether to allow or deny the traffic that matches the rule.


=head2 B<REQUIRED> RuleNumber => Int

The rule number for the entry. For example I<100>. All the network ACL
entries are processed in ascending order by rule number.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Finspace>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

