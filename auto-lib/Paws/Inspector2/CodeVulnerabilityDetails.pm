# Generated by default/object.tt
package Paws::Inspector2::CodeVulnerabilityDetails;
  use Moose;
  has Cwes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'cwes', traits => ['NameInRequest'], required => 1);
  has DetectorId => (is => 'ro', isa => 'Str', request_name => 'detectorId', traits => ['NameInRequest'], required => 1);
  has DetectorName => (is => 'ro', isa => 'Str', request_name => 'detectorName', traits => ['NameInRequest'], required => 1);
  has DetectorTags => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'detectorTags', traits => ['NameInRequest']);
  has FilePath => (is => 'ro', isa => 'Paws::Inspector2::CodeFilePath', request_name => 'filePath', traits => ['NameInRequest'], required => 1);
  has ReferenceUrls => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'referenceUrls', traits => ['NameInRequest']);
  has RuleId => (is => 'ro', isa => 'Str', request_name => 'ruleId', traits => ['NameInRequest']);
  has SourceLambdaLayerArn => (is => 'ro', isa => 'Str', request_name => 'sourceLambdaLayerArn', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Inspector2::CodeVulnerabilityDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Inspector2::CodeVulnerabilityDetails object:

  $service_obj->Method(Att1 => { Cwes => $value, ..., SourceLambdaLayerArn => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Inspector2::CodeVulnerabilityDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->Cwes

=head1 DESCRIPTION

Contains information on the code vulnerability identified in your
Lambda function.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Cwes => ArrayRef[Str|Undef]

The Common Weakness Enumeration (CWE) item associated with the detected
vulnerability.


=head2 B<REQUIRED> DetectorId => Str

The ID for the Amazon CodeGuru detector associated with the finding.
For more information on detectors see Amazon CodeGuru Detector Library
(https://docs.aws.amazon.com/codeguru/detector-library).


=head2 B<REQUIRED> DetectorName => Str

The name of the detector used to identify the code vulnerability. For
more information on detectors see CodeGuru Detector Library
(https://docs.aws.amazon.com/codeguru/detector-library).


=head2 DetectorTags => ArrayRef[Str|Undef]

The detector tag associated with the vulnerability. Detector tags group
related vulnerabilities by common themes or tactics. For a list of
available tags by programming language, see Java tags
(https://docs.aws.amazon.com/codeguru/detector-library/java/tags/), or
Python tags
(https://docs.aws.amazon.com/codeguru/detector-library/python/tags/).


=head2 B<REQUIRED> FilePath => L<Paws::Inspector2::CodeFilePath>

Contains information on where the code vulnerability is located in your
code.


=head2 ReferenceUrls => ArrayRef[Str|Undef]

A URL containing supporting documentation about the code vulnerability
detected.


=head2 RuleId => Str

The identifier for a rule that was used to detect the code
vulnerability.


=head2 SourceLambdaLayerArn => Str

The Amazon Resource Name (ARN) of the Lambda layer that the code
vulnerability was detected in.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Inspector2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

