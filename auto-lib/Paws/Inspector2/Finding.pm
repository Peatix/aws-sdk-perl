# Generated by default/object.tt
package Paws::Inspector2::Finding;
  use Moose;
  has AwsAccountId => (is => 'ro', isa => 'Str', request_name => 'awsAccountId', traits => ['NameInRequest'], required => 1);
  has CodeVulnerabilityDetails => (is => 'ro', isa => 'Paws::Inspector2::CodeVulnerabilityDetails', request_name => 'codeVulnerabilityDetails', traits => ['NameInRequest']);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest'], required => 1);
  has Epss => (is => 'ro', isa => 'Paws::Inspector2::EpssDetails', request_name => 'epss', traits => ['NameInRequest']);
  has ExploitabilityDetails => (is => 'ro', isa => 'Paws::Inspector2::ExploitabilityDetails', request_name => 'exploitabilityDetails', traits => ['NameInRequest']);
  has ExploitAvailable => (is => 'ro', isa => 'Str', request_name => 'exploitAvailable', traits => ['NameInRequest']);
  has FindingArn => (is => 'ro', isa => 'Str', request_name => 'findingArn', traits => ['NameInRequest'], required => 1);
  has FirstObservedAt => (is => 'ro', isa => 'Str', request_name => 'firstObservedAt', traits => ['NameInRequest'], required => 1);
  has FixAvailable => (is => 'ro', isa => 'Str', request_name => 'fixAvailable', traits => ['NameInRequest']);
  has InspectorScore => (is => 'ro', isa => 'Num', request_name => 'inspectorScore', traits => ['NameInRequest']);
  has InspectorScoreDetails => (is => 'ro', isa => 'Paws::Inspector2::InspectorScoreDetails', request_name => 'inspectorScoreDetails', traits => ['NameInRequest']);
  has LastObservedAt => (is => 'ro', isa => 'Str', request_name => 'lastObservedAt', traits => ['NameInRequest'], required => 1);
  has NetworkReachabilityDetails => (is => 'ro', isa => 'Paws::Inspector2::NetworkReachabilityDetails', request_name => 'networkReachabilityDetails', traits => ['NameInRequest']);
  has PackageVulnerabilityDetails => (is => 'ro', isa => 'Paws::Inspector2::PackageVulnerabilityDetails', request_name => 'packageVulnerabilityDetails', traits => ['NameInRequest']);
  has Remediation => (is => 'ro', isa => 'Paws::Inspector2::Remediation', request_name => 'remediation', traits => ['NameInRequest'], required => 1);
  has Resources => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::Resource]', request_name => 'resources', traits => ['NameInRequest'], required => 1);
  has Severity => (is => 'ro', isa => 'Str', request_name => 'severity', traits => ['NameInRequest'], required => 1);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest'], required => 1);
  has Title => (is => 'ro', isa => 'Str', request_name => 'title', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest'], required => 1);
  has UpdatedAt => (is => 'ro', isa => 'Str', request_name => 'updatedAt', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Inspector2::Finding

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Inspector2::Finding object:

  $service_obj->Method(Att1 => { AwsAccountId => $value, ..., UpdatedAt => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Inspector2::Finding object:

  $result = $service_obj->Method(...);
  $result->Att1->AwsAccountId

=head1 DESCRIPTION

Details about an Amazon Inspector finding.

=head1 ATTRIBUTES


=head2 B<REQUIRED> AwsAccountId => Str

The Amazon Web Services account ID associated with the finding.


=head2 CodeVulnerabilityDetails => L<Paws::Inspector2::CodeVulnerabilityDetails>

Details about the code vulnerability identified in a Lambda function
used to filter findings.


=head2 B<REQUIRED> Description => Str

The description of the finding.


=head2 Epss => L<Paws::Inspector2::EpssDetails>

The finding's EPSS score.


=head2 ExploitabilityDetails => L<Paws::Inspector2::ExploitabilityDetails>

The details of an exploit available for a finding discovered in your
environment.


=head2 ExploitAvailable => Str

If a finding discovered in your environment has an exploit available.


=head2 B<REQUIRED> FindingArn => Str

The Amazon Resource Number (ARN) of the finding.


=head2 B<REQUIRED> FirstObservedAt => Str

The date and time that the finding was first observed.


=head2 FixAvailable => Str

Details on whether a fix is available through a version update. This
value can be C<YES>, C<NO>, or C<PARTIAL>. A C<PARTIAL> fix means that
some, but not all, of the packages identified in the finding have fixes
available through updated versions.


=head2 InspectorScore => Num

The Amazon Inspector score given to the finding.


=head2 InspectorScoreDetails => L<Paws::Inspector2::InspectorScoreDetails>

An object that contains details of the Amazon Inspector score.


=head2 B<REQUIRED> LastObservedAt => Str

The date and time the finding was last observed. This timestamp for
this field remains unchanged until a finding is updated.


=head2 NetworkReachabilityDetails => L<Paws::Inspector2::NetworkReachabilityDetails>

An object that contains the details of a network reachability finding.


=head2 PackageVulnerabilityDetails => L<Paws::Inspector2::PackageVulnerabilityDetails>

An object that contains the details of a package vulnerability finding.


=head2 B<REQUIRED> Remediation => L<Paws::Inspector2::Remediation>

An object that contains the details about how to remediate a finding.


=head2 B<REQUIRED> Resources => ArrayRef[L<Paws::Inspector2::Resource>]

Contains information on the resources involved in a finding. The
C<resource> value determines the valid values for C<type> in your
request. For more information, see Finding types
(https://docs.aws.amazon.com/inspector/latest/user/findings-types.html)
in the Amazon Inspector user guide.


=head2 B<REQUIRED> Severity => Str

The severity of the finding. C<UNTRIAGED> applies to
C<PACKAGE_VULNERABILITY> type findings that the vendor has not assigned
a severity yet. For more information, see Severity levels for findings
(https://docs.aws.amazon.com/inspector/latest/user/findings-understanding-severity.html)
in the Amazon Inspector user guide.


=head2 B<REQUIRED> Status => Str

The status of the finding.


=head2 Title => Str

The title of the finding.


=head2 B<REQUIRED> Type => Str

The type of the finding. The C<type> value determines the valid values
for C<resource> in your request. For more information, see Finding
types
(https://docs.aws.amazon.com/inspector/latest/user/findings-types.html)
in the Amazon Inspector user guide.


=head2 UpdatedAt => Str

The date and time the finding was last updated at.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Inspector2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

