# Generated by default/object.tt
package Paws::Inspector2::FilterCriteria;
  use Moose;
  has AwsAccountId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'awsAccountId', traits => ['NameInRequest']);
  has CodeVulnerabilityDetectorName => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'codeVulnerabilityDetectorName', traits => ['NameInRequest']);
  has CodeVulnerabilityDetectorTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'codeVulnerabilityDetectorTags', traits => ['NameInRequest']);
  has CodeVulnerabilityFilePath => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'codeVulnerabilityFilePath', traits => ['NameInRequest']);
  has ComponentId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'componentId', traits => ['NameInRequest']);
  has ComponentType => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'componentType', traits => ['NameInRequest']);
  has Ec2InstanceImageId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ec2InstanceImageId', traits => ['NameInRequest']);
  has Ec2InstanceSubnetId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ec2InstanceSubnetId', traits => ['NameInRequest']);
  has Ec2InstanceVpcId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ec2InstanceVpcId', traits => ['NameInRequest']);
  has EcrImageArchitecture => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ecrImageArchitecture', traits => ['NameInRequest']);
  has EcrImageHash => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ecrImageHash', traits => ['NameInRequest']);
  has EcrImagePushedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::DateFilter]', request_name => 'ecrImagePushedAt', traits => ['NameInRequest']);
  has EcrImageRegistry => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ecrImageRegistry', traits => ['NameInRequest']);
  has EcrImageRepositoryName => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ecrImageRepositoryName', traits => ['NameInRequest']);
  has EcrImageTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'ecrImageTags', traits => ['NameInRequest']);
  has EpssScore => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::NumberFilter]', request_name => 'epssScore', traits => ['NameInRequest']);
  has ExploitAvailable => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'exploitAvailable', traits => ['NameInRequest']);
  has FindingArn => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'findingArn', traits => ['NameInRequest']);
  has FindingStatus => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'findingStatus', traits => ['NameInRequest']);
  has FindingType => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'findingType', traits => ['NameInRequest']);
  has FirstObservedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::DateFilter]', request_name => 'firstObservedAt', traits => ['NameInRequest']);
  has FixAvailable => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'fixAvailable', traits => ['NameInRequest']);
  has InspectorScore => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::NumberFilter]', request_name => 'inspectorScore', traits => ['NameInRequest']);
  has LambdaFunctionExecutionRoleArn => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'lambdaFunctionExecutionRoleArn', traits => ['NameInRequest']);
  has LambdaFunctionLastModifiedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::DateFilter]', request_name => 'lambdaFunctionLastModifiedAt', traits => ['NameInRequest']);
  has LambdaFunctionLayers => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'lambdaFunctionLayers', traits => ['NameInRequest']);
  has LambdaFunctionName => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'lambdaFunctionName', traits => ['NameInRequest']);
  has LambdaFunctionRuntime => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'lambdaFunctionRuntime', traits => ['NameInRequest']);
  has LastObservedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::DateFilter]', request_name => 'lastObservedAt', traits => ['NameInRequest']);
  has NetworkProtocol => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'networkProtocol', traits => ['NameInRequest']);
  has PortRange => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::PortRangeFilter]', request_name => 'portRange', traits => ['NameInRequest']);
  has RelatedVulnerabilities => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'relatedVulnerabilities', traits => ['NameInRequest']);
  has ResourceId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'resourceId', traits => ['NameInRequest']);
  has ResourceTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::MapFilter]', request_name => 'resourceTags', traits => ['NameInRequest']);
  has ResourceType => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'resourceType', traits => ['NameInRequest']);
  has Severity => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'severity', traits => ['NameInRequest']);
  has Title => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'title', traits => ['NameInRequest']);
  has UpdatedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::DateFilter]', request_name => 'updatedAt', traits => ['NameInRequest']);
  has VendorSeverity => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'vendorSeverity', traits => ['NameInRequest']);
  has VulnerabilityId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'vulnerabilityId', traits => ['NameInRequest']);
  has VulnerabilitySource => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::StringFilter]', request_name => 'vulnerabilitySource', traits => ['NameInRequest']);
  has VulnerablePackages => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::PackageFilter]', request_name => 'vulnerablePackages', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Inspector2::FilterCriteria

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Inspector2::FilterCriteria object:

  $service_obj->Method(Att1 => { AwsAccountId => $value, ..., VulnerablePackages => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Inspector2::FilterCriteria object:

  $result = $service_obj->Method(...);
  $result->Att1->AwsAccountId

=head1 DESCRIPTION

Details on the criteria used to define the filter.

=head1 ATTRIBUTES


=head2 AwsAccountId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon Web Services account IDs used to filter findings.


=head2 CodeVulnerabilityDetectorName => ArrayRef[L<Paws::Inspector2::StringFilter>]

The name of the detector used to identify a code vulnerability in a
Lambda function used to filter findings.


=head2 CodeVulnerabilityDetectorTags => ArrayRef[L<Paws::Inspector2::StringFilter>]

The detector type tag associated with the vulnerability used to filter
findings. Detector tags group related vulnerabilities by common themes
or tactics. For a list of available tags by programming language, see
Java tags
(https://docs.aws.amazon.com/codeguru/detector-library/java/tags/), or
Python tags
(https://docs.aws.amazon.com/codeguru/detector-library/python/tags/).


=head2 CodeVulnerabilityFilePath => ArrayRef[L<Paws::Inspector2::StringFilter>]

The file path to the file in a Lambda function that contains a code
vulnerability used to filter findings.


=head2 ComponentId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the component IDs used to filter findings.


=head2 ComponentType => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the component types used to filter findings.


=head2 Ec2InstanceImageId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon EC2 instance image IDs used to filter findings.


=head2 Ec2InstanceSubnetId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon EC2 instance subnet IDs used to filter findings.


=head2 Ec2InstanceVpcId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon EC2 instance VPC IDs used to filter findings.


=head2 EcrImageArchitecture => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon ECR image architecture types used to filter
findings.


=head2 EcrImageHash => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details of the Amazon ECR image hashes used to filter findings.


=head2 EcrImagePushedAt => ArrayRef[L<Paws::Inspector2::DateFilter>]

Details on the Amazon ECR image push date and time used to filter
findings.


=head2 EcrImageRegistry => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the Amazon ECR registry used to filter findings.


=head2 EcrImageRepositoryName => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the name of the Amazon ECR repository used to filter
findings.


=head2 EcrImageTags => ArrayRef[L<Paws::Inspector2::StringFilter>]

The tags attached to the Amazon ECR container image.


=head2 EpssScore => ArrayRef[L<Paws::Inspector2::NumberFilter>]

The EPSS score used to filter findings.


=head2 ExploitAvailable => ArrayRef[L<Paws::Inspector2::StringFilter>]

Filters the list of Amazon Web Services Lambda findings by the
availability of exploits.


=head2 FindingArn => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the finding ARNs used to filter findings.


=head2 FindingStatus => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the finding status types used to filter findings.


=head2 FindingType => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the finding types used to filter findings.


=head2 FirstObservedAt => ArrayRef[L<Paws::Inspector2::DateFilter>]

Details on the date and time a finding was first seen used to filter
findings.


=head2 FixAvailable => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on whether a fix is available through a version update. This
value can be C<YES>, C<NO>, or C<PARTIAL>. A C<PARTIAL> fix means that
some, but not all, of the packages identified in the finding have fixes
available through updated versions.


=head2 InspectorScore => ArrayRef[L<Paws::Inspector2::NumberFilter>]

The Amazon Inspector score to filter on.


=head2 LambdaFunctionExecutionRoleArn => ArrayRef[L<Paws::Inspector2::StringFilter>]

Filters the list of Amazon Web Services Lambda functions by execution
role.


=head2 LambdaFunctionLastModifiedAt => ArrayRef[L<Paws::Inspector2::DateFilter>]

Filters the list of Amazon Web Services Lambda functions by the date
and time that a user last updated the configuration, in ISO 8601 format
(https://www.iso.org/iso-8601-date-and-time-format.html)


=head2 LambdaFunctionLayers => ArrayRef[L<Paws::Inspector2::StringFilter>]

Filters the list of Amazon Web Services Lambda functions by the
function's layers
(https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html).
A Lambda function can have up to five layers.


=head2 LambdaFunctionName => ArrayRef[L<Paws::Inspector2::StringFilter>]

Filters the list of Amazon Web Services Lambda functions by the name of
the function.


=head2 LambdaFunctionRuntime => ArrayRef[L<Paws::Inspector2::StringFilter>]

Filters the list of Amazon Web Services Lambda functions by the runtime
environment for the Lambda function.


=head2 LastObservedAt => ArrayRef[L<Paws::Inspector2::DateFilter>]

Details on the date and time a finding was last seen used to filter
findings.


=head2 NetworkProtocol => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on network protocol used to filter findings.


=head2 PortRange => ArrayRef[L<Paws::Inspector2::PortRangeFilter>]

Details on the port ranges used to filter findings.


=head2 RelatedVulnerabilities => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the related vulnerabilities used to filter findings.


=head2 ResourceId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the resource IDs used to filter findings.


=head2 ResourceTags => ArrayRef[L<Paws::Inspector2::MapFilter>]

Details on the resource tags used to filter findings.


=head2 ResourceType => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the resource types used to filter findings.


=head2 Severity => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the severity used to filter findings.


=head2 Title => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the finding title used to filter findings.


=head2 UpdatedAt => ArrayRef[L<Paws::Inspector2::DateFilter>]

Details on the date and time a finding was last updated at used to
filter findings.


=head2 VendorSeverity => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the vendor severity used to filter findings.


=head2 VulnerabilityId => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the vulnerability ID used to filter findings.


=head2 VulnerabilitySource => ArrayRef[L<Paws::Inspector2::StringFilter>]

Details on the vulnerability type used to filter findings.


=head2 VulnerablePackages => ArrayRef[L<Paws::Inspector2::PackageFilter>]

Details on the vulnerable packages used to filter findings.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Inspector2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

