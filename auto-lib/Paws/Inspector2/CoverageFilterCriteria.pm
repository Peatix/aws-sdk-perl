# Generated by default/object.tt
package Paws::Inspector2::CoverageFilterCriteria;
  use Moose;
  has AccountId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'accountId', traits => ['NameInRequest']);
  has Ec2InstanceTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageMapFilter]', request_name => 'ec2InstanceTags', traits => ['NameInRequest']);
  has EcrImageTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'ecrImageTags', traits => ['NameInRequest']);
  has EcrRepositoryName => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'ecrRepositoryName', traits => ['NameInRequest']);
  has ImagePulledAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageDateFilter]', request_name => 'imagePulledAt', traits => ['NameInRequest']);
  has LambdaFunctionName => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'lambdaFunctionName', traits => ['NameInRequest']);
  has LambdaFunctionRuntime => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'lambdaFunctionRuntime', traits => ['NameInRequest']);
  has LambdaFunctionTags => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageMapFilter]', request_name => 'lambdaFunctionTags', traits => ['NameInRequest']);
  has LastScannedAt => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageDateFilter]', request_name => 'lastScannedAt', traits => ['NameInRequest']);
  has ResourceId => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'resourceId', traits => ['NameInRequest']);
  has ResourceType => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'resourceType', traits => ['NameInRequest']);
  has ScanMode => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'scanMode', traits => ['NameInRequest']);
  has ScanStatusCode => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'scanStatusCode', traits => ['NameInRequest']);
  has ScanStatusReason => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'scanStatusReason', traits => ['NameInRequest']);
  has ScanType => (is => 'ro', isa => 'ArrayRef[Paws::Inspector2::CoverageStringFilter]', request_name => 'scanType', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Inspector2::CoverageFilterCriteria

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Inspector2::CoverageFilterCriteria object:

  $service_obj->Method(Att1 => { AccountId => $value, ..., ScanType => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Inspector2::CoverageFilterCriteria object:

  $result = $service_obj->Method(...);
  $result->Att1->AccountId

=head1 DESCRIPTION

A structure that identifies filter criteria for
C<GetCoverageStatistics>.

=head1 ATTRIBUTES


=head2 AccountId => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

An array of Amazon Web Services account IDs to return coverage
statistics for.


=head2 Ec2InstanceTags => ArrayRef[L<Paws::Inspector2::CoverageMapFilter>]

The Amazon EC2 instance tags to filter on.


=head2 EcrImageTags => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

The Amazon ECR image tags to filter on.


=head2 EcrRepositoryName => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

The Amazon ECR repository name to filter on.


=head2 ImagePulledAt => ArrayRef[L<Paws::Inspector2::CoverageDateFilter>]

The date an image was last pulled at.


=head2 LambdaFunctionName => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

Returns coverage statistics for Amazon Web Services Lambda functions
filtered by function names.


=head2 LambdaFunctionRuntime => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

Returns coverage statistics for Amazon Web Services Lambda functions
filtered by runtime.


=head2 LambdaFunctionTags => ArrayRef[L<Paws::Inspector2::CoverageMapFilter>]

Returns coverage statistics for Amazon Web Services Lambda functions
filtered by tag.


=head2 LastScannedAt => ArrayRef[L<Paws::Inspector2::CoverageDateFilter>]

Filters Amazon Web Services resources based on whether Amazon Inspector
has checked them for vulnerabilities within the specified time range.


=head2 ResourceId => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

An array of Amazon Web Services resource IDs to return coverage
statistics for.


=head2 ResourceType => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

An array of Amazon Web Services resource types to return coverage
statistics for. The values can be C<AWS_EC2_INSTANCE>,
C<AWS_LAMBDA_FUNCTION>, C<AWS_ECR_CONTAINER_IMAGE>,
C<AWS_ECR_REPOSITORY> or C<AWS_ACCOUNT>.


=head2 ScanMode => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

The filter to search for Amazon EC2 instance coverage by scan mode.
Valid values are C<EC2_SSM_AGENT_BASED> and C<EC2_AGENTLESS>.


=head2 ScanStatusCode => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

The scan status code to filter on. Valid values are:
C<ValidationException>, C<InternalServerException>,
C<ResourceNotFoundException>, C<BadRequestException>, and
C<ThrottlingException>.


=head2 ScanStatusReason => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

The scan status reason to filter on.


=head2 ScanType => ArrayRef[L<Paws::Inspector2::CoverageStringFilter>]

An array of Amazon Inspector scan types to return coverage statistics
for.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Inspector2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

