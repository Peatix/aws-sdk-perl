# Generated by default/object.tt
package Paws::Inspector2::ScanStatus;
  use Moose;
  has Reason => (is => 'ro', isa => 'Str', request_name => 'reason', traits => ['NameInRequest'], required => 1);
  has StatusCode => (is => 'ro', isa => 'Str', request_name => 'statusCode', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Inspector2::ScanStatus

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Inspector2::ScanStatus object:

  $service_obj->Method(Att1 => { Reason => $value, ..., StatusCode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Inspector2::ScanStatus object:

  $result = $service_obj->Method(...);
  $result->Att1->Reason

=head1 DESCRIPTION

The status of the scan.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Reason => Str

The scan status. Possible return values and descriptions are:

C<PENDING_INITIAL_SCAN> - This resource has been identified for
scanning, results will be available soon.

C<ACCESS_DENIED> - Resource access policy restricting Amazon Inspector
access. Please update the IAM policy.

C<INTERNAL_ERROR> - Amazon Inspector has encountered an internal error
for this resource. Amazon Inspector service will automatically resolve
the issue and resume the scanning. No action required from the user.

C<UNMANAGED_EC2_INSTANCE> - The EC2 instance is not managed by SSM,
please use the following SSM automation to remediate the issue:
https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-awssupport-troubleshoot-managed-instance.html
(https://docs.aws.amazon.com/systems-manager-automation-runbooks/latest/userguide/automation-awssupport-troubleshoot-managed-instance.html).
Once the instance becomes managed by SSM, Inspector will automatically
begin scanning this instance.

C<UNSUPPORTED_OS> - Amazon Inspector does not support this OS,
architecture, or image manifest type at this time. To see a complete
list of supported operating systems see:
https://docs.aws.amazon.com/inspector/latest/user/supported.html.

C<SCAN_ELIGIBILITY_EXPIRED> - The configured scan duration has lapsed
for this image.

C<RESOURCE_TERMINATED> - This resource has been terminated. The
findings and coverage associated with this resource are in the process
of being cleaned up.

C<SUCCESSFUL> - The scan was successful.

C<NO_RESOURCES_FOUND> - Reserved for future use.

C<IMAGE_SIZE_EXCEEDED> - Reserved for future use.

C<SCAN_FREQUENCY_MANUAL> - This image will not be covered by Amazon
Inspector due to the repository scan frequency configuration.

C<SCAN_FREQUENCY_SCAN_ON_PUSH >- This image will be scanned one time
and will not new findings because of the scan frequency configuration.

C<EC2_INSTANCE_STOPPED> - This EC2 instance is in a stopped state,
therefore, Amazon Inspector will pause scanning. The existing findings
will continue to exist until the instance is terminated. Once the
instance is re-started, Inspector will automatically start scanning the
instance again. Please note that you will not be charged for this
instance while itE<rsquo>s in a stopped state.

C<PENDING_DISABLE> - This resource is pending cleanup during
disablement. The customer will not be billed while a resource is in the
pending disable status.

C<NO INVENTORY> - Amazon Inspector couldnE<rsquo>t find software
application inventory to scan for vulnerabilities. This might be caused
due to required Amazon Inspector associations being deleted or failing
to run on your resource. Please verify the status of
C<InspectorInventoryCollection-do-not-delete> association in the SSM
console for the resource. Additionally, you can verify the
instanceE<rsquo>s inventory in the SSM Fleet Manager console.

C<STALE_INVENTORY> - Amazon Inspector wasnE<rsquo>t able to collect an
updated software application inventory in the last 7 days. Please
confirm the required Amazon Inspector associations still exist and you
can still see an updated inventory in the SSM console.

C<EXCLUDED_BY_TAG> - This resource was not scanned because it has been
excluded by a tag.

C<UNSUPPORTED_RUNTIME> - The function was not scanned because it has an
unsupported runtime. To see a complete list of supported runtimes see:
https://docs.aws.amazon.com/inspector/latest/user/supported.html.

C<UNSUPPORTED_MEDIA_TYPE >- The ECR image has an unsupported media
type.

C<UNSUPPORTED_CONFIG_FILE> - Reserved for future use.

C<DEEP_INSPECTION_PACKAGE_COLLECTION_LIMIT_EXCEEDED> - The instance has
exceeded the 5000 package limit for Amazon Inspector Deep inspection.
To resume Deep inspection for this instance you can try to adjust the
custom paths associated with the account.

C<DEEP_INSPECTION_DAILY_SSM_INVENTORY_LIMIT_EXCEEDED> - The SSM agent
couldn't send inventory to Amazon Inspector because the SSM quota for
Inventory data collected per instance per day has already been reached
for this instance.

C<DEEP_INSPECTION_COLLECTION_TIME_LIMIT_EXCEEDED> - Amazon Inspector
failed to extract the package inventory because the package collection
time exceeding the maximum threshold of 15 minutes.

C<DEEP_INSPECTION_NO_INVENTORY> The Amazon Inspector plugin hasn't yet
been able to collect an inventory of packages for this instance. This
is usually the result of a pending scan, however, if this status
persists after 6 hours, use SSM to ensure that the required Amazon
Inspector associations exist and are running for the instance.


=head2 B<REQUIRED> StatusCode => Str

The status code of the scan.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Inspector2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

