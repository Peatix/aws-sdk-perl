# Generated by default/object.tt
package Paws::QBusiness::CustomPluginConfiguration;
  use Moose;
  has ApiSchema => (is => 'ro', isa => 'Paws::QBusiness::APISchema', request_name => 'apiSchema', traits => ['NameInRequest'], required => 1);
  has ApiSchemaType => (is => 'ro', isa => 'Str', request_name => 'apiSchemaType', traits => ['NameInRequest'], required => 1);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::QBusiness::CustomPluginConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::QBusiness::CustomPluginConfiguration object:

  $service_obj->Method(Att1 => { ApiSchema => $value, ..., Description => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::QBusiness::CustomPluginConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->ApiSchema

=head1 DESCRIPTION

Configuration information required to create a custom plugin.

=head1 ATTRIBUTES


=head2 B<REQUIRED> ApiSchema => L<Paws::QBusiness::APISchema>

Contains either details about the S3 object containing the OpenAPI
schema for the action group or the JSON or YAML-formatted payload
defining the schema.


=head2 B<REQUIRED> ApiSchemaType => Str

The type of OpenAPI schema to use.


=head2 B<REQUIRED> Description => Str

A description for your custom plugin configuration.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::QBusiness>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

