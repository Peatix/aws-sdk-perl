# Generated by default/object.tt
package Paws::MQ::User;
  use Moose;
  has ConsoleAccess => (is => 'ro', isa => 'Bool', request_name => 'consoleAccess', traits => ['NameInRequest']);
  has Groups => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'groups', traits => ['NameInRequest']);
  has Password => (is => 'ro', isa => 'Str', request_name => 'password', traits => ['NameInRequest'], required => 1);
  has ReplicationUser => (is => 'ro', isa => 'Bool', request_name => 'replicationUser', traits => ['NameInRequest']);
  has Username => (is => 'ro', isa => 'Str', request_name => 'username', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MQ::User

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MQ::User object:

  $service_obj->Method(Att1 => { ConsoleAccess => $value, ..., Username => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MQ::User object:

  $result = $service_obj->Method(...);
  $result->Att1->ConsoleAccess

=head1 DESCRIPTION

A user associated with the broker. For Amazon MQ for RabbitMQ brokers,
one and only one administrative user is accepted and created when a
broker is first provisioned. All subsequent broker users are created by
making RabbitMQ API calls directly to brokers or via the RabbitMQ web
console.

=head1 ATTRIBUTES


=head2 ConsoleAccess => Bool

Enables access to the ActiveMQ Web Console for the ActiveMQ user. Does
not apply to RabbitMQ brokers.


=head2 Groups => ArrayRef[Str|Undef]

The list of groups (20 maximum) to which the ActiveMQ user belongs.
This value can contain only alphanumeric characters, dashes, periods,
underscores, and tildes (- . _ ~). This value must be 2-100 characters
long. Does not apply to RabbitMQ brokers.


=head2 B<REQUIRED> Password => Str

Required. The password of the user. This value must be at least 12
characters long, must contain at least 4 unique characters, and must
not contain commas, colons, or equal signs (,:=).


=head2 ReplicationUser => Bool

Defines if this user is intended for CRDR replication purposes.


=head2 B<REQUIRED> Username => Str

The username of the broker user. The following restrictions apply to
broker usernames:

=over

=item *

For Amazon MQ for ActiveMQ brokers, this value can contain only
alphanumeric characters, dashes, periods, underscores, and tildes (- .
_ ~). This value must be 2-100 characters long.

=item *

paraE<gt>For Amazon MQ for RabbitMQ brokers, this value can contain
only alphanumeric characters, dashes, periods, underscores (- . _).
This value must not contain a tilde (~) character. Amazon MQ prohibts
using guest as a valid usename. This value must be 2-100 characters
long.

=back

Do not add personally identifiable information (PII) or other
confidential or sensitive information in broker usernames. Broker
usernames are accessible to other Amazon Web Services services,
including CloudWatch Logs. Broker usernames are not intended to be used
for private or sensitive data.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MQ>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

