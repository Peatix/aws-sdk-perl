# Generated by default/object.tt
package Paws::SecurityHub::AwsWafRateBasedRuleMatchPredicate;
  use Moose;
  has DataId => (is => 'ro', isa => 'Str');
  has Negated => (is => 'ro', isa => 'Bool');
  has Type => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityHub::AwsWafRateBasedRuleMatchPredicate

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityHub::AwsWafRateBasedRuleMatchPredicate object:

  $service_obj->Method(Att1 => { DataId => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityHub::AwsWafRateBasedRuleMatchPredicate object:

  $result = $service_obj->Method(...);
  $result->Att1->DataId

=head1 DESCRIPTION

A match predicate. A predicate might look for characteristics such as
specific IP addresses, geographic locations, or sizes.

=head1 ATTRIBUTES


=head2 DataId => Str

The unique identifier for the predicate.


=head2 Negated => Bool

If set to C<true>, then the rule actions are performed on requests that
match the predicate settings.

If set to C<false>, then the rule actions are performed on all requests
except those that match the predicate settings.


=head2 Type => Str

The type of predicate. Valid values are as follows:

=over

=item *

C<ByteMatch>

=item *

C<GeoMatch>

=item *

C<IPMatch>

=item *

C<RegexMatch>

=item *

C<SizeConstraint>

=item *

C<SqlInjectionMatch>

=item *

C<XssMatch>

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityHub>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

