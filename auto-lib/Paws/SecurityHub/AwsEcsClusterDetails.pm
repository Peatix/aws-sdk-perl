# Generated by default/object.tt
package Paws::SecurityHub::AwsEcsClusterDetails;
  use Moose;
  has ActiveServicesCount => (is => 'ro', isa => 'Int');
  has CapacityProviders => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ClusterArn => (is => 'ro', isa => 'Str');
  has ClusterName => (is => 'ro', isa => 'Str');
  has ClusterSettings => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsClusterClusterSettingsDetails]');
  has Configuration => (is => 'ro', isa => 'Paws::SecurityHub::AwsEcsClusterConfigurationDetails');
  has DefaultCapacityProviderStrategy => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsClusterDefaultCapacityProviderStrategyDetails]');
  has RegisteredContainerInstancesCount => (is => 'ro', isa => 'Int');
  has RunningTasksCount => (is => 'ro', isa => 'Int');
  has Status => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityHub::AwsEcsClusterDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityHub::AwsEcsClusterDetails object:

  $service_obj->Method(Att1 => { ActiveServicesCount => $value, ..., Status => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityHub::AwsEcsClusterDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->ActiveServicesCount

=head1 DESCRIPTION

Provides details about an Amazon ECS cluster.

=head1 ATTRIBUTES


=head2 ActiveServicesCount => Int

The number of services that are running on the cluster in an C<ACTIVE>
state. You can view these services with the Amazon ECS C<ListServices>
(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html)
API operation.


=head2 CapacityProviders => ArrayRef[Str|Undef]

The short name of one or more capacity providers to associate with the
cluster.


=head2 ClusterArn => Str

The Amazon Resource Name (ARN) that identifies the cluster.


=head2 ClusterName => Str

A name that you use to identify your cluster.


=head2 ClusterSettings => ArrayRef[L<Paws::SecurityHub::AwsEcsClusterClusterSettingsDetails>]

The setting to use to create the cluster. Specifically used to
configure whether to enable CloudWatch Container Insights for the
cluster.


=head2 Configuration => L<Paws::SecurityHub::AwsEcsClusterConfigurationDetails>

The run command configuration for the cluster.


=head2 DefaultCapacityProviderStrategy => ArrayRef[L<Paws::SecurityHub::AwsEcsClusterDefaultCapacityProviderStrategyDetails>]

The default capacity provider strategy for the cluster. The default
capacity provider strategy is used when services or tasks are run
without a specified launch type or capacity provider strategy.


=head2 RegisteredContainerInstancesCount => Int

The number of container instances registered into the cluster. This
includes container instances in both C<ACTIVE> and C<DRAINING> status.


=head2 RunningTasksCount => Int

The number of tasks in the cluster that are in the C<RUNNING> state.


=head2 Status => Str

The status of the cluster.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityHub>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

