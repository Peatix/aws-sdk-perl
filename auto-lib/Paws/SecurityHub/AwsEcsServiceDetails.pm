# Generated by default/object.tt
package Paws::SecurityHub::AwsEcsServiceDetails;
  use Moose;
  has CapacityProviderStrategy => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsServiceCapacityProviderStrategyDetails]');
  has Cluster => (is => 'ro', isa => 'Str');
  has DeploymentConfiguration => (is => 'ro', isa => 'Paws::SecurityHub::AwsEcsServiceDeploymentConfigurationDetails');
  has DeploymentController => (is => 'ro', isa => 'Paws::SecurityHub::AwsEcsServiceDeploymentControllerDetails');
  has DesiredCount => (is => 'ro', isa => 'Int');
  has EnableEcsManagedTags => (is => 'ro', isa => 'Bool');
  has EnableExecuteCommand => (is => 'ro', isa => 'Bool');
  has HealthCheckGracePeriodSeconds => (is => 'ro', isa => 'Int');
  has LaunchType => (is => 'ro', isa => 'Str');
  has LoadBalancers => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsServiceLoadBalancersDetails]');
  has Name => (is => 'ro', isa => 'Str');
  has NetworkConfiguration => (is => 'ro', isa => 'Paws::SecurityHub::AwsEcsServiceNetworkConfigurationDetails');
  has PlacementConstraints => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsServicePlacementConstraintsDetails]');
  has PlacementStrategies => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsServicePlacementStrategiesDetails]');
  has PlatformVersion => (is => 'ro', isa => 'Str');
  has PropagateTags => (is => 'ro', isa => 'Str');
  has Role => (is => 'ro', isa => 'Str');
  has SchedulingStrategy => (is => 'ro', isa => 'Str');
  has ServiceArn => (is => 'ro', isa => 'Str');
  has ServiceName => (is => 'ro', isa => 'Str');
  has ServiceRegistries => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsEcsServiceServiceRegistriesDetails]');
  has TaskDefinition => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityHub::AwsEcsServiceDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityHub::AwsEcsServiceDetails object:

  $service_obj->Method(Att1 => { CapacityProviderStrategy => $value, ..., TaskDefinition => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityHub::AwsEcsServiceDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->CapacityProviderStrategy

=head1 DESCRIPTION

Provides details about a service within an ECS cluster.

=head1 ATTRIBUTES


=head2 CapacityProviderStrategy => ArrayRef[L<Paws::SecurityHub::AwsEcsServiceCapacityProviderStrategyDetails>]

The capacity provider strategy that the service uses.


=head2 Cluster => Str

The ARN of the cluster that hosts the service.


=head2 DeploymentConfiguration => L<Paws::SecurityHub::AwsEcsServiceDeploymentConfigurationDetails>

Deployment parameters for the service. Includes the number of tasks
that run and the order in which to start and stop tasks.


=head2 DeploymentController => L<Paws::SecurityHub::AwsEcsServiceDeploymentControllerDetails>

Contains the deployment controller type that the service uses.


=head2 DesiredCount => Int

The number of instantiations of the task definition to run on the
service.


=head2 EnableEcsManagedTags => Bool

Whether to enable Amazon ECS managed tags for the tasks in the service.


=head2 EnableExecuteCommand => Bool

Whether the execute command functionality is enabled for the service.


=head2 HealthCheckGracePeriodSeconds => Int

After a task starts, the amount of time in seconds that the Amazon ECS
service scheduler ignores unhealthy Elastic Load Balancing target
health checks.


=head2 LaunchType => Str

The launch type that the service uses.

Valid values: C<EC2> | C<FARGATE> | C<EXTERNAL>


=head2 LoadBalancers => ArrayRef[L<Paws::SecurityHub::AwsEcsServiceLoadBalancersDetails>]

Information about the load balancers that the service uses.


=head2 Name => Str

The name of the service.


=head2 NetworkConfiguration => L<Paws::SecurityHub::AwsEcsServiceNetworkConfigurationDetails>

For tasks that use the C<awsvpc> networking mode, the VPC subnet and
security group configuration.


=head2 PlacementConstraints => ArrayRef[L<Paws::SecurityHub::AwsEcsServicePlacementConstraintsDetails>]

The placement constraints for the tasks in the service.


=head2 PlacementStrategies => ArrayRef[L<Paws::SecurityHub::AwsEcsServicePlacementStrategiesDetails>]

Information about how tasks for the service are placed.


=head2 PlatformVersion => Str

The platform version on which to run the service. Only specified for
tasks that are hosted on Fargate. If a platform version is not
specified, the C<LATEST> platform version is used by default.


=head2 PropagateTags => Str

Indicates whether to propagate the tags from the task definition to the
task or from the service to the task. If no value is provided, then
tags are not propagated.

Valid values: C<TASK_DEFINITION> | C<SERVICE>


=head2 Role => Str

The ARN of the IAM role that is associated with the service. The role
allows the Amazon ECS container agent to register container instances
with an Elastic Load Balancing load balancer.


=head2 SchedulingStrategy => Str

The scheduling strategy to use for the service.

The C<REPLICA> scheduling strategy places and maintains the desired
number of tasks across the cluster. By default, the service scheduler
spreads tasks across Availability Zones. Task placement strategies and
constraints are used to customize task placement decisions.

The C<DAEMON> scheduling strategy deploys exactly one task on each
active container instance that meets all of the task placement
constraints that are specified in the cluster. The service scheduler
also evaluates the task placement constraints for running tasks and
stops tasks that don't meet the placement constraints.

Valid values: C<REPLICA> | C<DAEMON>


=head2 ServiceArn => Str

The ARN of the service.


=head2 ServiceName => Str

The name of the service.

The name can contain up to 255 characters. It can use letters, numbers,
underscores, and hyphens.


=head2 ServiceRegistries => ArrayRef[L<Paws::SecurityHub::AwsEcsServiceServiceRegistriesDetails>]

Information about the service discovery registries to assign to the
service.


=head2 TaskDefinition => Str

The task definition to use for tasks in the service.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityHub>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

