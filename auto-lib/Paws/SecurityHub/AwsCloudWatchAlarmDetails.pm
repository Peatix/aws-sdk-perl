# Generated by default/object.tt
package Paws::SecurityHub::AwsCloudWatchAlarmDetails;
  use Moose;
  has ActionsEnabled => (is => 'ro', isa => 'Bool');
  has AlarmActions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has AlarmArn => (is => 'ro', isa => 'Str');
  has AlarmConfigurationUpdatedTimestamp => (is => 'ro', isa => 'Str');
  has AlarmDescription => (is => 'ro', isa => 'Str');
  has AlarmName => (is => 'ro', isa => 'Str');
  has ComparisonOperator => (is => 'ro', isa => 'Str');
  has DatapointsToAlarm => (is => 'ro', isa => 'Int');
  has Dimensions => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AwsCloudWatchAlarmDimensionsDetails]');
  has EvaluateLowSampleCountPercentile => (is => 'ro', isa => 'Str');
  has EvaluationPeriods => (is => 'ro', isa => 'Int');
  has ExtendedStatistic => (is => 'ro', isa => 'Str');
  has InsufficientDataActions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has MetricName => (is => 'ro', isa => 'Str');
  has Namespace => (is => 'ro', isa => 'Str');
  has OkActions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Period => (is => 'ro', isa => 'Int');
  has Statistic => (is => 'ro', isa => 'Str');
  has Threshold => (is => 'ro', isa => 'Num');
  has ThresholdMetricId => (is => 'ro', isa => 'Str');
  has TreatMissingData => (is => 'ro', isa => 'Str');
  has Unit => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityHub::AwsCloudWatchAlarmDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityHub::AwsCloudWatchAlarmDetails object:

  $service_obj->Method(Att1 => { ActionsEnabled => $value, ..., Unit => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityHub::AwsCloudWatchAlarmDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->ActionsEnabled

=head1 DESCRIPTION

Specifies an alarm and associates it with the specified metric or
metric math expression.

=head1 ATTRIBUTES


=head2 ActionsEnabled => Bool

Indicates whether actions should be executed during any changes to the
alarm state.


=head2 AlarmActions => ArrayRef[Str|Undef]

The list of actions, specified as Amazon Resource Names (ARNs) to
execute when this alarm transitions into an C<ALARM> state from any
other state.


=head2 AlarmArn => Str

The ARN of the alarm.


=head2 AlarmConfigurationUpdatedTimestamp => Str

The time stamp of the last update to the alarm configuration.


=head2 AlarmDescription => Str

The description of the alarm.


=head2 AlarmName => Str

The name of the alarm. If you don't specify a name, CloudFront
generates a unique physical ID and uses that ID for the alarm name.


=head2 ComparisonOperator => Str

The arithmetic operation to use when comparing the specified statistic
and threshold. The specified statistic value is used as the first
operand.


=head2 DatapointsToAlarm => Int

The number of datapoints that must be breaching to trigger the alarm.


=head2 Dimensions => ArrayRef[L<Paws::SecurityHub::AwsCloudWatchAlarmDimensionsDetails>]

The dimensions for the metric associated with the alarm.


=head2 EvaluateLowSampleCountPercentile => Str

Used only for alarms based on percentiles. If C<ignore>, the alarm
state does not change during periods with too few data points to be
statistically significant. If C<evaluate> or this parameter is not
used, the alarm is always evaluated and possibly changes state no
matter how many data points are available.


=head2 EvaluationPeriods => Int

The number of periods over which data is compared to the specified
threshold.


=head2 ExtendedStatistic => Str

The percentile statistic for the metric associated with the alarm.


=head2 InsufficientDataActions => ArrayRef[Str|Undef]

The actions to execute when this alarm transitions to the
C<INSUFFICIENT_DATA> state from any other state. Each action is
specified as an ARN.


=head2 MetricName => Str

The name of the metric associated with the alarm. This is required for
an alarm based on a metric. For an alarm based on a math expression,
you use C<Metrics> instead and you can't specify C<MetricName>.


=head2 Namespace => Str

The namespace of the metric associated with the alarm. This is required
for an alarm based on a metric. For an alarm based on a math
expression, you can't specify C<Namespace> and you use C<Metrics>
instead.


=head2 OkActions => ArrayRef[Str|Undef]

The actions to execute when this alarm transitions to the C<OK> state
from any other state. Each action is specified as an ARN.


=head2 Period => Int

The period, in seconds, over which the statistic is applied. This is
required for an alarm based on a metric.


=head2 Statistic => Str

The statistic for the metric associated with the alarm, other than
percentile. For percentile statistics, use C<ExtendedStatistic>.

For an alarm based on a metric, you must specify either C<Statistic> or
C<ExtendedStatistic> but not both.

For an alarm based on a math expression, you can't specify
C<Statistic>. Instead, you use C<Metrics>.


=head2 Threshold => Num

The value to compare with the specified statistic.


=head2 ThresholdMetricId => Str

n an alarm based on an anomaly detection model, this is the ID of the
C<ANOMALY_DETECTION_BAND> function used as the threshold for the alarm.


=head2 TreatMissingData => Str

Sets how this alarm is to handle missing data points.


=head2 Unit => Str

The unit of the metric associated with the alarm.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityHub>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

