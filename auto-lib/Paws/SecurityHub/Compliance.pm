# Generated by default/object.tt
package Paws::SecurityHub::Compliance;
  use Moose;
  has AssociatedStandards => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::AssociatedStandard]');
  has RelatedRequirements => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has SecurityControlId => (is => 'ro', isa => 'Str');
  has SecurityControlParameters => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::SecurityControlParameter]');
  has Status => (is => 'ro', isa => 'Str');
  has StatusReasons => (is => 'ro', isa => 'ArrayRef[Paws::SecurityHub::StatusReason]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityHub::Compliance

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityHub::Compliance object:

  $service_obj->Method(Att1 => { AssociatedStandards => $value, ..., StatusReasons => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityHub::Compliance object:

  $result = $service_obj->Method(...);
  $result->Att1->AssociatedStandards

=head1 DESCRIPTION

This object typically provides details about a control finding, such as
applicable standards and the status of control checks. While finding
providers can add custom content in C<Compliance> object fields, they
are typically used to review details of Security Hub control findings.

=head1 ATTRIBUTES


=head2 AssociatedStandards => ArrayRef[L<Paws::SecurityHub::AssociatedStandard>]

Typically provides an array of enabled security standards in which a
security control is currently enabled.


=head2 RelatedRequirements => ArrayRef[Str|Undef]

Typically provides the industry or regulatory framework requirements
that are related to a control. The check for that control is aligned
with these requirements.

Array Members: Maximum number of 32 items.


=head2 SecurityControlId => Str

Typically provides the unique identifier of a control across standards.
For Security Hub controls, this field consists of an Amazon Web
Services service and a unique number, such as C<APIGateway.5>.


=head2 SecurityControlParameters => ArrayRef[L<Paws::SecurityHub::SecurityControlParameter>]

Typically an object that includes security control parameter names and
values.


=head2 Status => Str

Typically summarizes the result of a control check.

For Security Hub controls, valid values for C<Status> are as follows.

=over

=item *

=over

=item *

C<PASSED> - Standards check passed for all evaluated resources.

=item *

C<WARNING> - Some information is missing or this check is not supported
for your configuration.

=item *

C<FAILED> - Standards check failed for at least one evaluated resource.

=item *

C<NOT_AVAILABLE> - Check could not be performed due to a service
outage, API error, or because the result of the Config evaluation was
C<NOT_APPLICABLE>. If the Config evaluation result was
C<NOT_APPLICABLE> for a Security Hub control, Security Hub
automatically archives the finding after 3 days.

=back

=back



=head2 StatusReasons => ArrayRef[L<Paws::SecurityHub::StatusReason>]

Typically used to provide a list of reasons for the value of C<Status>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityHub>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

