# Generated by default/object.tt
package Paws::Omics::ReadOptions;
  use Moose;
  has Comment => (is => 'ro', isa => 'Str', request_name => 'comment', traits => ['NameInRequest']);
  has Encoding => (is => 'ro', isa => 'Str', request_name => 'encoding', traits => ['NameInRequest']);
  has Escape => (is => 'ro', isa => 'Str', request_name => 'escape', traits => ['NameInRequest']);
  has EscapeQuotes => (is => 'ro', isa => 'Bool', request_name => 'escapeQuotes', traits => ['NameInRequest']);
  has Header => (is => 'ro', isa => 'Bool', request_name => 'header', traits => ['NameInRequest']);
  has LineSep => (is => 'ro', isa => 'Str', request_name => 'lineSep', traits => ['NameInRequest']);
  has Quote => (is => 'ro', isa => 'Str', request_name => 'quote', traits => ['NameInRequest']);
  has QuoteAll => (is => 'ro', isa => 'Bool', request_name => 'quoteAll', traits => ['NameInRequest']);
  has Sep => (is => 'ro', isa => 'Str', request_name => 'sep', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Omics::ReadOptions

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Omics::ReadOptions object:

  $service_obj->Method(Att1 => { Comment => $value, ..., Sep => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Omics::ReadOptions object:

  $result = $service_obj->Method(...);
  $result->Att1->Comment

=head1 DESCRIPTION

Read options for an annotation import job.

=head1 ATTRIBUTES


=head2 Comment => Str

The file's comment character.


=head2 Encoding => Str

The file's encoding.


=head2 Escape => Str

A character for escaping quotes in the file.


=head2 EscapeQuotes => Bool

Whether quotes need to be escaped in the file.


=head2 Header => Bool

Whether the file has a header row.


=head2 LineSep => Str

A line separator for the file.


=head2 Quote => Str

The file's quote character.


=head2 QuoteAll => Bool

Whether all values need to be quoted, or just those that contain
quotes.


=head2 Sep => Str

The file's field separator.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Omics>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

