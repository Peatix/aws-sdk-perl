# Generated by default/object.tt
package Paws::FMS::Policy;
  use Moose;
  has DeleteUnusedFMManagedResources => (is => 'ro', isa => 'Bool');
  has ExcludeMap => (is => 'ro', isa => 'Paws::FMS::CustomerPolicyScopeMap');
  has ExcludeResourceTags => (is => 'ro', isa => 'Bool', required => 1);
  has IncludeMap => (is => 'ro', isa => 'Paws::FMS::CustomerPolicyScopeMap');
  has PolicyDescription => (is => 'ro', isa => 'Str');
  has PolicyId => (is => 'ro', isa => 'Str');
  has PolicyName => (is => 'ro', isa => 'Str', required => 1);
  has PolicyStatus => (is => 'ro', isa => 'Str');
  has PolicyUpdateToken => (is => 'ro', isa => 'Str');
  has RemediationEnabled => (is => 'ro', isa => 'Bool', required => 1);
  has ResourceSetIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ResourceTagLogicalOperator => (is => 'ro', isa => 'Str');
  has ResourceTags => (is => 'ro', isa => 'ArrayRef[Paws::FMS::ResourceTag]');
  has ResourceType => (is => 'ro', isa => 'Str', required => 1);
  has ResourceTypeList => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has SecurityServicePolicyData => (is => 'ro', isa => 'Paws::FMS::SecurityServicePolicyData', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::FMS::Policy

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FMS::Policy object:

  $service_obj->Method(Att1 => { DeleteUnusedFMManagedResources => $value, ..., SecurityServicePolicyData => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FMS::Policy object:

  $result = $service_obj->Method(...);
  $result->Att1->DeleteUnusedFMManagedResources

=head1 DESCRIPTION

An Firewall Manager policy.

=head1 ATTRIBUTES


=head2 DeleteUnusedFMManagedResources => Bool

Indicates whether Firewall Manager should automatically remove
protections from resources that leave the policy scope and clean up
resources that Firewall Manager is managing for accounts when those
accounts leave policy scope. For example, Firewall Manager will
disassociate a Firewall Manager managed web ACL from a protected
customer resource when the customer resource leaves policy scope.

By default, Firewall Manager doesn't remove protections or delete
Firewall Manager managed resources.

This option is not available for Shield Advanced or WAF Classic
policies.


=head2 ExcludeMap => L<Paws::FMS::CustomerPolicyScopeMap>

Specifies the Amazon Web Services account IDs and Organizations
organizational units (OUs) to exclude from the policy. Specifying an OU
is the equivalent of specifying all accounts in the OU and in any of
its child OUs, including any child OUs and accounts that are added at a
later time.

You can specify inclusions or exclusions, but not both. If you specify
an C<IncludeMap>, Firewall Manager applies the policy to all accounts
specified by the C<IncludeMap>, and does not evaluate any C<ExcludeMap>
specifications. If you do not specify an C<IncludeMap>, then Firewall
Manager applies the policy to all accounts except for those specified
by the C<ExcludeMap>.

You can specify account IDs, OUs, or a combination:

=over

=item *

Specify account IDs by setting the key to C<ACCOUNT>. For example, the
following is a valid map: C<{E<ldquo>ACCOUNTE<rdquo> :
[E<ldquo>accountID1E<rdquo>, E<ldquo>accountID2E<rdquo>]}>.

=item *

Specify OUs by setting the key to C<ORG_UNIT>. For example, the
following is a valid map: C<{E<ldquo>ORG_UNITE<rdquo> :
[E<ldquo>ouid111E<rdquo>, E<ldquo>ouid112E<rdquo>]}>.

=item *

Specify accounts and OUs together in a single map, separated with a
comma. For example, the following is a valid map:
C<{E<ldquo>ACCOUNTE<rdquo> : [E<ldquo>accountID1E<rdquo>,
E<ldquo>accountID2E<rdquo>], E<ldquo>ORG_UNITE<rdquo> :
[E<ldquo>ouid111E<rdquo>, E<ldquo>ouid112E<rdquo>]}>.

=back



=head2 B<REQUIRED> ExcludeResourceTags => Bool

If set to C<True>, resources with the tags that are specified in the
C<ResourceTag> array are not in scope of the policy. If set to
C<False>, and the C<ResourceTag> array is not null, only resources with
the specified tags are in scope of the policy.


=head2 IncludeMap => L<Paws::FMS::CustomerPolicyScopeMap>

Specifies the Amazon Web Services account IDs and Organizations
organizational units (OUs) to include in the policy. Specifying an OU
is the equivalent of specifying all accounts in the OU and in any of
its child OUs, including any child OUs and accounts that are added at a
later time.

You can specify inclusions or exclusions, but not both. If you specify
an C<IncludeMap>, Firewall Manager applies the policy to all accounts
specified by the C<IncludeMap>, and does not evaluate any C<ExcludeMap>
specifications. If you do not specify an C<IncludeMap>, then Firewall
Manager applies the policy to all accounts except for those specified
by the C<ExcludeMap>.

You can specify account IDs, OUs, or a combination:

=over

=item *

Specify account IDs by setting the key to C<ACCOUNT>. For example, the
following is a valid map: C<{E<ldquo>ACCOUNTE<rdquo> :
[E<ldquo>accountID1E<rdquo>, E<ldquo>accountID2E<rdquo>]}>.

=item *

Specify OUs by setting the key to C<ORG_UNIT>. For example, the
following is a valid map: C<{E<ldquo>ORG_UNITE<rdquo> :
[E<ldquo>ouid111E<rdquo>, E<ldquo>ouid112E<rdquo>]}>.

=item *

Specify accounts and OUs together in a single map, separated with a
comma. For example, the following is a valid map:
C<{E<ldquo>ACCOUNTE<rdquo> : [E<ldquo>accountID1E<rdquo>,
E<ldquo>accountID2E<rdquo>], E<ldquo>ORG_UNITE<rdquo> :
[E<ldquo>ouid111E<rdquo>, E<ldquo>ouid112E<rdquo>]}>.

=back



=head2 PolicyDescription => Str

Your description of the Firewall Manager policy.


=head2 PolicyId => Str

The ID of the Firewall Manager policy.


=head2 B<REQUIRED> PolicyName => Str

The name of the Firewall Manager policy.


=head2 PolicyStatus => Str

Indicates whether the policy is in or out of an admin's policy or
Region scope.

=over

=item *

C<ACTIVE> - The administrator can manage and delete the policy.

=item *

C<OUT_OF_ADMIN_SCOPE> - The administrator can view the policy, but they
can't edit or delete the policy. Existing policy protections stay in
place. Any new resources that come into scope of the policy won't be
protected.

=back



=head2 PolicyUpdateToken => Str

A unique identifier for each update to the policy. When issuing a
C<PutPolicy> request, the C<PolicyUpdateToken> in the request must
match the C<PolicyUpdateToken> of the current policy version. To get
the C<PolicyUpdateToken> of the current policy version, use a
C<GetPolicy> request.


=head2 B<REQUIRED> RemediationEnabled => Bool

Indicates if the policy should be automatically applied to new
resources.


=head2 ResourceSetIds => ArrayRef[Str|Undef]

The unique identifiers of the resource sets used by the policy.


=head2 ResourceTagLogicalOperator => Str

Specifies whether to combine multiple resource tags with AND, so that a
resource must have all tags to be included or excluded, or OR, so that
a resource must have at least one tag.

Default: C<AND>


=head2 ResourceTags => ArrayRef[L<Paws::FMS::ResourceTag>]

An array of C<ResourceTag> objects.


=head2 B<REQUIRED> ResourceType => Str

The type of resource protected by or in scope of the policy. This is in
the format shown in the Amazon Web Services Resource Types Reference
(https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html).
To apply this policy to multiple resource types, specify a resource
type of C<ResourceTypeList> and then specify the resource types in a
C<ResourceTypeList>.

The following are valid resource types for each Firewall Manager policy
type:

=over

=item *

Amazon Web Services WAF Classic - C<AWS::ApiGateway::Stage>,
C<AWS::CloudFront::Distribution>, and
C<AWS::ElasticLoadBalancingV2::LoadBalancer>.

=item *

WAF - C<AWS::ApiGateway::Stage>,
C<AWS::ElasticLoadBalancingV2::LoadBalancer>, and
C<AWS::CloudFront::Distribution>.

=item *

Shield Advanced - C<AWS::ElasticLoadBalancingV2::LoadBalancer>,
C<AWS::ElasticLoadBalancing::LoadBalancer>, C<AWS::EC2::EIP>, and
C<AWS::CloudFront::Distribution>.

=item *

Network ACL - C<AWS::EC2::Subnet>.

=item *

Security group usage audit - C<AWS::EC2::SecurityGroup>.

=item *

Security group content audit - C<AWS::EC2::SecurityGroup>,
C<AWS::EC2::NetworkInterface>, and C<AWS::EC2::Instance>.

=item *

DNS Firewall, Network Firewall, and third-party firewall -
C<AWS::EC2::VPC>.

=back



=head2 ResourceTypeList => ArrayRef[Str|Undef]

An array of C<ResourceType> objects. Use this only to specify multiple
resource types. To specify a single resource type, use C<ResourceType>.


=head2 B<REQUIRED> SecurityServicePolicyData => L<Paws::FMS::SecurityServicePolicyData>

Details about the security service that is being used to protect the
resources.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FMS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

