# Generated by default/object.tt
package Paws::FMS::StatefulEngineOptions;
  use Moose;
  has RuleOrder => (is => 'ro', isa => 'Str');
  has StreamExceptionPolicy => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FMS::StatefulEngineOptions

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FMS::StatefulEngineOptions object:

  $service_obj->Method(Att1 => { RuleOrder => $value, ..., StreamExceptionPolicy => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FMS::StatefulEngineOptions object:

  $result = $service_obj->Method(...);
  $result->Att1->RuleOrder

=head1 DESCRIPTION

Configuration settings for the handling of the stateful rule groups in
a Network Firewall firewall policy.

=head1 ATTRIBUTES


=head2 RuleOrder => Str

Indicates how to manage the order of stateful rule evaluation for the
policy. Stateful rules are provided to the rule engine as Suricata
compatible strings, and Suricata evaluates them based on certain
settings. For more information, see Evaluation order for stateful rules
(https://docs.aws.amazon.com/network-firewall/latest/developerguide/suricata-rule-evaluation-order.html)
in the I<Network Firewall Developer Guide>.

Default: C<DEFAULT_ACTION_ORDER>


=head2 StreamExceptionPolicy => Str

Indicates how Network Firewall should handle traffic when a network
connection breaks midstream.

=over

=item *

C<DROP> - Fail closed and drop all subsequent traffic going to the
firewall.

=item *

C<CONTINUE> - Continue to apply rules to subsequent traffic without
context from traffic before the break. This impacts the behavior of
rules that depend on context. For example, with a stateful rule that
drops HTTP traffic, Network Firewall won't match subsequent traffic
because the it won't have the context from session initialization,
which defines the application layer protocol as HTTP. However, a
TCP-layer rule using a C<flow:stateless> rule would still match, and so
would the C<aws:drop_strict> default action.

=item *

C<REJECT> - Fail closed and drop all subsequent traffic going to the
firewall. With this option, Network Firewall also sends a TCP reject
packet back to the client so the client can immediately establish a new
session. With the new session, Network Firewall will have context and
will apply rules appropriately.

For applications that are reliant on long-lived TCP connections that
trigger Gateway Load Balancer idle timeouts, this is the recommended
setting.

=item *

C<FMS_IGNORE> - Firewall Manager doesn't monitor or modify the Network
Firewall stream exception policy settings.

=back

For more information, see Stream exception policy in your firewall
policy
(https://docs.aws.amazon.com/network-firewall/latest/developerguide/stream-exception-policy.html)
in the I<Network Firewall Developer Guide>.

Default: C<FMS_IGNORE>



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FMS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

