# Generated by default/object.tt
package Paws::FMS::InvalidNetworkAclEntriesViolation;
  use Moose;
  has CurrentAssociatedNetworkAcl => (is => 'ro', isa => 'Str');
  has EntryViolations => (is => 'ro', isa => 'ArrayRef[Paws::FMS::EntryViolation]');
  has Subnet => (is => 'ro', isa => 'Str');
  has SubnetAvailabilityZone => (is => 'ro', isa => 'Str');
  has Vpc => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FMS::InvalidNetworkAclEntriesViolation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FMS::InvalidNetworkAclEntriesViolation object:

  $service_obj->Method(Att1 => { CurrentAssociatedNetworkAcl => $value, ..., Vpc => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FMS::InvalidNetworkAclEntriesViolation object:

  $result = $service_obj->Method(...);
  $result->Att1->CurrentAssociatedNetworkAcl

=head1 DESCRIPTION

Violation detail for the entries in a network ACL resource.

=head1 ATTRIBUTES


=head2 CurrentAssociatedNetworkAcl => Str

The network ACL containing the entry violations.


=head2 EntryViolations => ArrayRef[L<Paws::FMS::EntryViolation>]

Detailed information about the entry violations in the network ACL.


=head2 Subnet => Str

The subnet that's associated with the network ACL.


=head2 SubnetAvailabilityZone => Str

The Availability Zone where the network ACL is in use.


=head2 Vpc => Str

The VPC where the violation was found.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FMS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

