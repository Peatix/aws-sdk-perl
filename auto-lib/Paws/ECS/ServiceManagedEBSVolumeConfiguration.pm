# Generated by default/object.tt
package Paws::ECS::ServiceManagedEBSVolumeConfiguration;
  use Moose;
  has Encrypted => (is => 'ro', isa => 'Bool', request_name => 'encrypted', traits => ['NameInRequest']);
  has FilesystemType => (is => 'ro', isa => 'Str', request_name => 'filesystemType', traits => ['NameInRequest']);
  has Iops => (is => 'ro', isa => 'Int', request_name => 'iops', traits => ['NameInRequest']);
  has KmsKeyId => (is => 'ro', isa => 'Str', request_name => 'kmsKeyId', traits => ['NameInRequest']);
  has RoleArn => (is => 'ro', isa => 'Str', request_name => 'roleArn', traits => ['NameInRequest'], required => 1);
  has SizeInGiB => (is => 'ro', isa => 'Int', request_name => 'sizeInGiB', traits => ['NameInRequest']);
  has SnapshotId => (is => 'ro', isa => 'Str', request_name => 'snapshotId', traits => ['NameInRequest']);
  has TagSpecifications => (is => 'ro', isa => 'ArrayRef[Paws::ECS::EBSTagSpecification]', request_name => 'tagSpecifications', traits => ['NameInRequest']);
  has Throughput => (is => 'ro', isa => 'Int', request_name => 'throughput', traits => ['NameInRequest']);
  has VolumeInitializationRate => (is => 'ro', isa => 'Int', request_name => 'volumeInitializationRate', traits => ['NameInRequest']);
  has VolumeType => (is => 'ro', isa => 'Str', request_name => 'volumeType', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ECS::ServiceManagedEBSVolumeConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ECS::ServiceManagedEBSVolumeConfiguration object:

  $service_obj->Method(Att1 => { Encrypted => $value, ..., VolumeType => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ECS::ServiceManagedEBSVolumeConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->Encrypted

=head1 DESCRIPTION

The configuration for the Amazon EBS volume that Amazon ECS creates and
manages on your behalf. These settings are used to create each Amazon
EBS volume, with one volume created for each task in the service. For
information about the supported launch types and operating systems, see
Supported operating systems and launch types
(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-volumes.html#ebs-volumes-configuration)
in theI< Amazon Elastic Container Service Developer Guide>.

Many of these parameters map 1:1 with the Amazon EBS C<CreateVolume>
API request parameters.

=head1 ATTRIBUTES


=head2 Encrypted => Bool

Indicates whether the volume should be encrypted. If you turn on
Region-level Amazon EBS encryption by default but set this value as
C<false>, the setting is overridden and the volume is encrypted with
the KMS key specified for Amazon EBS encryption by default. This
parameter maps 1:1 with the C<Encrypted> parameter of the CreateVolume
API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.


=head2 FilesystemType => Str

The filesystem type for the volume. For volumes created from a
snapshot, you must specify the same filesystem type that the volume was
using when the snapshot was created. If there is a filesystem type
mismatch, the tasks will fail to start.

The available Linux filesystem types are C<ext3>, C<ext4>, and C<xfs>.
If no value is specified, the C<xfs> filesystem type is used by
default.

The available Windows filesystem types are C<NTFS>.


=head2 Iops => Int

The number of I/O operations per second (IOPS). For C<gp3>, C<io1>, and
C<io2> volumes, this represents the number of IOPS that are provisioned
for the volume. For C<gp2> volumes, this represents the baseline
performance of the volume and the rate at which the volume accumulates
I/O credits for bursting.

The following are the supported values for each volume type.

=over

=item *

C<gp3>: 3,000 - 16,000 IOPS

=item *

C<io1>: 100 - 64,000 IOPS

=item *

C<io2>: 100 - 256,000 IOPS

=back

This parameter is required for C<io1> and C<io2> volume types. The
default for C<gp3> volumes is C<3,000 IOPS>. This parameter is not
supported for C<st1>, C<sc1>, or C<standard> volume types.

This parameter maps 1:1 with the C<Iops> parameter of the CreateVolume
API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.


=head2 KmsKeyId => Str

The Amazon Resource Name (ARN) identifier of the Amazon Web Services
Key Management Service key to use for Amazon EBS encryption. When a key
is specified using this parameter, it overrides Amazon EBS default
encryption or any KMS key that you specified for cluster-level managed
storage encryption. This parameter maps 1:1 with the C<KmsKeyId>
parameter of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>. For more information about
encrypting Amazon EBS volumes attached to tasks, see Encrypt data
stored in Amazon EBS volumes attached to Amazon ECS tasks
(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ebs-kms-encryption.html).

Amazon Web Services authenticates the Amazon Web Services Key
Management Service key asynchronously. Therefore, if you specify an ID,
alias, or ARN that is invalid, the action can appear to complete, but
eventually fails.


=head2 B<REQUIRED> RoleArn => Str

The ARN of the IAM role to associate with this volume. This is the
Amazon ECS infrastructure IAM role that is used to manage your Amazon
Web Services infrastructure. We recommend using the Amazon ECS-managed
C<AmazonECSInfrastructureRolePolicyForVolumes> IAM policy with this
role. For more information, see Amazon ECS infrastructure IAM role
(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/infrastructure_IAM_role.html)
in the I<Amazon ECS Developer Guide>.


=head2 SizeInGiB => Int

The size of the volume in GiB. You must specify either a volume size or
a snapshot ID. If you specify a snapshot ID, the snapshot size is used
for the volume size by default. You can optionally specify a volume
size greater than or equal to the snapshot size. This parameter maps
1:1 with the C<Size> parameter of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.

The following are the supported volume size values for each volume
type.

=over

=item *

C<gp2> and C<gp3>: 1-16,384

=item *

C<io1> and C<io2>: 4-16,384

=item *

C<st1> and C<sc1>: 125-16,384

=item *

C<standard>: 1-1,024

=back



=head2 SnapshotId => Str

The snapshot that Amazon ECS uses to create volumes for attachment to
tasks maintained by the service. You must specify either C<snapshotId>
or C<sizeInGiB> in your volume configuration. This parameter maps 1:1
with the C<SnapshotId> parameter of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.


=head2 TagSpecifications => ArrayRef[L<Paws::ECS::EBSTagSpecification>]

The tags to apply to the volume. Amazon ECS applies service-managed
tags by default. This parameter maps 1:1 with the
C<TagSpecifications.N> parameter of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.


=head2 Throughput => Int

The throughput to provision for a volume, in MiB/s, with a maximum of
1,000 MiB/s. This parameter maps 1:1 with the C<Throughput> parameter
of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>.

This parameter is only supported for the C<gp3> volume type.


=head2 VolumeInitializationRate => Int

The rate, in MiB/s, at which data is fetched from a snapshot of an
existing EBS volume to create new volumes for attachment to the tasks
maintained by the service. This property can be specified only if you
specify a C<snapshotId>. For more information, see Initialize Amazon
EBS volumes
(https://docs.aws.amazon.com/ebs/latest/userguide/initalize-volume.html)
in the I<Amazon EBS User Guide>.


=head2 VolumeType => Str

The volume type. This parameter maps 1:1 with the C<VolumeType>
parameter of the CreateVolume API
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateVolume.html)
in the I<Amazon EC2 API Reference>. For more information, see Amazon
EBS volume types
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html)
in the I<Amazon EC2 User Guide>.

The following are the supported volume types.

=over

=item *

General Purpose SSD: C<gp2>|C<gp3>

=item *

Provisioned IOPS SSD: C<io1>|C<io2>

=item *

Throughput Optimized HDD: C<st1>

=item *

Cold HDD: C<sc1>

=item *

Magnetic: C<standard>

The magnetic volume type is not supported on Fargate.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ECS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

