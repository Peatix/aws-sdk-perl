# Generated by default/object.tt
package Paws::ELBv2::TargetGroupAttribute;
  use Moose;
  has Key => (is => 'ro', isa => 'Str');
  has Value => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::ELBv2::TargetGroupAttribute

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ELBv2::TargetGroupAttribute object:

  $service_obj->Method(Att1 => { Key => $value, ..., Value => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ELBv2::TargetGroupAttribute object:

  $result = $service_obj->Method(...);
  $result->Att1->Key

=head1 DESCRIPTION

Information about a target group attribute.

=head1 ATTRIBUTES


=head2 Key => Str

The name of the attribute.

The following attributes are supported by all load balancers:

=over

=item *

C<deregistration_delay.timeout_seconds> - The amount of time, in
seconds, for Elastic Load Balancing to wait before changing the state
of a deregistering target from C<draining> to C<unused>. The range is
0-3600 seconds. The default value is 300 seconds. If the target is a
Lambda function, this attribute is not supported.

=item *

C<stickiness.enabled> - Indicates whether target stickiness is enabled.
The value is C<true> or C<false>. The default is C<false>.

=item *

C<stickiness.type> - Indicates the type of stickiness. The possible
values are:

=over

=item *

C<lb_cookie> and C<app_cookie> for Application Load Balancers.

=item *

C<source_ip> for Network Load Balancers.

=item *

C<source_ip_dest_ip> and C<source_ip_dest_ip_proto> for Gateway Load
Balancers.

=back

=back

The following attributes are supported by Application Load Balancers
and Network Load Balancers:

=over

=item *

C<load_balancing.cross_zone.enabled> - Indicates whether cross zone
load balancing is enabled. The value is C<true>, C<false> or
C<use_load_balancer_configuration>. The default is
C<use_load_balancer_configuration>.

=item *

C<target_group_health.dns_failover.minimum_healthy_targets.count> - The
minimum number of targets that must be healthy. If the number of
healthy targets is below this value, mark the zone as unhealthy in DNS,
so that traffic is routed only to healthy zones. The possible values
are C<off> or an integer from 1 to the maximum number of targets. The
default is C<off>.

=item *

C<target_group_health.dns_failover.minimum_healthy_targets.percentage>
- The minimum percentage of targets that must be healthy. If the
percentage of healthy targets is below this value, mark the zone as
unhealthy in DNS, so that traffic is routed only to healthy zones. The
possible values are C<off> or an integer from 1 to 100. The default is
C<off>.

=item *

C<target_group_health.unhealthy_state_routing.minimum_healthy_targets.count>
- The minimum number of targets that must be healthy. If the number of
healthy targets is below this value, send traffic to all targets,
including unhealthy targets. The possible values are 1 to the maximum
number of targets. The default is 1.

=item *

C<target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage>
- The minimum percentage of targets that must be healthy. If the
percentage of healthy targets is below this value, send traffic to all
targets, including unhealthy targets. The possible values are C<off> or
an integer from 1 to 100. The default is C<off>.

=back

The following attributes are supported only if the load balancer is an
Application Load Balancer and the target is an instance or an IP
address:

=over

=item *

C<load_balancing.algorithm.type> - The load balancing algorithm
determines how the load balancer selects targets when routing requests.
The value is C<round_robin>, C<least_outstanding_requests>, or
C<weighted_random>. The default is C<round_robin>.

=item *

C<load_balancing.algorithm.anomaly_mitigation> - Only available when
C<load_balancing.algorithm.type> is C<weighted_random>. Indicates
whether anomaly mitigation is enabled. The value is C<on> or C<off>.
The default is C<off>.

=item *

C<slow_start.duration_seconds> - The time period, in seconds, during
which a newly registered target receives an increasing share of the
traffic to the target group. After this time period ends, the target
receives its full share of traffic. The range is 30-900 seconds (15
minutes). The default is 0 seconds (disabled).

=item *

C<stickiness.app_cookie.cookie_name> - Indicates the name of the
application-based cookie. Names that start with the following prefixes
are not allowed: C<AWSALB>, C<AWSALBAPP>, and C<AWSALBTG>; they're
reserved for use by the load balancer.

=item *

C<stickiness.app_cookie.duration_seconds> - The time period, in
seconds, during which requests from a client should be routed to the
same target. After this time period expires, the application-based
cookie is considered stale. The range is 1 second to 1 week (604800
seconds). The default value is 1 day (86400 seconds).

=item *

C<stickiness.lb_cookie.duration_seconds> - The time period, in seconds,
during which requests from a client should be routed to the same
target. After this time period expires, the load balancer-generated
cookie is considered stale. The range is 1 second to 1 week (604800
seconds). The default value is 1 day (86400 seconds).

=back

The following attribute is supported only if the load balancer is an
Application Load Balancer and the target is a Lambda function:

=over

=item *

C<lambda.multi_value_headers.enabled> - Indicates whether the request
and response headers that are exchanged between the load balancer and
the Lambda function include arrays of values or strings. The value is
C<true> or C<false>. The default is C<false>. If the value is C<false>
and the request contains a duplicate header field name or query
parameter key, the load balancer uses the last value sent by the
client.

=back

The following attributes are supported only by Network Load Balancers:

=over

=item *

C<deregistration_delay.connection_termination.enabled> - Indicates
whether the load balancer terminates connections at the end of the
deregistration timeout. The value is C<true> or C<false>. For new
UDP/TCP_UDP target groups the default is C<true>. Otherwise, the
default is C<false>.

=item *

C<preserve_client_ip.enabled> - Indicates whether client IP
preservation is enabled. The value is C<true> or C<false>. The default
is disabled if the target group type is IP address and the target group
protocol is TCP or TLS. Otherwise, the default is enabled. Client IP
preservation can't be disabled for UDP and TCP_UDP target groups.

=item *

C<proxy_protocol_v2.enabled> - Indicates whether Proxy Protocol version
2 is enabled. The value is C<true> or C<false>. The default is
C<false>.

=item *

C<target_health_state.unhealthy.connection_termination.enabled> -
Indicates whether the load balancer terminates connections to unhealthy
targets. The value is C<true> or C<false>. The default is C<true>. This
attribute can't be enabled for UDP and TCP_UDP target groups.

=item *

C<target_health_state.unhealthy.draining_interval_seconds> - The amount
of time for Elastic Load Balancing to wait before changing the state of
an unhealthy target from C<unhealthy.draining> to C<unhealthy>. The
range is 0-360000 seconds. The default value is 0 seconds.

Note: This attribute can only be configured when
C<target_health_state.unhealthy.connection_termination.enabled> is
C<false>.

=back

The following attributes are supported only by Gateway Load Balancers:

=over

=item *

C<target_failover.on_deregistration> - Indicates how the Gateway Load
Balancer handles existing flows when a target is deregistered. The
possible values are C<rebalance> and C<no_rebalance>. The default is
C<no_rebalance>. The two attributes
(C<target_failover.on_deregistration> and
C<target_failover.on_unhealthy>) can't be set independently. The value
you set for both attributes must be the same.

=item *

C<target_failover.on_unhealthy> - Indicates how the Gateway Load
Balancer handles existing flows when a target is unhealthy. The
possible values are C<rebalance> and C<no_rebalance>. The default is
C<no_rebalance>. The two attributes
(C<target_failover.on_deregistration> and
C<target_failover.on_unhealthy>) can't be set independently. The value
you set for both attributes must be the same.

=back



=head2 Value => Str

The value of the attribute.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ELBv2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

