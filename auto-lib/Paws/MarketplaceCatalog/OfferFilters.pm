# Generated by default/object.tt
package Paws::MarketplaceCatalog::OfferFilters;
  use Moose;
  has AvailabilityEndDate => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferAvailabilityEndDateFilter');
  has BuyerAccounts => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferBuyerAccountsFilter');
  has EntityId => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferEntityIdFilter');
  has LastModifiedDate => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferLastModifiedDateFilter');
  has Name => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferNameFilter');
  has ProductId => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferProductIdFilter');
  has ReleaseDate => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferReleaseDateFilter');
  has ResaleAuthorizationId => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferResaleAuthorizationIdFilter');
  has State => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferStateFilter');
  has Targeting => (is => 'ro', isa => 'Paws::MarketplaceCatalog::OfferTargetingFilter');

1;

### main pod documentation begin ###

=head1 NAME

Paws::MarketplaceCatalog::OfferFilters

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MarketplaceCatalog::OfferFilters object:

  $service_obj->Method(Att1 => { AvailabilityEndDate => $value, ..., Targeting => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MarketplaceCatalog::OfferFilters object:

  $result = $service_obj->Method(...);
  $result->Att1->AvailabilityEndDate

=head1 DESCRIPTION

Object containing all the filter fields for offers entity. Client can
add only one wildcard filter and a maximum of 8 filters in a single
C<ListEntities> request.

=head1 ATTRIBUTES


=head2 AvailabilityEndDate => L<Paws::MarketplaceCatalog::OfferAvailabilityEndDateFilter>

Allows filtering on the C<AvailabilityEndDate> of an offer.


=head2 BuyerAccounts => L<Paws::MarketplaceCatalog::OfferBuyerAccountsFilter>

Allows filtering on the C<BuyerAccounts> of an offer.


=head2 EntityId => L<Paws::MarketplaceCatalog::OfferEntityIdFilter>

Allows filtering on C<EntityId> of an offer.


=head2 LastModifiedDate => L<Paws::MarketplaceCatalog::OfferLastModifiedDateFilter>

Allows filtering on the C<LastModifiedDate> of an offer.


=head2 Name => L<Paws::MarketplaceCatalog::OfferNameFilter>

Allows filtering on the C<Name> of an offer.


=head2 ProductId => L<Paws::MarketplaceCatalog::OfferProductIdFilter>

Allows filtering on the C<ProductId> of an offer.


=head2 ReleaseDate => L<Paws::MarketplaceCatalog::OfferReleaseDateFilter>

Allows filtering on the C<ReleaseDate> of an offer.


=head2 ResaleAuthorizationId => L<Paws::MarketplaceCatalog::OfferResaleAuthorizationIdFilter>

Allows filtering on the C<ResaleAuthorizationId> of an offer.

Not all offers have a C<ResaleAuthorizationId>. The response will only
include offers for which you have permissions.


=head2 State => L<Paws::MarketplaceCatalog::OfferStateFilter>

Allows filtering on the C<State> of an offer.


=head2 Targeting => L<Paws::MarketplaceCatalog::OfferTargetingFilter>

Allows filtering on the C<Targeting> of an offer.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MarketplaceCatalog>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

