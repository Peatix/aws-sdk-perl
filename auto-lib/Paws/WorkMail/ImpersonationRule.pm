# Generated by default/object.tt
package Paws::WorkMail::ImpersonationRule;
  use Moose;
  has Description => (is => 'ro', isa => 'Str');
  has Effect => (is => 'ro', isa => 'Str', required => 1);
  has ImpersonationRuleId => (is => 'ro', isa => 'Str', required => 1);
  has Name => (is => 'ro', isa => 'Str');
  has NotTargetUsers => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has TargetUsers => (is => 'ro', isa => 'ArrayRef[Str|Undef]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WorkMail::ImpersonationRule

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WorkMail::ImpersonationRule object:

  $service_obj->Method(Att1 => { Description => $value, ..., TargetUsers => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WorkMail::ImpersonationRule object:

  $result = $service_obj->Method(...);
  $result->Att1->Description

=head1 DESCRIPTION

The rules for the given impersonation role.

=head1 ATTRIBUTES


=head2 Description => Str

The rule description.


=head2 B<REQUIRED> Effect => Str

The effect of the rule when it matches the input. Allowed effect values
are C<ALLOW> or C<DENY>.


=head2 B<REQUIRED> ImpersonationRuleId => Str

The identifier of the rule.


=head2 Name => Str

The rule name.


=head2 NotTargetUsers => ArrayRef[Str|Undef]

A list of user IDs that don't match the rule.


=head2 TargetUsers => ArrayRef[Str|Undef]

A list of user IDs that match the rule.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WorkMail>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

