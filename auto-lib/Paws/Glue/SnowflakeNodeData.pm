# Generated by default/object.tt
package Paws::Glue::SnowflakeNodeData;
  use Moose;
  has Action => (is => 'ro', isa => 'Str');
  has AdditionalOptions => (is => 'ro', isa => 'Paws::Glue::AdditionalOptions');
  has AutoPushdown => (is => 'ro', isa => 'Bool');
  has Connection => (is => 'ro', isa => 'Paws::Glue::Option');
  has Database => (is => 'ro', isa => 'Str');
  has IamRole => (is => 'ro', isa => 'Paws::Glue::Option');
  has MergeAction => (is => 'ro', isa => 'Str');
  has MergeClause => (is => 'ro', isa => 'Str');
  has MergeWhenMatched => (is => 'ro', isa => 'Str');
  has MergeWhenNotMatched => (is => 'ro', isa => 'Str');
  has PostAction => (is => 'ro', isa => 'Str');
  has PreAction => (is => 'ro', isa => 'Str');
  has SampleQuery => (is => 'ro', isa => 'Str');
  has Schema => (is => 'ro', isa => 'Str');
  has SelectedColumns => (is => 'ro', isa => 'ArrayRef[Paws::Glue::Option]');
  has SourceType => (is => 'ro', isa => 'Str');
  has StagingTable => (is => 'ro', isa => 'Str');
  has Table => (is => 'ro', isa => 'Str');
  has TableSchema => (is => 'ro', isa => 'ArrayRef[Paws::Glue::Option]');
  has TempDir => (is => 'ro', isa => 'Str');
  has Upsert => (is => 'ro', isa => 'Bool');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Glue::SnowflakeNodeData

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Glue::SnowflakeNodeData object:

  $service_obj->Method(Att1 => { Action => $value, ..., Upsert => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Glue::SnowflakeNodeData object:

  $result = $service_obj->Method(...);
  $result->Att1->Action

=head1 DESCRIPTION

Specifies configuration for Snowflake nodes in Glue Studio.

=head1 ATTRIBUTES


=head2 Action => Str

Specifies what action to take when writing to a table with preexisting
data. Valid values: C< append>, C<merge>, C<truncate>, C<drop>.


=head2 AdditionalOptions => L<Paws::Glue::AdditionalOptions>

Specifies additional options passed to the Snowflake connector. If
options are specified elsewhere in this node, this will take
precedence.


=head2 AutoPushdown => Bool

Specifies whether automatic query pushdown is enabled. If pushdown is
enabled, then when a query is run on Spark, if part of the query can be
"pushed down" to the Snowflake server, it is pushed down. This improves
performance of some queries.


=head2 Connection => L<Paws::Glue::Option>

Specifies a Glue Data Catalog Connection to a Snowflake endpoint.


=head2 Database => Str

Specifies a Snowflake database for your node to use.


=head2 IamRole => L<Paws::Glue::Option>

Not currently used.


=head2 MergeAction => Str

Specifies a merge action. Valid values: C<simple>, C<custom>. If
simple, merge behavior is defined by C<MergeWhenMatched> and C<
MergeWhenNotMatched>. If custom, defined by C<MergeClause>.


=head2 MergeClause => Str

A SQL statement that specifies a custom merge behavior.


=head2 MergeWhenMatched => Str

Specifies how to resolve records that match preexisting data when
merging. Valid values: C< update>, C<delete>.


=head2 MergeWhenNotMatched => Str

Specifies how to process records that do not match preexisting data
when merging. Valid values: C<insert>, C<none>.


=head2 PostAction => Str

A SQL string run after the Snowflake connector performs its standard
actions.


=head2 PreAction => Str

A SQL string run before the Snowflake connector performs its standard
actions.


=head2 SampleQuery => Str

A SQL string used to retrieve data with the C<query> sourcetype.


=head2 Schema => Str

Specifies a Snowflake database schema for your node to use.


=head2 SelectedColumns => ArrayRef[L<Paws::Glue::Option>]

Specifies the columns combined to identify a record when detecting
matches for merges and upserts. A list of structures with C<value>,
C<label> and C< description> keys. Each structure describes a column.


=head2 SourceType => Str

Specifies how retrieved data is specified. Valid values: C<"table">, C<
"query">.


=head2 StagingTable => Str

The name of a staging table used when performing C<merge> or upsert
C<append> actions. Data is written to this table, then moved to
C<table> by a generated postaction.


=head2 Table => Str

Specifies a Snowflake table for your node to use.


=head2 TableSchema => ArrayRef[L<Paws::Glue::Option>]

Manually defines the target schema for the node. A list of structures
with C<value> , C<label> and C<description> keys. Each structure
defines a column.


=head2 TempDir => Str

Not currently used.


=head2 Upsert => Bool

Used when Action is C<append>. Specifies the resolution behavior when a
row already exists. If true, preexisting rows will be updated. If
false, those rows will be inserted.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Glue>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

