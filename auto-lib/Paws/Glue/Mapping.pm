# Generated by default/object.tt
package Paws::Glue::Mapping;
  use Moose;
  has Children => (is => 'ro', isa => 'ArrayRef[Paws::Glue::Mapping]');
  has Dropped => (is => 'ro', isa => 'Bool');
  has FromPath => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has FromType => (is => 'ro', isa => 'Str');
  has ToKey => (is => 'ro', isa => 'Str');
  has ToType => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Glue::Mapping

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Glue::Mapping object:

  $service_obj->Method(Att1 => { Children => $value, ..., ToType => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Glue::Mapping object:

  $result = $service_obj->Method(...);
  $result->Att1->Children

=head1 DESCRIPTION

Specifies the mapping of data property keys.

=head1 ATTRIBUTES


=head2 Children => ArrayRef[L<Paws::Glue::Mapping>]

Only applicable to nested data structures. If you want to change the
parent structure, but also one of its children, you can fill out this
data strucutre. It is also C<Mapping>, but its C<FromPath> will be the
parent's C<FromPath> plus the C<FromPath> from this structure.

For the children part, suppose you have the structure:

C<{ "FromPath": "OuterStructure", "ToKey": "OuterStructure", "ToType":
"Struct", "Dropped": false, "Chidlren": [{ "FromPath": "inner",
"ToKey": "inner", "ToType": "Double", "Dropped": false, }] }>

You can specify a C<Mapping> that looks like:

C<{ "FromPath": "OuterStructure", "ToKey": "OuterStructure", "ToType":
"Struct", "Dropped": false, "Chidlren": [{ "FromPath": "inner",
"ToKey": "inner", "ToType": "Double", "Dropped": false, }] }>


=head2 Dropped => Bool

If true, then the column is removed.


=head2 FromPath => ArrayRef[Str|Undef]

The table or column to be modified.


=head2 FromType => Str

The type of the data to be modified.


=head2 ToKey => Str

After the apply mapping, what the name of the column should be. Can be
the same as C<FromPath>.


=head2 ToType => Str

The data type that the data is to be modified to.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Glue>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

