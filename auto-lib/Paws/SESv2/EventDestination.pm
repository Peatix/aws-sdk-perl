# Generated by default/object.tt
package Paws::SESv2::EventDestination;
  use Moose;
  has CloudWatchDestination => (is => 'ro', isa => 'Paws::SESv2::CloudWatchDestination');
  has Enabled => (is => 'ro', isa => 'Bool');
  has EventBridgeDestination => (is => 'ro', isa => 'Paws::SESv2::EventBridgeDestination');
  has KinesisFirehoseDestination => (is => 'ro', isa => 'Paws::SESv2::KinesisFirehoseDestination');
  has MatchingEventTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', required => 1);
  has Name => (is => 'ro', isa => 'Str', required => 1);
  has PinpointDestination => (is => 'ro', isa => 'Paws::SESv2::PinpointDestination');
  has SnsDestination => (is => 'ro', isa => 'Paws::SESv2::SnsDestination');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SESv2::EventDestination

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SESv2::EventDestination object:

  $service_obj->Method(Att1 => { CloudWatchDestination => $value, ..., SnsDestination => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SESv2::EventDestination object:

  $result = $service_obj->Method(...);
  $result->Att1->CloudWatchDestination

=head1 DESCRIPTION

In the Amazon SES API v2, I<events> include message sends, deliveries,
opens, clicks, bounces, complaints and delivery delays. I<Event
destinations> are places that you can send information about these
events to. For example, you can send event data to Amazon SNS to
receive notifications when you receive bounces or complaints, or you
can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for
long-term storage.

=head1 ATTRIBUTES


=head2 CloudWatchDestination => L<Paws::SESv2::CloudWatchDestination>

An object that defines an Amazon CloudWatch destination for email
events. You can use Amazon CloudWatch to monitor and gain insights on
your email sending metrics.


=head2 Enabled => Bool

If C<true>, the event destination is enabled. When the event
destination is enabled, the specified event types are sent to the
destinations in this C<EventDestinationDefinition>.

If C<false>, the event destination is disabled. When the event
destination is disabled, events aren't sent to the specified
destinations.


=head2 EventBridgeDestination => L<Paws::SESv2::EventBridgeDestination>

An object that defines an Amazon EventBridge destination for email
events. You can use Amazon EventBridge to send notifications when
certain email events occur.


=head2 KinesisFirehoseDestination => L<Paws::SESv2::KinesisFirehoseDestination>

An object that defines an Amazon Kinesis Data Firehose destination for
email events. You can use Amazon Kinesis Data Firehose to stream data
to other services, such as Amazon S3 and Amazon Redshift.


=head2 B<REQUIRED> MatchingEventTypes => ArrayRef[Str|Undef]

The types of events that Amazon SES sends to the specified event
destinations.

=over

=item *

C<SEND> - The send request was successful and SES will attempt to
deliver the message to the recipientE<rsquo>s mail server. (If
account-level or global suppression is being used, SES will still count
it as a send, but delivery is suppressed.)

=item *

C<REJECT> - SES accepted the email, but determined that it contained a
virus and didnE<rsquo>t attempt to deliver it to the recipientE<rsquo>s
mail server.

=item *

C<BOUNCE> - (I<Hard bounce>) The recipient's mail server permanently
rejected the email. (I<Soft bounces> are only included when SES fails
to deliver the email after retrying for a period of time.)

=item *

C<COMPLAINT> - The email was successfully delivered to the
recipientE<rsquo>s mail server, but the recipient marked it as spam.

=item *

C<DELIVERY> - SES successfully delivered the email to the recipient's
mail server.

=item *

C<OPEN> - The recipient received the message and opened it in their
email client.

=item *

C<CLICK> - The recipient clicked one or more links in the email.

=item *

C<RENDERING_FAILURE> - The email wasn't sent because of a template
rendering issue. This event type can occur when template data is
missing, or when there is a mismatch between template parameters and
data. (This event type only occurs when you send email using the
C<SendTemplatedEmail>
(https://docs.aws.amazon.com/ses/latest/APIReference/API_SendTemplatedEmail.html)
or C<SendBulkTemplatedEmail>
(https://docs.aws.amazon.com/ses/latest/APIReference/API_SendBulkTemplatedEmail.html)
API operations.)

=item *

C<DELIVERY_DELAY> - The email couldn't be delivered to the
recipientE<rsquo>s mail server because a temporary issue occurred.
Delivery delays can occur, for example, when the recipient's inbox is
full, or when the receiving email server experiences a transient issue.

=item *

C<SUBSCRIPTION> - The email was successfully delivered, but the
recipient updated their subscription preferences by clicking on an
I<unsubscribe> link as part of your subscription management
(https://docs.aws.amazon.com/ses/latest/dg/sending-email-subscription-management.html).

=back



=head2 B<REQUIRED> Name => Str

A name that identifies the event destination.


=head2 PinpointDestination => L<Paws::SESv2::PinpointDestination>

An object that defines an Amazon Pinpoint project destination for email
events. You can send email event data to a Amazon Pinpoint project to
view metrics using the Transactional Messaging dashboards that are
built in to Amazon Pinpoint. For more information, see Transactional
Messaging Charts
(https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html)
in the I<Amazon Pinpoint User Guide>.


=head2 SnsDestination => L<Paws::SESv2::SnsDestination>

An object that defines an Amazon SNS destination for email events. You
can use Amazon SNS to send notifications when certain email events
occur.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SESv2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

