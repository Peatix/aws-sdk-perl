# Generated by default/object.tt
package Paws::IoTFleetWise::CanSignal;
  use Moose;
  has Factor => (is => 'ro', isa => 'Num', request_name => 'factor', traits => ['NameInRequest'], required => 1);
  has IsBigEndian => (is => 'ro', isa => 'Bool', request_name => 'isBigEndian', traits => ['NameInRequest'], required => 1);
  has IsSigned => (is => 'ro', isa => 'Bool', request_name => 'isSigned', traits => ['NameInRequest'], required => 1);
  has Length => (is => 'ro', isa => 'Int', request_name => 'length', traits => ['NameInRequest'], required => 1);
  has MessageId => (is => 'ro', isa => 'Int', request_name => 'messageId', traits => ['NameInRequest'], required => 1);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has Offset => (is => 'ro', isa => 'Num', request_name => 'offset', traits => ['NameInRequest'], required => 1);
  has SignalValueType => (is => 'ro', isa => 'Str', request_name => 'signalValueType', traits => ['NameInRequest']);
  has StartBit => (is => 'ro', isa => 'Int', request_name => 'startBit', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::IoTFleetWise::CanSignal

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::IoTFleetWise::CanSignal object:

  $service_obj->Method(Att1 => { Factor => $value, ..., StartBit => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::IoTFleetWise::CanSignal object:

  $result = $service_obj->Method(...);
  $result->Att1->Factor

=head1 DESCRIPTION

Information about a single controller area network (CAN) signal and the
messages it receives and transmits.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Factor => Num

A multiplier used to decode the CAN message.


=head2 B<REQUIRED> IsBigEndian => Bool

Whether the byte ordering of a CAN message is big-endian.


=head2 B<REQUIRED> IsSigned => Bool

Determines whether the message is signed (C<true>) or not (C<false>).
If it's signed, the message can represent both positive and negative
numbers. The C<isSigned> parameter only applies to the C<INTEGER> raw
signal type, and it doesn't affect the C<FLOATING_POINT> raw signal
type.


=head2 B<REQUIRED> Length => Int

How many bytes of data are in the message.


=head2 B<REQUIRED> MessageId => Int

The ID of the message.


=head2 Name => Str

The name of the signal.


=head2 B<REQUIRED> Offset => Num

The offset used to calculate the signal value. Combined with factor,
the calculation is C<value = raw_value * factor + offset>.


=head2 SignalValueType => Str

The value type of the signal. The default value is C<INTEGER>.


=head2 B<REQUIRED> StartBit => Int

Indicates the beginning of the CAN signal. This should always be the
least significant bit (LSB).

This value might be different from the value in a DBC file. For little
endian signals, C<startBit> is the same value as in the DBC file. For
big endian signals in a DBC file, the start bit is the most significant
bit (MSB). You will have to calculate the LSB instead and pass it as
the C<startBit>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::IoTFleetWise>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

