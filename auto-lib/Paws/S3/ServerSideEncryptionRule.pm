# Generated by default/object.tt
package Paws::S3::ServerSideEncryptionRule;
  use Moose;
  has ApplyServerSideEncryptionByDefault => (is => 'ro', isa => 'Paws::S3::ServerSideEncryptionByDefault');
  has BucketKeyEnabled => (is => 'ro', isa => 'Bool');

1;

### main pod documentation begin ###

=head1 NAME

Paws::S3::ServerSideEncryptionRule

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::S3::ServerSideEncryptionRule object:

  $service_obj->Method(Att1 => { ApplyServerSideEncryptionByDefault => $value, ..., BucketKeyEnabled => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::S3::ServerSideEncryptionRule object:

  $result = $service_obj->Method(...);
  $result->Att1->ApplyServerSideEncryptionByDefault

=head1 DESCRIPTION

Specifies the default server-side encryption configuration.

=over

=item *

B<General purpose buckets> - If you're specifying a customer managed
KMS key, we recommend using a fully qualified KMS key ARN. If you use a
KMS key alias instead, then KMS resolves the key within the
requesterE<rsquo>s account. This behavior can result in data that's
encrypted with a KMS key that belongs to the requester, and not the
bucket owner.

=item *

B<Directory buckets> - When you specify an KMS customer managed key
(https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#customer-cmk)
for encryption in your directory bucket, only use the key ID or key
ARN. The key alias format of the KMS key isn't supported.

=back


=head1 ATTRIBUTES


=head2 ApplyServerSideEncryptionByDefault => L<Paws::S3::ServerSideEncryptionByDefault>

Specifies the default server-side encryption to apply to new objects in
the bucket. If a PUT Object request doesn't specify any server-side
encryption, this default encryption will be applied.


=head2 BucketKeyEnabled => Bool

Specifies whether Amazon S3 should use an S3 Bucket Key with
server-side encryption using KMS (SSE-KMS) for new objects in the
bucket. Existing objects are not affected. Setting the
C<BucketKeyEnabled> element to C<true> causes Amazon S3 to use an S3
Bucket Key.

=over

=item *

B<General purpose buckets> - By default, S3 Bucket Key is not enabled.
For more information, see Amazon S3 Bucket Keys
(https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html) in
the I<Amazon S3 User Guide>.

=item *

B<Directory buckets> - S3 Bucket Keys are always enabled for C<GET> and
C<PUT> operations in a directory bucket and canE<rsquo>t be disabled.
S3 Bucket Keys aren't supported, when you copy SSE-KMS encrypted
objects from general purpose buckets to directory buckets, from
directory buckets to general purpose buckets, or between directory
buckets, through CopyObject
(https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html),
UploadPartCopy
(https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html),
the Copy operation in Batch Operations
(https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-objects-Batch-Ops),
or the import jobs
(https://docs.aws.amazon.com/AmazonS3/latest/userguide/create-import-job).
In this case, Amazon S3 makes a call to KMS every time a copy request
is made for a KMS-encrypted object.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::S3>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

