# Generated by default/object.tt
package Paws::MediaConvert::AudioSelector;
  use Moose;
  has AudioDurationCorrection => (is => 'ro', isa => 'Str', request_name => 'audioDurationCorrection', traits => ['NameInRequest']);
  has CustomLanguageCode => (is => 'ro', isa => 'Str', request_name => 'customLanguageCode', traits => ['NameInRequest']);
  has DefaultSelection => (is => 'ro', isa => 'Str', request_name => 'defaultSelection', traits => ['NameInRequest']);
  has ExternalAudioFileInput => (is => 'ro', isa => 'Str', request_name => 'externalAudioFileInput', traits => ['NameInRequest']);
  has HlsRenditionGroupSettings => (is => 'ro', isa => 'Paws::MediaConvert::HlsRenditionGroupSettings', request_name => 'hlsRenditionGroupSettings', traits => ['NameInRequest']);
  has LanguageCode => (is => 'ro', isa => 'Str', request_name => 'languageCode', traits => ['NameInRequest']);
  has Offset => (is => 'ro', isa => 'Int', request_name => 'offset', traits => ['NameInRequest']);
  has Pids => (is => 'ro', isa => 'ArrayRef[Int]', request_name => 'pids', traits => ['NameInRequest']);
  has ProgramSelection => (is => 'ro', isa => 'Int', request_name => 'programSelection', traits => ['NameInRequest']);
  has RemixSettings => (is => 'ro', isa => 'Paws::MediaConvert::RemixSettings', request_name => 'remixSettings', traits => ['NameInRequest']);
  has SelectorType => (is => 'ro', isa => 'Str', request_name => 'selectorType', traits => ['NameInRequest']);
  has Tracks => (is => 'ro', isa => 'ArrayRef[Int]', request_name => 'tracks', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaConvert::AudioSelector

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaConvert::AudioSelector object:

  $service_obj->Method(Att1 => { AudioDurationCorrection => $value, ..., Tracks => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaConvert::AudioSelector object:

  $result = $service_obj->Method(...);
  $result->Att1->AudioDurationCorrection

=head1 DESCRIPTION

Use Audio selectors to specify a track or set of tracks from the input
that you will use in your outputs. You can use multiple Audio selectors
per input.

=head1 ATTRIBUTES


=head2 AudioDurationCorrection => Str

Apply audio timing corrections to help synchronize audio and video in
your output. To apply timing corrections, your input must meet the
following requirements: * Container: MP4, or MOV, with an accurate
time-to-sample (STTS) table. * Audio track: AAC. Choose from the
following audio timing correction settings: * Disabled (Default): Apply
no correction. * Auto: Recommended for most inputs. MediaConvert
analyzes the audio timing in your input and determines which correction
setting to use, if needed. * Track: Adjust the duration of each audio
frame by a constant amount to align the audio track length with STTS
duration. Track-level correction does not affect pitch, and is
recommended for tonal audio content such as music. * Frame: Adjust the
duration of each audio frame by a variable amount to align audio frames
with STTS timestamps. No corrections are made to already-aligned
frames. Frame-level correction may affect the pitch of corrected
frames, and is recommended for atonal audio content such as speech or
percussion. * Force: Apply audio duration correction, either Track or
Frame depending on your input, regardless of the accuracy of your
input's STTS table. Your output audio and video may not be aligned or
it may contain audio artifacts.


=head2 CustomLanguageCode => Str

Selects a specific language code from within an audio source, using the
ISO 639-2 or ISO 639-3 three-letter language code


=head2 DefaultSelection => Str

Enable this setting on one audio selector to set it as the default for
the job. The service uses this default for outputs where it can't find
the specified input audio. If you don't set a default, those outputs
have no audio.


=head2 ExternalAudioFileInput => Str

Specify the S3, HTTP, or HTTPS URL for your external audio file input.


=head2 HlsRenditionGroupSettings => L<Paws::MediaConvert::HlsRenditionGroupSettings>

Settings specific to audio sources in an HLS alternate rendition group.
Specify the properties (renditionGroupId, renditionName or
renditionLanguageCode) to identify the unique audio track among the
alternative rendition groups present in the HLS manifest. If no unique
track is found, or multiple tracks match the properties provided, the
job fails. If no properties in hlsRenditionGroupSettings are specified,
the default audio track within the video segment is chosen. If there is
no audio within video segment, the alternative audio with DEFAULT=YES
is chosen instead.


=head2 LanguageCode => Str

Specify the language to select from your audio input. In the
MediaConvert console choose from a list of languages. In your JSON job
settings choose from an ISO 639-2 three-letter code listed at
https://www.loc.gov/standards/iso639-2/php/code_list.php


=head2 Offset => Int

Specify a time delta, in milliseconds, to offset the audio from the
input video. To specify no offset: Keep the default value, 0. To
specify an offset: Enter an integer from -2147483648 to 2147483647


=head2 Pids => ArrayRef[Int]

Selects a specific PID from within an audio source (e.g. 257 selects
PID 0x101).


=head2 ProgramSelection => Int

Use this setting for input streams that contain Dolby E, to have the
service extract specific program data from the track. To select
multiple programs, create multiple selectors with the same Track and
different Program numbers. In the console, this setting is visible when
you set Selector type to Track. Choose the program number from the
dropdown list. If your input file has incorrect metadata, you can
choose All channels instead of a program number to have the service
ignore the program IDs and include all the programs in the track.


=head2 RemixSettings => L<Paws::MediaConvert::RemixSettings>

Use these settings to reorder the audio channels of one input to match
those of another input. This allows you to combine the two files into a
single output, one after the other.


=head2 SelectorType => Str

Specifies the type of the audio selector.


=head2 Tracks => ArrayRef[Int]

Identify a track from the input audio to include in this selector by
entering the track index number. To include several tracks in a single
audio selector, specify multiple tracks as follows. Using the console,
enter a comma-separated list. For example, type "1,2,3" to include
tracks 1 through 3.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaConvert>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

