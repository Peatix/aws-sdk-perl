# Generated by default/object.tt
package Paws::MediaConvert::DolbyVision;
  use Moose;
  has L6Metadata => (is => 'ro', isa => 'Paws::MediaConvert::DolbyVisionLevel6Metadata', request_name => 'l6Metadata', traits => ['NameInRequest']);
  has L6Mode => (is => 'ro', isa => 'Str', request_name => 'l6Mode', traits => ['NameInRequest']);
  has Mapping => (is => 'ro', isa => 'Str', request_name => 'mapping', traits => ['NameInRequest']);
  has Profile => (is => 'ro', isa => 'Str', request_name => 'profile', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaConvert::DolbyVision

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaConvert::DolbyVision object:

  $service_obj->Method(Att1 => { L6Metadata => $value, ..., Profile => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaConvert::DolbyVision object:

  $result = $service_obj->Method(...);
  $result->Att1->L6Metadata

=head1 DESCRIPTION

Create Dolby Vision Profile 5 or Profile 8.1 compatible video output.

=head1 ATTRIBUTES


=head2 L6Metadata => L<Paws::MediaConvert::DolbyVisionLevel6Metadata>

Use these settings when you set DolbyVisionLevel6Mode to SPECIFY to
override the MaxCLL and MaxFALL values in your input with new values.


=head2 L6Mode => Str

Use Dolby Vision Mode to choose how the service will handle Dolby
Vision MaxCLL and MaxFALL properies.


=head2 Mapping => Str

Required when you set Dolby Vision Profile to Profile 8.1. When you set
Content mapping to None, content mapping is not applied to the
HDR10-compatible signal. Depending on the source peak nit level,
clipping might occur on HDR devices without Dolby Vision. When you set
Content mapping to HDR10 1000, the transcoder creates a 1,000 nits peak
HDR10-compatible signal by applying static content mapping to the
source. This mode is speed-optimized for PQ10 sources with metadata
that is created from analysis. For graded Dolby Vision content, be
aware that creative intent might not be guaranteed with extreme 1,000
nits trims.


=head2 Profile => Str

Required when you enable Dolby Vision. Use Profile 5 to include
frame-interleaved Dolby Vision metadata in your output. Your input must
include Dolby Vision metadata or an HDR10 YUV color space. Use Profile
8.1 to include frame-interleaved Dolby Vision metadata and HDR10
metadata in your output. Your input must include Dolby Vision metadata.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaConvert>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

