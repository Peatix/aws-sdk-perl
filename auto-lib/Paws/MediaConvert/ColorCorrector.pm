# Generated by default/object.tt
package Paws::MediaConvert::ColorCorrector;
  use Moose;
  has Brightness => (is => 'ro', isa => 'Int', request_name => 'brightness', traits => ['NameInRequest']);
  has ClipLimits => (is => 'ro', isa => 'Paws::MediaConvert::ClipLimits', request_name => 'clipLimits', traits => ['NameInRequest']);
  has ColorSpaceConversion => (is => 'ro', isa => 'Str', request_name => 'colorSpaceConversion', traits => ['NameInRequest']);
  has Contrast => (is => 'ro', isa => 'Int', request_name => 'contrast', traits => ['NameInRequest']);
  has Hdr10Metadata => (is => 'ro', isa => 'Paws::MediaConvert::Hdr10Metadata', request_name => 'hdr10Metadata', traits => ['NameInRequest']);
  has HdrToSdrToneMapper => (is => 'ro', isa => 'Str', request_name => 'hdrToSdrToneMapper', traits => ['NameInRequest']);
  has Hue => (is => 'ro', isa => 'Int', request_name => 'hue', traits => ['NameInRequest']);
  has MaxLuminance => (is => 'ro', isa => 'Int', request_name => 'maxLuminance', traits => ['NameInRequest']);
  has SampleRangeConversion => (is => 'ro', isa => 'Str', request_name => 'sampleRangeConversion', traits => ['NameInRequest']);
  has Saturation => (is => 'ro', isa => 'Int', request_name => 'saturation', traits => ['NameInRequest']);
  has SdrReferenceWhiteLevel => (is => 'ro', isa => 'Int', request_name => 'sdrReferenceWhiteLevel', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaConvert::ColorCorrector

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaConvert::ColorCorrector object:

  $service_obj->Method(Att1 => { Brightness => $value, ..., SdrReferenceWhiteLevel => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaConvert::ColorCorrector object:

  $result = $service_obj->Method(...);
  $result->Att1->Brightness

=head1 DESCRIPTION

Settings for color correction.

=head1 ATTRIBUTES


=head2 Brightness => Int

Brightness level.


=head2 ClipLimits => L<Paws::MediaConvert::ClipLimits>

Specify YUV limits and RGB tolerances when you set Sample range
conversion to Limited range clip.


=head2 ColorSpaceConversion => Str

Specify the color space you want for this output. The service supports
conversion between HDR formats, between SDR formats, from SDR to HDR,
and from HDR to SDR. SDR to HDR conversion doesn't upgrade the dynamic
range. The converted video has an HDR format, but visually appears the
same as an unconverted output. HDR to SDR conversion uses tone mapping
to approximate the outcome of manually regrading from HDR to SDR. When
you specify an output color space, MediaConvert uses the following
color space metadata, which includes color primaries, transfer
characteristics, and matrix coefficients: * HDR 10: BT.2020, PQ,
BT.2020 non-constant * HLG 2020: BT.2020, HLG, BT.2020 non-constant *
P3DCI (Theater): DCIP3, SMPTE 428M, BT.709 * P3D65 (SDR): Display P3,
sRGB, BT.709 * P3D65 (HDR): Display P3, PQ, BT.709


=head2 Contrast => Int

Contrast level.


=head2 Hdr10Metadata => L<Paws::MediaConvert::Hdr10Metadata>

Use these settings when you convert to the HDR 10 color space. Specify
the SMPTE ST 2086 Mastering Display Color Volume static metadata that
you want signaled in the output. These values don't affect the pixel
values that are encoded in the video stream. They are intended to help
the downstream video player display content in a way that reflects the
intentions of the the content creator. When you set Color space
conversion to HDR 10, these settings are required. You must set values
for Max frame average light level and Max content light level; these
settings don't have a default value. The default values for the other
HDR 10 metadata settings are defined by the P3D65 color space. For more
information about MediaConvert HDR jobs, see
https://docs.aws.amazon.com/console/mediaconvert/hdr.


=head2 HdrToSdrToneMapper => Str

Specify how MediaConvert maps brightness and colors from your HDR input
to your SDR output. The mode that you select represents a creative
choice, with different tradeoffs in the details and tones of your
output. To maintain details in bright or saturated areas of your
output: Choose Preserve details. For some sources, your SDR output may
look less bright and less saturated when compared to your HDR source.
MediaConvert automatically applies this mode for HLG sources,
regardless of your choice. For a bright and saturated output: Choose
Vibrant. We recommend that you choose this mode when any of your source
content is HDR10, and for the best results when it is mastered for 1000
nits. You may notice loss of details in bright or saturated areas of
your output. HDR to SDR tone mapping has no effect when your input is
SDR.


=head2 Hue => Int

Hue in degrees.


=head2 MaxLuminance => Int

Specify the maximum mastering display luminance. Enter an integer from
0 to 2147483647, in units of 0.0001 nits. For example, enter 10000000
for 1000 nits.


=head2 SampleRangeConversion => Str

Specify how MediaConvert limits the color sample range for this output.
To create a limited range output from a full range input: Choose
Limited range squeeze. For full range inputs, MediaConvert performs a
linear offset to color samples equally across all pixels and frames.
Color samples in 10-bit outputs are limited to 64 through 940, and
8-bit outputs are limited to 16 through 235. Note: For limited range
inputs, values for color samples are passed through to your output
unchanged. MediaConvert does not limit the sample range. To correct
pixels in your input that are out of range or out of gamut: Choose
Limited range clip. Use for broadcast applications. MediaConvert
conforms any pixels outside of the values that you specify under
Minimum YUV and Maximum YUV to limited range bounds. MediaConvert also
corrects any YUV values that, when converted to RGB, would be outside
the bounds you specify under Minimum RGB tolerance and Maximum RGB
tolerance. With either limited range conversion, MediaConvert writes
the sample range metadata in the output.


=head2 Saturation => Int

Saturation level.


=head2 SdrReferenceWhiteLevel => Int

Specify the reference white level, in nits, for all of your SDR inputs.
Use to correct brightness levels within HDR10 outputs. The following
color metadata must be present in your SDR input: color primaries,
transfer characteristics, and matrix coefficients. If your SDR input
has missing color metadata, or if you want to correct input color
metadata, manually specify a color space in the input video selector.
For 1,000 nit peak brightness displays, we recommend that you set SDR
reference white level to 203 (according to ITU-R BT.2408). Leave blank
to use the default value of 100, or specify an integer from 100 to
1000.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaConvert>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

