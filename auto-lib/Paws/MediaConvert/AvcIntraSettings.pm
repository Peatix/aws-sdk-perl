# Generated by default/object.tt
package Paws::MediaConvert::AvcIntraSettings;
  use Moose;
  has AvcIntraClass => (is => 'ro', isa => 'Str', request_name => 'avcIntraClass', traits => ['NameInRequest']);
  has AvcIntraUhdSettings => (is => 'ro', isa => 'Paws::MediaConvert::AvcIntraUhdSettings', request_name => 'avcIntraUhdSettings', traits => ['NameInRequest']);
  has FramerateControl => (is => 'ro', isa => 'Str', request_name => 'framerateControl', traits => ['NameInRequest']);
  has FramerateConversionAlgorithm => (is => 'ro', isa => 'Str', request_name => 'framerateConversionAlgorithm', traits => ['NameInRequest']);
  has FramerateDenominator => (is => 'ro', isa => 'Int', request_name => 'framerateDenominator', traits => ['NameInRequest']);
  has FramerateNumerator => (is => 'ro', isa => 'Int', request_name => 'framerateNumerator', traits => ['NameInRequest']);
  has InterlaceMode => (is => 'ro', isa => 'Str', request_name => 'interlaceMode', traits => ['NameInRequest']);
  has PerFrameMetrics => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'perFrameMetrics', traits => ['NameInRequest']);
  has ScanTypeConversionMode => (is => 'ro', isa => 'Str', request_name => 'scanTypeConversionMode', traits => ['NameInRequest']);
  has SlowPal => (is => 'ro', isa => 'Str', request_name => 'slowPal', traits => ['NameInRequest']);
  has Telecine => (is => 'ro', isa => 'Str', request_name => 'telecine', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaConvert::AvcIntraSettings

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaConvert::AvcIntraSettings object:

  $service_obj->Method(Att1 => { AvcIntraClass => $value, ..., Telecine => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaConvert::AvcIntraSettings object:

  $result = $service_obj->Method(...);
  $result->Att1->AvcIntraClass

=head1 DESCRIPTION

Required when you choose AVC-Intra for your output video codec. For
more information about the AVC-Intra settings, see the relevant
specification. For detailed information about SD and HD in AVC-Intra,
see https://ieeexplore.ieee.org/document/7290936. For information about
4K/2K in AVC-Intra, see
https://pro-av.panasonic.net/en/avc-ultra/AVC-ULTRAoverview.pdf.

=head1 ATTRIBUTES


=head2 AvcIntraClass => Str

Specify the AVC-Intra class of your output. The AVC-Intra class
selection determines the output video bit rate depending on the frame
rate of the output. Outputs with higher class values have higher
bitrates and improved image quality. Note that for Class 4K/2K,
MediaConvert supports only 4:2:2 chroma subsampling.


=head2 AvcIntraUhdSettings => L<Paws::MediaConvert::AvcIntraUhdSettings>

Optional when you set AVC-Intra class to Class 4K/2K. When you set
AVC-Intra class to a different value, this object isn't allowed.


=head2 FramerateControl => Str

If you are using the console, use the Framerate setting to specify the
frame rate for this output. If you want to keep the same frame rate as
the input video, choose Follow source. If you want to do frame rate
conversion, choose a frame rate from the dropdown list or choose
Custom. The framerates shown in the dropdown list are decimal
approximations of fractions. If you choose Custom, specify your frame
rate as a fraction.


=head2 FramerateConversionAlgorithm => Str

Choose the method that you want MediaConvert to use when increasing or
decreasing your video's frame rate. For numerically simple conversions,
such as 60 fps to 30 fps: We recommend that you keep the default value,
Drop duplicate. For numerically complex conversions, to avoid stutter:
Choose Interpolate. This results in a smooth picture, but might
introduce undesirable video artifacts. For complex frame rate
conversions, especially if your source video has already been converted
from its original cadence: Choose FrameFormer to do motion-compensated
interpolation. FrameFormer uses the best conversion method frame by
frame. Note that using FrameFormer increases the transcoding time and
incurs a significant add-on cost. When you choose FrameFormer, your
input video resolution must be at least 128x96. To create an output
with the same number of frames as your input: Choose Maintain frame
count. When you do, MediaConvert will not drop, interpolate, add, or
otherwise change the frame count from your input to your output. Note
that since the frame count is maintained, the duration of your output
will become shorter at higher frame rates and longer at lower frame
rates.


=head2 FramerateDenominator => Int

When you use the API for transcode jobs that use frame rate conversion,
specify the frame rate as a fraction. For example, 24000 / 1001 =
23.976 fps. Use FramerateDenominator to specify the denominator of this
fraction. In this example, use 1001 for the value of
FramerateDenominator. When you use the console for transcode jobs that
use frame rate conversion, provide the value as a decimal number for
Framerate. In this example, specify 23.976.


=head2 FramerateNumerator => Int

When you use the API for transcode jobs that use frame rate conversion,
specify the frame rate as a fraction. For example, 24000 / 1001 =
23.976 fps. Use FramerateNumerator to specify the numerator of this
fraction. In this example, use 24000 for the value of
FramerateNumerator. When you use the console for transcode jobs that
use frame rate conversion, provide the value as a decimal number for
Framerate. In this example, specify 23.976.


=head2 InterlaceMode => Str

Choose the scan line type for the output. Keep the default value,
Progressive to create a progressive output, regardless of the scan type
of your input. Use Top field first or Bottom field first to create an
output that's interlaced with the same field polarity throughout. Use
Follow, default top or Follow, default bottom to produce outputs with
the same field polarity as the source. For jobs that have multiple
inputs, the output field polarity might change over the course of the
output. Follow behavior depends on the input scan type. If the source
is interlaced, the output will be interlaced with the same polarity as
the source. If the source is progressive, the output will be interlaced
with top field bottom field first, depending on which of the Follow
options you choose.


=head2 PerFrameMetrics => ArrayRef[Str|Undef]

Optionally choose one or more per frame metric reports to generate
along with your output. You can use these metrics to analyze your video
output according to one or more commonly used image quality metrics.
You can specify per frame metrics for output groups or for individual
outputs. When you do, MediaConvert writes a CSV (Comma-Separated
Values) file to your S3 output destination, named after the output name
and metric type. For example: videofile_PSNR.csv Jobs that generate per
frame metrics will take longer to complete, depending on the resolution
and complexity of your output. For example, some 4K jobs might take up
to twice as long to complete. Note that when analyzing the video
quality of your output, or when comparing the video quality of multiple
different outputs, we generally also recommend a detailed visual review
in a controlled environment. You can choose from the following per
frame metrics: * PSNR: Peak Signal-to-Noise Ratio * SSIM: Structural
Similarity Index Measure * MS_SSIM: Multi-Scale Similarity Index
Measure * PSNR_HVS: Peak Signal-to-Noise Ratio, Human Visual System *
VMAF: Video Multi-Method Assessment Fusion * QVBR: Quality-Defined
Variable Bitrate. This option is only available when your output uses
the QVBR rate control mode.


=head2 ScanTypeConversionMode => Str

Use this setting for interlaced outputs, when your output frame rate is
half of your input frame rate. In this situation, choose Optimized
interlacing to create a better quality interlaced output. In this case,
each progressive frame from the input corresponds to an interlaced
field in the output. Keep the default value, Basic interlacing, for all
other output frame rates. With basic interlacing, MediaConvert performs
any frame rate conversion first and then interlaces the frames. When
you choose Optimized interlacing and you set your output frame rate to
a value that isn't suitable for optimized interlacing, MediaConvert
automatically falls back to basic interlacing. Required settings: To
use optimized interlacing, you must set Telecine to None or Soft. You
can't use optimized interlacing for hard telecine outputs. You must
also set Interlace mode to a value other than Progressive.


=head2 SlowPal => Str

Ignore this setting unless your input frame rate is 23.976 or 24 frames
per second (fps). Enable slow PAL to create a 25 fps output. When you
enable slow PAL, MediaConvert relabels the video frames to 25 fps and
resamples your audio to keep it synchronized with the video. Note that
enabling this setting will slightly reduce the duration of your video.
Required settings: You must also set Framerate to 25.


=head2 Telecine => Str

When you do frame rate conversion from 23.976 frames per second (fps)
to 29.97 fps, and your output scan type is interlaced, you can
optionally enable hard telecine to create a smoother picture. When you
keep the default value, None, MediaConvert does a standard frame rate
conversion to 29.97 without doing anything with the field polarity to
create a smoother picture.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaConvert>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

