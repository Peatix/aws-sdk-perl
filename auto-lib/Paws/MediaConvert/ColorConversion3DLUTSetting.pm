# Generated by default/object.tt
package Paws::MediaConvert::ColorConversion3DLUTSetting;
  use Moose;
  has FileInput => (is => 'ro', isa => 'Str', request_name => 'fileInput', traits => ['NameInRequest']);
  has InputColorSpace => (is => 'ro', isa => 'Str', request_name => 'inputColorSpace', traits => ['NameInRequest']);
  has InputMasteringLuminance => (is => 'ro', isa => 'Int', request_name => 'inputMasteringLuminance', traits => ['NameInRequest']);
  has OutputColorSpace => (is => 'ro', isa => 'Str', request_name => 'outputColorSpace', traits => ['NameInRequest']);
  has OutputMasteringLuminance => (is => 'ro', isa => 'Int', request_name => 'outputMasteringLuminance', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaConvert::ColorConversion3DLUTSetting

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaConvert::ColorConversion3DLUTSetting object:

  $service_obj->Method(Att1 => { FileInput => $value, ..., OutputMasteringLuminance => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaConvert::ColorConversion3DLUTSetting object:

  $result = $service_obj->Method(...);
  $result->Att1->FileInput

=head1 DESCRIPTION

Custom 3D lut settings

=head1 ATTRIBUTES


=head2 FileInput => Str

Specify the input file S3, HTTP, or HTTPS URL for your 3D LUT .cube
file. Note that MediaConvert accepts 3D LUT files up to 8MB in size.


=head2 InputColorSpace => Str

Specify which inputs use this 3D LUT, according to their color space.


=head2 InputMasteringLuminance => Int

Specify which inputs use this 3D LUT, according to their luminance. To
apply this 3D LUT to HDR10 or P3D65 (HDR) inputs with a specific
mastering luminance: Enter an integer from 0 to 2147483647,
corresponding to the input's Maximum luminance value. To apply this 3D
LUT to any input regardless of its luminance: Leave blank, or enter 0.


=head2 OutputColorSpace => Str

Specify which outputs use this 3D LUT, according to their color space.


=head2 OutputMasteringLuminance => Int

Specify which outputs use this 3D LUT, according to their luminance. To
apply this 3D LUT to HDR10 or P3D65 (HDR) outputs with a specific
luminance: Enter an integer from 0 to 2147483647, corresponding to the
output's luminance. To apply this 3D LUT to any output regardless of
its luminance: Leave blank, or enter 0.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaConvert>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

