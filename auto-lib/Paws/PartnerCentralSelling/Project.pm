# Generated by default/object.tt
package Paws::PartnerCentralSelling::Project;
  use Moose;
  has AdditionalComments => (is => 'ro', isa => 'Str');
  has ApnPrograms => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has CompetitorName => (is => 'ro', isa => 'Str');
  has CustomerBusinessProblem => (is => 'ro', isa => 'Str');
  has CustomerUseCase => (is => 'ro', isa => 'Str');
  has DeliveryModels => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ExpectedCustomerSpend => (is => 'ro', isa => 'ArrayRef[Paws::PartnerCentralSelling::ExpectedCustomerSpend]');
  has OtherCompetitorNames => (is => 'ro', isa => 'Str');
  has OtherSolutionDescription => (is => 'ro', isa => 'Str');
  has RelatedOpportunityIdentifier => (is => 'ro', isa => 'Str');
  has SalesActivities => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Title => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::PartnerCentralSelling::Project

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::PartnerCentralSelling::Project object:

  $service_obj->Method(Att1 => { AdditionalComments => $value, ..., Title => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::PartnerCentralSelling::Project object:

  $result = $service_obj->Method(...);
  $result->Att1->AdditionalComments

=head1 DESCRIPTION

An object that contains the C<Opportunity>'s project details.

=head1 ATTRIBUTES


=head2 AdditionalComments => Str

Captures additional comments or information for the C<Opportunity> that
weren't captured in other fields.


=head2 ApnPrograms => ArrayRef[Str|Undef]

Specifies the Amazon Partner Network (APN) program that influenced the
C<Opportunity>. APN programs refer to specific partner programs or
initiatives that can impact the C<Opportunity>.

Valid values: C<APN Immersion Days | APN Solution Space | ATO
(Authority to Operate) | AWS Marketplace Campaign | IS Immersion Day
SFID Program | ISV Workload Migration | Migration Acceleration Program
| P3 | Partner Launch Initiative | Partner Opportunity Acceleration
Funded | The Next Smart | VMware Cloud on AWS | Well-Architected |
Windows | Workspaces/AppStream Accelerator Program | WWPS NDPP>


=head2 CompetitorName => Str

Name of the C<Opportunity>'s competitor (if any). Use C<Other> to
submit a value not in the picklist.


=head2 CustomerBusinessProblem => Str

Describes the problem the end customer has, and how the partner is
helping. Utilize this field to provide a concise narrative that
outlines the customer's business challenge or issue. Elaborate on how
the partner's solution or offerings align to resolve the customer's
business problem. Include relevant information about the partner's
value proposition, unique selling points, and expertise to tackle the
issue. Offer insights on how the proposed solution meets the customer's
needs and provides value. Use concise language and precise descriptions
to convey the context and significance of the C<Opportunity>. The
content in this field helps Amazon Web Services understand the nature
of the C<Opportunity> and the strategic fit of the partner's solution.


=head2 CustomerUseCase => Str

Specifies the proposed solution focus or type of workload for the
Opportunity. This field captures the primary use case or objective of
the proposed solution, and provides context and clarity to the
addressed workload.

Valid values: C<AI Machine Learning and Analytics | Archiving | Big
Data: Data Warehouse/Data Integration/ETL/Data Lake/BI | Blockchain |
Business Applications: Mainframe Modernization | Business Applications
& Contact Center | Business Applications & SAP Production | Centralized
Operations Management | Cloud Management Tools | Cloud Management Tools
& DevOps with Continuous Integration & Continuous Delivery (CICD) |
Configuration, Compliance & Auditing | Connected Services | Containers
& Serverless | Content Delivery & Edge Services | Database | Edge
Computing/End User Computing | Energy | Enterprise Governance &
Controls | Enterprise Resource Planning | Financial Services |
Healthcare and Life Sciences | High Performance Computing | Hybrid
Application Platform | Industrial Software | IOT | Manufacturing,
Supply Chain and Operations | Media & High performance computing (HPC)
| Migration/Database Migration | Monitoring, logging and performance |
Monitoring & Observability | Networking | Outpost | SAP | Security &
Compliance | Storage & Backup | Training | VMC | VMWare | Web
development & DevOps>


=head2 DeliveryModels => ArrayRef[Str|Undef]

Specifies the deployment or consumption model for your solution or
service in the C<Opportunity>'s context. You can select multiple
options.

Options' descriptions from the C<Delivery Model> field are:

=over

=item *

SaaS or PaaS: Your Amazon Web Services based solution deployed as SaaS
or PaaS in your Amazon Web Services environment.

=item *

BYOL or AMI: Your Amazon Web Services based solution deployed as BYOL
or AMI in the end customer's Amazon Web Services environment.

=item *

Managed Services: The end customer's Amazon Web Services business
management (For example: Consulting, design, implementation, billing
support, cost optimization, technical support).

=item *

Professional Services: Offerings to help enterprise end customers
achieve specific business outcomes for enterprise cloud adoption (For
example: Advisory or transformation planning).

=item *

Resell: Amazon Web Services accounts and billing management for your
customers.

=item *

Other: Delivery model not described above.

=back



=head2 ExpectedCustomerSpend => ArrayRef[L<Paws::PartnerCentralSelling::ExpectedCustomerSpend>]

Represents the estimated amount that the customer is expected to spend
on AWS services related to the opportunity. This helps in evaluating
the potential financial value of the opportunity for AWS.


=head2 OtherCompetitorNames => Str

Only allowed when C<CompetitorNames> has C<Other> selected.


=head2 OtherSolutionDescription => Str

Specifies the offered solution for the customer's business problem when
the C< RelatedEntityIdentifiers.Solutions> field value is C<Other>.


=head2 RelatedOpportunityIdentifier => Str

Specifies the current opportunity's parent opportunity identifier.


=head2 SalesActivities => ArrayRef[Str|Undef]

Specifies the C<Opportunity>'s sales activities conducted with the end
customer. These activities help drive Amazon Web Services assignment
priority.

Valid values:

=over

=item *

Initialized discussions with customer: Initial conversations with the
customer to understand their needs and introduce your solution.

=item *

Customer has shown interest in solution: After initial discussions, the
customer is interested in your solution.

=item *

Conducted POC/demo: You conducted a proof of concept (POC) or
demonstration of the solution for the customer.

=item *

In evaluation/planning stage: The customer is evaluating the solution
and planning potential implementation.

=item *

Agreed on solution to Business Problem: Both parties agree on how the
solution addresses the customer's business problem.

=item *

Completed Action Plan: A detailed action plan is complete and outlines
the steps for implementation.

=item *

Finalized Deployment Need: Both parties agree with and finalized the
deployment needs.

=item *

SOW Signed: Both parties signed a statement of work (SOW), and
formalize the agreement and detail the project scope and deliverables.

=back



=head2 Title => Str

Specifies the C<Opportunity>'s title or name.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::PartnerCentralSelling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

