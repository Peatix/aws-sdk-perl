# Generated by default/object.tt
package Paws::PartnerCentralSelling::LifeCycleSummary;
  use Moose;
  has ClosedLostReason => (is => 'ro', isa => 'Str');
  has NextSteps => (is => 'ro', isa => 'Str');
  has ReviewComments => (is => 'ro', isa => 'Str');
  has ReviewStatus => (is => 'ro', isa => 'Str');
  has ReviewStatusReason => (is => 'ro', isa => 'Str');
  has Stage => (is => 'ro', isa => 'Str');
  has TargetCloseDate => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::PartnerCentralSelling::LifeCycleSummary

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::PartnerCentralSelling::LifeCycleSummary object:

  $service_obj->Method(Att1 => { ClosedLostReason => $value, ..., TargetCloseDate => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::PartnerCentralSelling::LifeCycleSummary object:

  $result = $service_obj->Method(...);
  $result->Att1->ClosedLostReason

=head1 DESCRIPTION

An object that contains a C<LifeCycle> object's subset of fields.

=head1 ATTRIBUTES


=head2 ClosedLostReason => Str

Specifies the reason code when an opportunity is marked as I<Closed
Lost>. When you select an appropriate reason code, you communicate the
context for closing the C<Opportunity>, and aid in accurate reports and
analysis of opportunity outcomes.


=head2 NextSteps => Str

Specifies the upcoming actions or tasks for the C<Opportunity>. This
field is utilized to communicate to Amazon Web Services the next
actions required for the C<Opportunity>.


=head2 ReviewComments => Str

Indicates why an opportunity was sent back for further details.
Partners must take corrective action based on the C<ReviewComments>.


=head2 ReviewStatus => Str

Indicates the review status of a partner referred opportunity. This
field is read-only and only applicable for partner referrals. Valid
values:

=over

=item *

Pending Submission: Not submitted for validation (editable).

=item *

Submitted: Submitted for validation and not yet Amazon Web Services
reviewed (read-only).

=item *

In Review: Undergoing Amazon Web Services validation (read-only).

=item *

Action Required: Address any issues Amazon Web Services highlights. Use
the C<UpdateOpportunity> API action to update the opportunity, and
ensure you make all required changes. Only these fields are editable
when the C<Lifecycle.ReviewStatus> is C<Action Required>:

=over

=item *

Customer.Account.Address.City

=item *

Customer.Account.Address.CountryCode

=item *

Customer.Account.Address.PostalCode

=item *

Customer.Account.Address.StateOrRegion

=item *

Customer.Account.Address.StreetAddress

=item *

Customer.Account.WebsiteUrl

=item *

LifeCycle.TargetCloseDate

=item *

Project.ExpectedCustomerSpend.Amount

=item *

Project.ExpectedCustomerSpend.CurrencyCode

=item *

Project.CustomerBusinessProblem

=item *

PartnerOpportunityIdentifier

=back

After updates, the opportunity re-enters the validation phase. This
process repeats until all issues are resolved, and the opportunity's
C<Lifecycle.ReviewStatus> is set to C<Approved> or C<Rejected>.

=item *

Approved: Validated and converted into the Amazon Web Services seller's
pipeline (editable).

=item *

Rejected: Disqualified (read-only).

=back



=head2 ReviewStatusReason => Str

Indicates the reason a specific decision was taken during the
opportunity review process. This field combines the reasons for both
disqualified and action required statuses, and provides clarity for why
an opportunity was disqualified or required further action.


=head2 Stage => Str

Specifies the current stage of the C<Opportunity>'s lifecycle as it
maps to Amazon Web Services stages from the current stage in the
partner CRM. This field provides a translated value of the stage, and
offers insight into the C<Opportunity>'s progression in the sales
cycle, according to Amazon Web Services definitions.

A lead and a prospect must be further matured to a C<Qualified>
opportunity before submission. Opportunities that were closed/lost
before submission aren't suitable for submission.

The descriptions of each sales stage are:

=over

=item *

Prospect: Amazon Web Services identifies the opportunity. It can be
active (Comes directly from the end customer through a lead) or latent
(Your account team believes it exists based on research, account plans,
sales plays).

=item *

Qualified: Your account team engaged with the customer to discuss
viability and understand requirements. The customer agreed that the
opportunity is real, of interest, and may solve business/technical
needs.

=item *

Technical Validation: All parties understand the implementation plan.

=item *

Business Validation: Pricing was proposed, and all parties agree to the
steps to close.

=item *

Committed: The customer signed the contract, but Amazon Web Services
hasn't started billing.

=item *

Launched: The workload is complete, and Amazon Web Services has started
billing.

=item *

Closed Lost: The opportunity is lost, and there are no steps to move
forward.

=back



=head2 TargetCloseDate => Str

Specifies the date when Amazon Web Services expects to start
significant billing, when the project finishes, and when it moves into
production. This field informs the Amazon Web Services seller about
when the opportunity launches and starts to incur Amazon Web Services
usage.

Ensure the C<Target Close Date> isn't in the past.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::PartnerCentralSelling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

