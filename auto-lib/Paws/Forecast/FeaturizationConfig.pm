# Generated by default/object.tt
package Paws::Forecast::FeaturizationConfig;
  use Moose;
  has Featurizations => (is => 'ro', isa => 'ArrayRef[Paws::Forecast::Featurization]');
  has ForecastDimensions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ForecastFrequency => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Forecast::FeaturizationConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Forecast::FeaturizationConfig object:

  $service_obj->Method(Att1 => { Featurizations => $value, ..., ForecastFrequency => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Forecast::FeaturizationConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->Featurizations

=head1 DESCRIPTION

This object belongs to the CreatePredictor operation. If you created
your predictor with CreateAutoPredictor, see AttributeConfig.

In a CreatePredictor operation, the specified algorithm trains a model
using the specified dataset group. You can optionally tell the
operation to modify data fields prior to training a model. These
modifications are referred to as I<featurization>.

You define featurization using the C<FeaturizationConfig> object. You
specify an array of transformations, one for each field that you want
to featurize. You then include the C<FeaturizationConfig> object in
your C<CreatePredictor> request. Amazon Forecast applies the
featurization to the C<TARGET_TIME_SERIES> and C<RELATED_TIME_SERIES>
datasets before model training.

You can create multiple featurization configurations. For example, you
might call the C<CreatePredictor> operation twice by specifying
different featurization configurations.

=head1 ATTRIBUTES


=head2 Featurizations => ArrayRef[L<Paws::Forecast::Featurization>]

An array of featurization (transformation) information for the fields
of a dataset.


=head2 ForecastDimensions => ArrayRef[Str|Undef]

An array of dimension (field) names that specify how to group the
generated forecast.

For example, suppose that you are generating a forecast for item sales
across all of your stores, and your dataset contains a C<store_id>
field. If you want the sales forecast for each item by store, you would
specify C<store_id> as the dimension.

All forecast dimensions specified in the C<TARGET_TIME_SERIES> dataset
don't need to be specified in the C<CreatePredictor> request. All
forecast dimensions specified in the C<RELATED_TIME_SERIES> dataset
must be specified in the C<CreatePredictor> request.


=head2 B<REQUIRED> ForecastFrequency => Str

The frequency of predictions in a forecast.

Valid intervals are an integer followed by Y (Year), M (Month), W
(Week), D (Day), H (Hour), and min (Minute). For example, "1D"
indicates every day and "15min" indicates every 15 minutes. You cannot
specify a value that would overlap with the next larger frequency. That
means, for example, you cannot specify a frequency of 60 minutes,
because that is equivalent to 1 hour. The valid values for each
frequency are the following:

=over

=item *

Minute - 1-59

=item *

Hour - 1-23

=item *

Day - 1-6

=item *

Week - 1-4

=item *

Month - 1-11

=item *

Year - 1

=back

Thus, if you want every other week forecasts, specify "2W". Or, if you
want quarterly forecasts, you specify "3M".

The frequency must be greater than or equal to the TARGET_TIME_SERIES
dataset frequency.

When a RELATED_TIME_SERIES dataset is provided, the frequency must be
equal to the TARGET_TIME_SERIES dataset frequency.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Forecast>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

