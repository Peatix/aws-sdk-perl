# Generated by default/object.tt
package Paws::BedrockAgentRuntime::Trace;
  use Moose;
  has CustomOrchestrationTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::CustomOrchestrationTrace', request_name => 'customOrchestrationTrace', traits => ['NameInRequest']);
  has FailureTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::FailureTrace', request_name => 'failureTrace', traits => ['NameInRequest']);
  has GuardrailTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::GuardrailTrace', request_name => 'guardrailTrace', traits => ['NameInRequest']);
  has OrchestrationTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::OrchestrationTrace', request_name => 'orchestrationTrace', traits => ['NameInRequest']);
  has PostProcessingTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::PostProcessingTrace', request_name => 'postProcessingTrace', traits => ['NameInRequest']);
  has PreProcessingTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::PreProcessingTrace', request_name => 'preProcessingTrace', traits => ['NameInRequest']);
  has RoutingClassifierTrace => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::RoutingClassifierTrace', request_name => 'routingClassifierTrace', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::BedrockAgentRuntime::Trace

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::BedrockAgentRuntime::Trace object:

  $service_obj->Method(Att1 => { CustomOrchestrationTrace => $value, ..., RoutingClassifierTrace => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::BedrockAgentRuntime::Trace object:

  $result = $service_obj->Method(...);
  $result->Att1->CustomOrchestrationTrace

=head1 DESCRIPTION

Contains one part of the agent's reasoning process and results from
calling API actions and querying knowledge bases. You can use the trace
to understand how the agent arrived at the response it provided the
customer. For more information, see Trace enablement
(https://docs.aws.amazon.com/bedrock/latest/userguide/agents-test.html#trace-enablement).

=head1 ATTRIBUTES


=head2 CustomOrchestrationTrace => L<Paws::BedrockAgentRuntime::CustomOrchestrationTrace>

Details about the custom orchestration step in which the agent
determines the order in which actions are executed.


=head2 FailureTrace => L<Paws::BedrockAgentRuntime::FailureTrace>

Contains information about the failure of the interaction.


=head2 GuardrailTrace => L<Paws::BedrockAgentRuntime::GuardrailTrace>

The trace details for a trace defined in the Guardrail filter.


=head2 OrchestrationTrace => L<Paws::BedrockAgentRuntime::OrchestrationTrace>

Details about the orchestration step, in which the agent determines the
order in which actions are executed and which knowledge bases are
retrieved.


=head2 PostProcessingTrace => L<Paws::BedrockAgentRuntime::PostProcessingTrace>

Details about the post-processing step, in which the agent shapes the
response..


=head2 PreProcessingTrace => L<Paws::BedrockAgentRuntime::PreProcessingTrace>

Details about the pre-processing step, in which the agent
contextualizes and categorizes user inputs.


=head2 RoutingClassifierTrace => L<Paws::BedrockAgentRuntime::RoutingClassifierTrace>

A routing classifier's trace.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::BedrockAgentRuntime>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

