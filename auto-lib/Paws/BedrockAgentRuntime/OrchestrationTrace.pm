# Generated by default/object.tt
package Paws::BedrockAgentRuntime::OrchestrationTrace;
  use Moose;
  has InvocationInput => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::InvocationInput', request_name => 'invocationInput', traits => ['NameInRequest']);
  has ModelInvocationInput => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::ModelInvocationInput', request_name => 'modelInvocationInput', traits => ['NameInRequest']);
  has ModelInvocationOutput => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::OrchestrationModelInvocationOutput', request_name => 'modelInvocationOutput', traits => ['NameInRequest']);
  has Observation => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::Observation', request_name => 'observation', traits => ['NameInRequest']);
  has Rationale => (is => 'ro', isa => 'Paws::BedrockAgentRuntime::Rationale', request_name => 'rationale', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::BedrockAgentRuntime::OrchestrationTrace

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::BedrockAgentRuntime::OrchestrationTrace object:

  $service_obj->Method(Att1 => { InvocationInput => $value, ..., Rationale => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::BedrockAgentRuntime::OrchestrationTrace object:

  $result = $service_obj->Method(...);
  $result->Att1->InvocationInput

=head1 DESCRIPTION

Details about the orchestration step, in which the agent determines the
order in which actions are executed and which knowledge bases are
retrieved.

=head1 ATTRIBUTES


=head2 InvocationInput => L<Paws::BedrockAgentRuntime::InvocationInput>

Contains information pertaining to the action group or knowledge base
that is being invoked.


=head2 ModelInvocationInput => L<Paws::BedrockAgentRuntime::ModelInvocationInput>

The input for the orchestration step.

=over

=item *

The C<type> is C<ORCHESTRATION>.

=item *

The C<text> contains the prompt.

=item *

The C<inferenceConfiguration>, C<parserMode>, and C<overrideLambda>
values are set in the PromptOverrideConfiguration
(https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html)
object that was set when the agent was created or updated.

=back



=head2 ModelInvocationOutput => L<Paws::BedrockAgentRuntime::OrchestrationModelInvocationOutput>

Contains information pertaining to the output from the foundation model
that is being invoked.


=head2 Observation => L<Paws::BedrockAgentRuntime::Observation>

Details about the observation (the output of the action group Lambda or
knowledge base) made by the agent.


=head2 Rationale => L<Paws::BedrockAgentRuntime::Rationale>

Details about the reasoning, based on the input, that the agent uses to
justify carrying out an action group or getting information from a
knowledge base.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::BedrockAgentRuntime>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

