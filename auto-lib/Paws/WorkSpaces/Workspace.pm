# Generated by default/object.tt
package Paws::WorkSpaces::Workspace;
  use Moose;
  has BundleId => (is => 'ro', isa => 'Str');
  has ComputerName => (is => 'ro', isa => 'Str');
  has DataReplicationSettings => (is => 'ro', isa => 'Paws::WorkSpaces::DataReplicationSettings');
  has DirectoryId => (is => 'ro', isa => 'Str');
  has ErrorCode => (is => 'ro', isa => 'Str');
  has ErrorMessage => (is => 'ro', isa => 'Str');
  has IpAddress => (is => 'ro', isa => 'Str');
  has ModificationStates => (is => 'ro', isa => 'ArrayRef[Paws::WorkSpaces::ModificationState]');
  has RelatedWorkspaces => (is => 'ro', isa => 'ArrayRef[Paws::WorkSpaces::RelatedWorkspaceProperties]');
  has RootVolumeEncryptionEnabled => (is => 'ro', isa => 'Bool');
  has StandbyWorkspacesProperties => (is => 'ro', isa => 'ArrayRef[Paws::WorkSpaces::StandbyWorkspacesProperties]');
  has State => (is => 'ro', isa => 'Str');
  has SubnetId => (is => 'ro', isa => 'Str');
  has UserName => (is => 'ro', isa => 'Str');
  has UserVolumeEncryptionEnabled => (is => 'ro', isa => 'Bool');
  has VolumeEncryptionKey => (is => 'ro', isa => 'Str');
  has WorkspaceId => (is => 'ro', isa => 'Str');
  has WorkspaceName => (is => 'ro', isa => 'Str');
  has WorkspaceProperties => (is => 'ro', isa => 'Paws::WorkSpaces::WorkspaceProperties');

1;

### main pod documentation begin ###

=head1 NAME

Paws::WorkSpaces::Workspace

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::WorkSpaces::Workspace object:

  $service_obj->Method(Att1 => { BundleId => $value, ..., WorkspaceProperties => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::WorkSpaces::Workspace object:

  $result = $service_obj->Method(...);
  $result->Att1->BundleId

=head1 DESCRIPTION

Describes a WorkSpace.

=head1 ATTRIBUTES


=head2 BundleId => Str

The identifier of the bundle used to create the WorkSpace.


=head2 ComputerName => Str

The name of the WorkSpace, as seen by the operating system. The format
of this name varies. For more information, see Launch a WorkSpace
(https://docs.aws.amazon.com/workspaces/latest/adminguide/launch-workspaces-tutorials.html).


=head2 DataReplicationSettings => L<Paws::WorkSpaces::DataReplicationSettings>

Indicates the settings of the data replication.


=head2 DirectoryId => Str

The identifier of the Directory Service directory for the WorkSpace.


=head2 ErrorCode => Str

The error code that is returned if the WorkSpace cannot be created.


=head2 ErrorMessage => Str

The text of the error message that is returned if the WorkSpace cannot
be created.


=head2 IpAddress => Str

The IP address of the WorkSpace.


=head2 ModificationStates => ArrayRef[L<Paws::WorkSpaces::ModificationState>]

The modification states of the WorkSpace.


=head2 RelatedWorkspaces => ArrayRef[L<Paws::WorkSpaces::RelatedWorkspaceProperties>]

The standby WorkSpace or primary WorkSpace related to the specified
WorkSpace.


=head2 RootVolumeEncryptionEnabled => Bool

Indicates whether the data stored on the root volume is encrypted.


=head2 StandbyWorkspacesProperties => ArrayRef[L<Paws::WorkSpaces::StandbyWorkspacesProperties>]

The properties of the standby WorkSpace


=head2 State => Str

The operational state of the WorkSpace.

=over

=item *

C<PENDING> E<ndash> The WorkSpace is in a waiting state (for example,
the WorkSpace is being created).

=item *

C<AVAILABLE> E<ndash> The WorkSpace is running and has passed the
health checks.

=item *

C<IMPAIRED> E<ndash> Refer to C<UNHEALTHY> state.

=item *

C<UNHEALTHY> E<ndash> The WorkSpace is not responding to health checks.

=item *

C<REBOOTING> E<ndash> The WorkSpace is being rebooted (restarted).

=item *

C<STARTING> E<ndash> The WorkSpace is starting up and health checks are
being run.

=item *

C<REBUILDING> E<ndash> The WorkSpace is being rebuilt.

=item *

C<RESTORING> E<ndash> The WorkSpace is being restored.

=item *

C<MAINTENANCE> E<ndash> The WorkSpace is undergoing scheduled
maintenance by Amazon Web Services.

=item *

C<ADMIN_MAINTENANCE> E<ndash> The WorkSpace is undergoing maintenance
by the WorkSpaces administrator.

=item *

C<TERMINATING> E<ndash> The WorkSpace is being deleted.

=item *

C<TERMINATED> E<ndash> The WorkSpace has been deleted.

=item *

C<SUSPENDED> E<ndash> The WorkSpace has been suspended for image
creation.

=item *

C<UPDATING> E<ndash> The WorkSpace is undergoing an update.

=item *

C<STOPPING> E<ndash> The WorkSpace is being stopped.

=item *

C<STOPPED> E<ndash> The WorkSpace has been stopped.

=item *

C<ERROR > E<ndash> The WorkSpace is an error state (for example, an
error occurred during startup).

=back

After a WorkSpace is terminated, the C<TERMINATED> state is returned
only briefly before the WorkSpace directory metadata is cleaned up, so
this state is rarely returned. To confirm that a WorkSpace is
terminated, check for the WorkSpace ID by using DescribeWorkSpaces
(https://docs.aws.amazon.com/workspaces/latest/api/API_DescribeWorkspaces.html).
If the WorkSpace ID isn't returned, then the WorkSpace has been
successfully terminated.


=head2 SubnetId => Str

The identifier of the subnet for the WorkSpace.


=head2 UserName => Str

The user for the WorkSpace.


=head2 UserVolumeEncryptionEnabled => Bool

Indicates whether the data stored on the user volume is encrypted.


=head2 VolumeEncryptionKey => Str

The ARN of the symmetric KMS key used to encrypt data stored on your
WorkSpace. Amazon WorkSpaces does not support asymmetric KMS keys.


=head2 WorkspaceId => Str

The identifier of the WorkSpace.


=head2 WorkspaceName => Str

The name of the user-decoupled WorkSpace.


=head2 WorkspaceProperties => L<Paws::WorkSpaces::WorkspaceProperties>

The properties of the WorkSpace.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::WorkSpaces>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

