# Generated by default/object.tt
package Paws::MailManager::RuleDmarcExpression;
  use Moose;
  has Operator => (is => 'ro', isa => 'Str', required => 1);
  has Values => (is => 'ro', isa => 'ArrayRef[Str|Undef]', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MailManager::RuleDmarcExpression

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MailManager::RuleDmarcExpression object:

  $service_obj->Method(Att1 => { Operator => $value, ..., Values => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MailManager::RuleDmarcExpression object:

  $result = $service_obj->Method(...);
  $result->Att1->Operator

=head1 DESCRIPTION

A DMARC policy expression. The condition matches if the given DMARC
policy matches that of the incoming email.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Operator => Str

The operator to apply to the DMARC policy of the incoming email.


=head2 B<REQUIRED> Values => ArrayRef[Str|Undef]

The values to use for the given DMARC policy operator. For the operator
EQUALS, if multiple values are given, they are evaluated as an OR. That
is, if any of the given values match, the condition is deemed to match.
For the operator NOT_EQUALS, if multiple values are given, they are
evaluated as an AND. That is, only if the email's DMARC policy is not
equal to any of the given values, then the condition is deemed to
match.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MailManager>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

