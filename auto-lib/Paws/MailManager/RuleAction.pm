# Generated by default/object.tt
package Paws::MailManager::RuleAction;
  use Moose;
  has AddHeader => (is => 'ro', isa => 'Paws::MailManager::AddHeaderAction');
  has Archive => (is => 'ro', isa => 'Paws::MailManager::ArchiveAction');
  has DeliverToMailbox => (is => 'ro', isa => 'Paws::MailManager::DeliverToMailboxAction');
  has DeliverToQBusiness => (is => 'ro', isa => 'Paws::MailManager::DeliverToQBusinessAction');
  has Drop => (is => 'ro', isa => 'Paws::MailManager::DropAction');
  has PublishToSns => (is => 'ro', isa => 'Paws::MailManager::SnsAction');
  has Relay => (is => 'ro', isa => 'Paws::MailManager::RelayAction');
  has ReplaceRecipient => (is => 'ro', isa => 'Paws::MailManager::ReplaceRecipientAction');
  has Send => (is => 'ro', isa => 'Paws::MailManager::SendAction');
  has WriteToS3 => (is => 'ro', isa => 'Paws::MailManager::S3Action');

1;

### main pod documentation begin ###

=head1 NAME

Paws::MailManager::RuleAction

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MailManager::RuleAction object:

  $service_obj->Method(Att1 => { AddHeader => $value, ..., WriteToS3 => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MailManager::RuleAction object:

  $result = $service_obj->Method(...);
  $result->Att1->AddHeader

=head1 DESCRIPTION

The action for a rule to take. Only one of the contained actions can be
set.

=head1 ATTRIBUTES


=head2 AddHeader => L<Paws::MailManager::AddHeaderAction>

This action adds a header. This can be used to add arbitrary email
headers.


=head2 Archive => L<Paws::MailManager::ArchiveAction>

This action archives the email. This can be used to deliver an email to
an archive.


=head2 DeliverToMailbox => L<Paws::MailManager::DeliverToMailboxAction>

This action delivers an email to a WorkMail mailbox.


=head2 DeliverToQBusiness => L<Paws::MailManager::DeliverToQBusinessAction>

This action delivers an email to an Amazon Q Business application for
ingestion into its knowledge base.


=head2 Drop => L<Paws::MailManager::DropAction>

This action terminates the evaluation of rules in the rule set.


=head2 PublishToSns => L<Paws::MailManager::SnsAction>

This action publishes the email content to an Amazon SNS topic.


=head2 Relay => L<Paws::MailManager::RelayAction>

This action relays the email to another SMTP server.


=head2 ReplaceRecipient => L<Paws::MailManager::ReplaceRecipientAction>

The action replaces certain or all recipients with a different set of
recipients.


=head2 Send => L<Paws::MailManager::SendAction>

This action sends the email to the internet.


=head2 WriteToS3 => L<Paws::MailManager::S3Action>

This action writes the MIME content of the email to an S3 bucket.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MailManager>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

