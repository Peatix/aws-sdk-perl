# Generated by default/object.tt
package Paws::Batch::NodeRangeProperty;
  use Moose;
  has ConsumableResourceProperties => (is => 'ro', isa => 'Paws::Batch::ConsumableResourceProperties', request_name => 'consumableResourceProperties', traits => ['NameInRequest']);
  has Container => (is => 'ro', isa => 'Paws::Batch::ContainerProperties', request_name => 'container', traits => ['NameInRequest']);
  has EcsProperties => (is => 'ro', isa => 'Paws::Batch::EcsProperties', request_name => 'ecsProperties', traits => ['NameInRequest']);
  has EksProperties => (is => 'ro', isa => 'Paws::Batch::EksProperties', request_name => 'eksProperties', traits => ['NameInRequest']);
  has InstanceTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'instanceTypes', traits => ['NameInRequest']);
  has TargetNodes => (is => 'ro', isa => 'Str', request_name => 'targetNodes', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::NodeRangeProperty

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::NodeRangeProperty object:

  $service_obj->Method(Att1 => { ConsumableResourceProperties => $value, ..., TargetNodes => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::NodeRangeProperty object:

  $result = $service_obj->Method(...);
  $result->Att1->ConsumableResourceProperties

=head1 DESCRIPTION

This is an object that represents the properties of the node range for
a multi-node parallel job.

=head1 ATTRIBUTES


=head2 ConsumableResourceProperties => L<Paws::Batch::ConsumableResourceProperties>

Contains a list of consumable resources required by a job.


=head2 Container => L<Paws::Batch::ContainerProperties>

The container details for the node range.


=head2 EcsProperties => L<Paws::Batch::EcsProperties>

This is an object that represents the properties of the node range for
a multi-node parallel job.


=head2 EksProperties => L<Paws::Batch::EksProperties>

This is an object that represents the properties of the node range for
a multi-node parallel job.


=head2 InstanceTypes => ArrayRef[Str|Undef]

The instance types of the underlying host infrastructure of a
multi-node parallel job.

This parameter isn't applicable to jobs that are running on Fargate
resources.

In addition, this list object is currently limited to one element.


=head2 B<REQUIRED> TargetNodes => Str

The range of nodes, using node index values. A range of C<0:3>
indicates nodes with index values of C<0> through C<3>. If the starting
range value is omitted (C<:n>), then C<0> is used to start the range.
If the ending range value is omitted (C<n:>), then the highest possible
node index is used to end the range. Your accumulative node ranges must
account for all nodes (C<0:n>). You can nest node ranges (for example,
C<0:10> and C<4:5>). In this case, the C<4:5> range properties override
the C<0:10> properties.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

