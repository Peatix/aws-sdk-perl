# Generated by default/object.tt
package Paws::Batch::JobDefinition;
  use Moose;
  has ConsumableResourceProperties => (is => 'ro', isa => 'Paws::Batch::ConsumableResourceProperties', request_name => 'consumableResourceProperties', traits => ['NameInRequest']);
  has ContainerOrchestrationType => (is => 'ro', isa => 'Str', request_name => 'containerOrchestrationType', traits => ['NameInRequest']);
  has ContainerProperties => (is => 'ro', isa => 'Paws::Batch::ContainerProperties', request_name => 'containerProperties', traits => ['NameInRequest']);
  has EcsProperties => (is => 'ro', isa => 'Paws::Batch::EcsProperties', request_name => 'ecsProperties', traits => ['NameInRequest']);
  has EksProperties => (is => 'ro', isa => 'Paws::Batch::EksProperties', request_name => 'eksProperties', traits => ['NameInRequest']);
  has JobDefinitionArn => (is => 'ro', isa => 'Str', request_name => 'jobDefinitionArn', traits => ['NameInRequest'], required => 1);
  has JobDefinitionName => (is => 'ro', isa => 'Str', request_name => 'jobDefinitionName', traits => ['NameInRequest'], required => 1);
  has NodeProperties => (is => 'ro', isa => 'Paws::Batch::NodeProperties', request_name => 'nodeProperties', traits => ['NameInRequest']);
  has Parameters => (is => 'ro', isa => 'Paws::Batch::ParametersMap', request_name => 'parameters', traits => ['NameInRequest']);
  has PlatformCapabilities => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'platformCapabilities', traits => ['NameInRequest']);
  has PropagateTags => (is => 'ro', isa => 'Bool', request_name => 'propagateTags', traits => ['NameInRequest']);
  has RetryStrategy => (is => 'ro', isa => 'Paws::Batch::RetryStrategy', request_name => 'retryStrategy', traits => ['NameInRequest']);
  has Revision => (is => 'ro', isa => 'Int', request_name => 'revision', traits => ['NameInRequest'], required => 1);
  has SchedulingPriority => (is => 'ro', isa => 'Int', request_name => 'schedulingPriority', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::Batch::TagrisTagsMap', request_name => 'tags', traits => ['NameInRequest']);
  has Timeout => (is => 'ro', isa => 'Paws::Batch::JobTimeout', request_name => 'timeout', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::JobDefinition

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::JobDefinition object:

  $service_obj->Method(Att1 => { ConsumableResourceProperties => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::JobDefinition object:

  $result = $service_obj->Method(...);
  $result->Att1->ConsumableResourceProperties

=head1 DESCRIPTION

An object that represents an Batch job definition.

=head1 ATTRIBUTES


=head2 ConsumableResourceProperties => L<Paws::Batch::ConsumableResourceProperties>

Contains a list of consumable resources required by the job.


=head2 ContainerOrchestrationType => Str

The orchestration type of the compute environment. The valid values are
C<ECS> (default) or C<EKS>.


=head2 ContainerProperties => L<Paws::Batch::ContainerProperties>

An object with properties specific to Amazon ECS-based jobs. When
C<containerProperties> is used in the job definition, it can't be used
in addition to C<eksProperties>, C<ecsProperties>, or
C<nodeProperties>.


=head2 EcsProperties => L<Paws::Batch::EcsProperties>

An object that contains the properties for the Amazon ECS resources of
a job.When C<ecsProperties> is used in the job definition, it can't be
used in addition to C<containerProperties>, C<eksProperties>, or
C<nodeProperties>.


=head2 EksProperties => L<Paws::Batch::EksProperties>

An object with properties that are specific to Amazon EKS-based jobs.
When C<eksProperties> is used in the job definition, it can't be used
in addition to C<containerProperties>, C<ecsProperties>, or
C<nodeProperties>.


=head2 B<REQUIRED> JobDefinitionArn => Str

The Amazon Resource Name (ARN) for the job definition.


=head2 B<REQUIRED> JobDefinitionName => Str

The name of the job definition.


=head2 NodeProperties => L<Paws::Batch::NodeProperties>

An object with properties that are specific to multi-node parallel
jobs. When C<nodeProperties> is used in the job definition, it can't be
used in addition to C<containerProperties>, C<ecsProperties>, or
C<eksProperties>.

If the job runs on Fargate resources, don't specify C<nodeProperties>.
Use C<containerProperties> instead.


=head2 Parameters => L<Paws::Batch::ParametersMap>

Default parameters or parameter substitution placeholders that are set
in the job definition. Parameters are specified as a key-value pair
mapping. Parameters in a C<SubmitJob> request override any
corresponding parameter defaults from the job definition. For more
information about specifying parameters, see Job definition parameters
(https://docs.aws.amazon.com/batch/latest/userguide/job_definition_parameters.html)
in the I<Batch User Guide>.


=head2 PlatformCapabilities => ArrayRef[Str|Undef]

The platform capabilities required by the job definition. If no value
is specified, it defaults to C<EC2>. Jobs run on Fargate resources
specify C<FARGATE>.


=head2 PropagateTags => Bool

Specifies whether to propagate the tags from the job or job definition
to the corresponding Amazon ECS task. If no value is specified, the
tags aren't propagated. Tags can only be propagated to the tasks when
the tasks are created. For tags with the same name, job tags are given
priority over job definitions tags. If the total number of combined
tags from the job and job definition is over 50, the job is moved to
the C<FAILED> state.


=head2 RetryStrategy => L<Paws::Batch::RetryStrategy>

The retry strategy to use for failed jobs that are submitted with this
job definition.


=head2 B<REQUIRED> Revision => Int

The revision of the job definition.


=head2 SchedulingPriority => Int

The scheduling priority of the job definition. This only affects jobs
in job queues with a fair-share policy. Jobs with a higher scheduling
priority are scheduled before jobs with a lower scheduling priority.


=head2 Status => Str

The status of the job definition.


=head2 Tags => L<Paws::Batch::TagrisTagsMap>

The tags that are applied to the job definition.


=head2 Timeout => L<Paws::Batch::JobTimeout>

The timeout time for jobs that are submitted with this job definition.
After the amount of time you specify passes, Batch terminates your jobs
if they aren't finished.


=head2 B<REQUIRED> Type => Str

The type of job definition. It's either C<container> or C<multinode>.
If the job is run on Fargate resources, then C<multinode> isn't
supported. For more information about multi-node parallel jobs, see
Creating a multi-node parallel job definition
(https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html)
in the I<Batch User Guide>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

