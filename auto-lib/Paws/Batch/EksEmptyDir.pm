# Generated by default/object.tt
package Paws::Batch::EksEmptyDir;
  use Moose;
  has Medium => (is => 'ro', isa => 'Str', request_name => 'medium', traits => ['NameInRequest']);
  has SizeLimit => (is => 'ro', isa => 'Str', request_name => 'sizeLimit', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::EksEmptyDir

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::EksEmptyDir object:

  $service_obj->Method(Att1 => { Medium => $value, ..., SizeLimit => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::EksEmptyDir object:

  $result = $service_obj->Method(...);
  $result->Att1->Medium

=head1 DESCRIPTION

Specifies the configuration of a Kubernetes C<emptyDir> volume. An
C<emptyDir> volume is first created when a pod is assigned to a node.
It exists as long as that pod is running on that node. The C<emptyDir>
volume is initially empty. All containers in the pod can read and write
the files in the C<emptyDir> volume. However, the C<emptyDir> volume
can be mounted at the same or different paths in each container. When a
pod is removed from a node for any reason, the data in the C<emptyDir>
is deleted permanently. For more information, see emptyDir
(https://kubernetes.io/docs/concepts/storage/volumes/#emptydir) in the
I<Kubernetes documentation>.

=head1 ATTRIBUTES


=head2 Medium => Str

The medium to store the volume. The default value is an empty string,
which uses the storage of the node.

=over

=item ""

B<(Default)> Use the disk storage of the node.

=item "Memory"

Use the C<tmpfs> volume that's backed by the RAM of the node. Contents
of the volume are lost when the node reboots, and any storage on the
volume counts against the container's memory limit.

=back



=head2 SizeLimit => Str

The maximum size of the volume. By default, there's no maximum size
defined.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

