# Generated by default/object.tt
package Paws::Batch::EcsTaskProperties;
  use Moose;
  has Containers => (is => 'ro', isa => 'ArrayRef[Paws::Batch::TaskContainerProperties]', request_name => 'containers', traits => ['NameInRequest'], required => 1);
  has EnableExecuteCommand => (is => 'ro', isa => 'Bool', request_name => 'enableExecuteCommand', traits => ['NameInRequest']);
  has EphemeralStorage => (is => 'ro', isa => 'Paws::Batch::EphemeralStorage', request_name => 'ephemeralStorage', traits => ['NameInRequest']);
  has ExecutionRoleArn => (is => 'ro', isa => 'Str', request_name => 'executionRoleArn', traits => ['NameInRequest']);
  has IpcMode => (is => 'ro', isa => 'Str', request_name => 'ipcMode', traits => ['NameInRequest']);
  has NetworkConfiguration => (is => 'ro', isa => 'Paws::Batch::NetworkConfiguration', request_name => 'networkConfiguration', traits => ['NameInRequest']);
  has PidMode => (is => 'ro', isa => 'Str', request_name => 'pidMode', traits => ['NameInRequest']);
  has PlatformVersion => (is => 'ro', isa => 'Str', request_name => 'platformVersion', traits => ['NameInRequest']);
  has RuntimePlatform => (is => 'ro', isa => 'Paws::Batch::RuntimePlatform', request_name => 'runtimePlatform', traits => ['NameInRequest']);
  has TaskRoleArn => (is => 'ro', isa => 'Str', request_name => 'taskRoleArn', traits => ['NameInRequest']);
  has Volumes => (is => 'ro', isa => 'ArrayRef[Paws::Batch::Volume]', request_name => 'volumes', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::EcsTaskProperties

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::EcsTaskProperties object:

  $service_obj->Method(Att1 => { Containers => $value, ..., Volumes => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::EcsTaskProperties object:

  $result = $service_obj->Method(...);
  $result->Att1->Containers

=head1 DESCRIPTION

The properties for a task definition that describes the container and
volume definitions of an Amazon ECS task. You can specify which Docker
images to use, the required resources, and other configurations related
to launching the task definition through an Amazon ECS service or task.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Containers => ArrayRef[L<Paws::Batch::TaskContainerProperties>]

This object is a list of containers.


=head2 EnableExecuteCommand => Bool

Determines whether execute command functionality is turned on for this
task. If C<true>, execute command functionality is turned on all the
containers in the task.


=head2 EphemeralStorage => L<Paws::Batch::EphemeralStorage>

The amount of ephemeral storage to allocate for the task. This
parameter is used to expand the total amount of ephemeral storage
available, beyond the default amount, for tasks hosted on Fargate.


=head2 ExecutionRoleArn => Str

The Amazon Resource Name (ARN) of the execution role that Batch can
assume. For jobs that run on Fargate resources, you must provide an
execution role. For more information, see Batch execution IAM role
(https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html)
in the I<Batch User Guide>.


=head2 IpcMode => Str

The IPC resource namespace to use for the containers in the task. The
valid values are C<host>, C<task>, or C<none>.

If C<host> is specified, all containers within the tasks that specified
the C<host> IPC mode on the same container instance share the same IPC
resources with the host Amazon EC2 instance.

If C<task> is specified, all containers within the specified C<task>
share the same IPC resources.

If C<none> is specified, the IPC resources within the containers of a
task are private, and are not shared with other containers in a task or
on the container instance.

If no value is specified, then the IPC resource namespace sharing
depends on the Docker daemon setting on the container instance. For
more information, see IPC settings
(https://docs.docker.com/engine/reference/run/#ipc-settings---ipc) in
the Docker run reference.


=head2 NetworkConfiguration => L<Paws::Batch::NetworkConfiguration>

The network configuration for jobs that are running on Fargate
resources. Jobs that are running on Amazon EC2 resources must not
specify this parameter.


=head2 PidMode => Str

The process namespace to use for the containers in the task. The valid
values are C<host> or C<task>. For example, monitoring sidecars might
need C<pidMode> to access information about other containers running in
the same task.

If C<host> is specified, all containers within the tasks that specified
the C<host> PID mode on the same container instance share the process
namespace with the host Amazon EC2 instance.

If C<task> is specified, all containers within the specified task share
the same process namespace.

If no value is specified, the default is a private namespace for each
container. For more information, see PID settings
(https://docs.docker.com/engine/reference/run/#pid-settings---pid) in
the Docker run reference.


=head2 PlatformVersion => Str

The Fargate platform version where the jobs are running. A platform
version is specified only for jobs that are running on Fargate
resources. If one isn't specified, the C<LATEST> platform version is
used by default. This uses a recent, approved version of the Fargate
platform for compute resources. For more information, see Fargate
platform versions
(https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html)
in the I<Amazon Elastic Container Service Developer Guide>.


=head2 RuntimePlatform => L<Paws::Batch::RuntimePlatform>

An object that represents the compute environment architecture for
Batch jobs on Fargate.


=head2 TaskRoleArn => Str

The Amazon Resource Name (ARN) that's associated with the Amazon ECS
task.

This is object is comparable to ContainerProperties:jobRoleArn
(https://docs.aws.amazon.com/batch/latest/APIReference/API_ContainerProperties.html).


=head2 Volumes => ArrayRef[L<Paws::Batch::Volume>]

A list of volumes that are associated with the job.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

