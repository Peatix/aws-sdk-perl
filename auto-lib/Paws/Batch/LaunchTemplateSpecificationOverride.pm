# Generated by default/object.tt
package Paws::Batch::LaunchTemplateSpecificationOverride;
  use Moose;
  has LaunchTemplateId => (is => 'ro', isa => 'Str', request_name => 'launchTemplateId', traits => ['NameInRequest']);
  has LaunchTemplateName => (is => 'ro', isa => 'Str', request_name => 'launchTemplateName', traits => ['NameInRequest']);
  has TargetInstanceTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'targetInstanceTypes', traits => ['NameInRequest']);
  has Version => (is => 'ro', isa => 'Str', request_name => 'version', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::LaunchTemplateSpecificationOverride

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::LaunchTemplateSpecificationOverride object:

  $service_obj->Method(Att1 => { LaunchTemplateId => $value, ..., Version => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::LaunchTemplateSpecificationOverride object:

  $result = $service_obj->Method(...);
  $result->Att1->LaunchTemplateId

=head1 DESCRIPTION

An object that represents a launch template to use in place of the
default launch template. You must specify either the launch template ID
or launch template name in the request, but not both.

If security groups are specified using both the C<securityGroupIds>
parameter of C<CreateComputeEnvironment> and the launch template, the
values in the C<securityGroupIds> parameter of
C<CreateComputeEnvironment> will be used.

You can define up to ten (10) overrides for each compute environment.

This object isn't applicable to jobs that are running on Fargate
resources.

To unset all override templates for a compute environment, you can pass
an empty array to the UpdateComputeEnvironment.overrides
(https://docs.aws.amazon.com/batch/latest/APIReference/API_UpdateComputeEnvironment.html)
parameter, or not include the C<overrides> parameter when submitting
the C<UpdateComputeEnvironment> API operation.

=head1 ATTRIBUTES


=head2 LaunchTemplateId => Str

The ID of the launch template.

B<Note:> If you specify the C<launchTemplateId> you can't specify the
C<launchTemplateName> as well.


=head2 LaunchTemplateName => Str

The name of the launch template.

B<Note:> If you specify the C<launchTemplateName> you can't specify the
C<launchTemplateId> as well.


=head2 TargetInstanceTypes => ArrayRef[Str|Undef]

The instance type or family that this override launch template should
be applied to.

This parameter is required when defining a launch template override.

Information included in this parameter must meet the following
requirements:

=over

=item *

Must be a valid Amazon EC2 instance type or family.

=item *

C<optimal> isn't allowed.

=item *

C<targetInstanceTypes> can target only instance types and families that
are included within the C<ComputeResource.instanceTypes>
(https://docs.aws.amazon.com/batch/latest/APIReference/API_ComputeResource.html#Batch-Type-ComputeResource-instanceTypes)
set. C<targetInstanceTypes> doesn't need to include all of the
instances from the C<instanceType> set, but at least a subset. For
example, if C<ComputeResource.instanceTypes> includes C<[m5, g5]>,
C<targetInstanceTypes> can include C<[m5.2xlarge]> and C<[m5.large]>
but not C<[c5.large]>.

=item *

C<targetInstanceTypes> included within the same launch template
override or across launch template overrides can't overlap for the same
compute environment. For example, you can't define one launch template
override to target an instance family and another define an instance
type within this same family.

=back



=head2 Version => Str

The version number of the launch template, C<$Default>, or C<$Latest>.

If the value is C<$Default>, the default version of the launch template
is used. If the value is C<$Latest>, the latest version of the launch
template is used.

If the AMI ID that's used in a compute environment is from the launch
template, the AMI isn't changed when the compute environment is
updated. It's only changed if the C<updateToLatestImageVersion>
parameter for the compute environment is set to C<true>. During an
infrastructure update, if either C<$Default> or C<$Latest> is
specified, Batch re-evaluates the launch template version, and it might
use a different version of the launch template. This is the case even
if the launch template isn't specified in the update. When updating a
compute environment, changing the launch template requires an
infrastructure update of the compute environment. For more information,
see Updating compute environments
(https://docs.aws.amazon.com/batch/latest/userguide/updating-compute-environments.html)
in the I<Batch User Guide>.

Default: C<$Default>

Latest: C<$Latest>



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

