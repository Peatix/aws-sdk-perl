# Generated by default/object.tt
package Paws::Batch::FairsharePolicy;
  use Moose;
  has ComputeReservation => (is => 'ro', isa => 'Int', request_name => 'computeReservation', traits => ['NameInRequest']);
  has ShareDecaySeconds => (is => 'ro', isa => 'Int', request_name => 'shareDecaySeconds', traits => ['NameInRequest']);
  has ShareDistribution => (is => 'ro', isa => 'ArrayRef[Paws::Batch::ShareAttributes]', request_name => 'shareDistribution', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Batch::FairsharePolicy

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Batch::FairsharePolicy object:

  $service_obj->Method(Att1 => { ComputeReservation => $value, ..., ShareDistribution => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Batch::FairsharePolicy object:

  $result = $service_obj->Method(...);
  $result->Att1->ComputeReservation

=head1 DESCRIPTION

The fair-share scheduling policy details.

=head1 ATTRIBUTES


=head2 ComputeReservation => Int

A value used to reserve some of the available maximum vCPU for share
identifiers that aren't already used.

The reserved ratio is C<(I<computeReservation>/100)^I<ActiveFairShares>
> where C< I<ActiveFairShares> > is the number of active share
identifiers.

For example, a C<computeReservation> value of 50 indicates that Batch
reserves 50% of the maximum available vCPU if there's only one share
identifier. It reserves 25% if there are two share identifiers. It
reserves 12.5% if there are three share identifiers. A
C<computeReservation> value of 25 indicates that Batch should reserve
25% of the maximum available vCPU if there's only one share identifier,
6.25% if there are two fair share identifiers, and 1.56% if there are
three share identifiers.

The minimum value is 0 and the maximum value is 99.


=head2 ShareDecaySeconds => Int

The amount of time (in seconds) to use to calculate a fair-share
percentage for each share identifier in use. A value of zero (0)
indicates the default minimum time window (600 seconds). The maximum
supported value is 604800 (1 week).

The decay allows for more recently run jobs to have more weight than
jobs that ran earlier. Consider adjusting this number if you have jobs
that (on average) run longer than ten minutes, or a large difference in
job count or job run times between share identifiers, and the
allocation of resources doesn't meet your needs.


=head2 ShareDistribution => ArrayRef[L<Paws::Batch::ShareAttributes>]

An array of C<SharedIdentifier> objects that contain the weights for
the share identifiers for the fair-share policy. Share identifiers that
aren't included have a default weight of C<1.0>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Batch>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

