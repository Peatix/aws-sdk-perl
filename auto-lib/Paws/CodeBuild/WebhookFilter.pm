# Generated by default/object.tt
package Paws::CodeBuild::WebhookFilter;
  use Moose;
  has ExcludeMatchedPattern => (is => 'ro', isa => 'Bool', request_name => 'excludeMatchedPattern', traits => ['NameInRequest']);
  has Pattern => (is => 'ro', isa => 'Str', request_name => 'pattern', traits => ['NameInRequest'], required => 1);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::CodeBuild::WebhookFilter

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CodeBuild::WebhookFilter object:

  $service_obj->Method(Att1 => { ExcludeMatchedPattern => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CodeBuild::WebhookFilter object:

  $result = $service_obj->Method(...);
  $result->Att1->ExcludeMatchedPattern

=head1 DESCRIPTION

A filter used to determine which webhooks trigger a build.

=head1 ATTRIBUTES


=head2 ExcludeMatchedPattern => Bool

Used to indicate that the C<pattern> determines which webhook events do
not trigger a build. If true, then a webhook event that does not match
the C<pattern> triggers a build. If false, then a webhook event that
matches the C<pattern> triggers a build.


=head2 B<REQUIRED> Pattern => Str

For a C<WebHookFilter> that uses C<EVENT> type, a comma-separated
string that specifies one or more events. For example, the webhook
filter C<PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED> allows all
push, pull request created, and pull request updated events to trigger
a build.

For a C<WebHookFilter> that uses any of the other filter types, a
regular expression pattern. For example, a C<WebHookFilter> that uses
C<HEAD_REF> for its C<type> and the pattern C<^refs/heads/> triggers a
build when the head reference is a branch with a reference name
C<refs/heads/branch-name>.


=head2 B<REQUIRED> Type => Str

The type of webhook filter. There are 11 webhook filter types:
C<EVENT>, C<ACTOR_ACCOUNT_ID>, C<HEAD_REF>, C<BASE_REF>, C<FILE_PATH>,
C<COMMIT_MESSAGE>, C<TAG_NAME>, C<RELEASE_NAME>, C<REPOSITORY_NAME>,
C<ORGANIZATION_NAME>, and C<WORKFLOW_NAME>.

=over

=item *

EVENT

=over

=item *

A webhook event triggers a build when the provided C<pattern> matches
one of nine event types: C<PUSH>, C<PULL_REQUEST_CREATED>,
C<PULL_REQUEST_UPDATED>, C<PULL_REQUEST_CLOSED>,
C<PULL_REQUEST_REOPENED>, C<PULL_REQUEST_MERGED>, C<RELEASED>,
C<PRERELEASED>, and C<WORKFLOW_JOB_QUEUED>. The C<EVENT> patterns are
specified as a comma-separated string. For example, C<PUSH,
PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED> filters all push, pull
request created, and pull request updated events.

Types C<PULL_REQUEST_REOPENED> and C<WORKFLOW_JOB_QUEUED> work with
GitHub and GitHub Enterprise only. Types C<RELEASED> and C<PRERELEASED>
work with GitHub only.

=back

=item *

ACTOR_ACCOUNT_ID

=over

=item *

A webhook event triggers a build when a GitHub, GitHub Enterprise, or
Bitbucket account ID matches the regular expression C<pattern>.

=back

=item *

HEAD_REF

=over

=item *

A webhook event triggers a build when the head reference matches the
regular expression C<pattern>. For example, C<refs/heads/branch-name>
and C<refs/tags/tag-name>.

Works with GitHub and GitHub Enterprise push, GitHub and GitHub
Enterprise pull request, Bitbucket push, and Bitbucket pull request
events.

=back

=item *

BASE_REF

=over

=item *

A webhook event triggers a build when the base reference matches the
regular expression C<pattern>. For example, C<refs/heads/branch-name>.

Works with pull request events only.

=back

=item *

FILE_PATH

=over

=item *

A webhook triggers a build when the path of a changed file matches the
regular expression C<pattern>.

Works with push and pull request events only.

=back

=item *

COMMIT_MESSAGE

=over

=item *

A webhook triggers a build when the head commit message matches the
regular expression C<pattern>.

Works with push and pull request events only.

=back

=item *

TAG_NAME

=over

=item *

A webhook triggers a build when the tag name of the release matches the
regular expression C<pattern>.

Works with C<RELEASED> and C<PRERELEASED> events only.

=back

=item *

RELEASE_NAME

=over

=item *

A webhook triggers a build when the release name matches the regular
expression C<pattern>.

Works with C<RELEASED> and C<PRERELEASED> events only.

=back

=item *

REPOSITORY_NAME

=over

=item *

A webhook triggers a build when the repository name matches the regular
expression C<pattern>.

Works with GitHub global or organization webhooks only.

=back

=item *

ORGANIZATION_NAME

=over

=item *

A webhook triggers a build when the organization name matches the
regular expression C<pattern>.

Works with GitHub global webhooks only.

=back

=item *

WORKFLOW_NAME

=over

=item *

A webhook triggers a build when the workflow name matches the regular
expression C<pattern>.

Works with C<WORKFLOW_JOB_QUEUED> events only.

For CodeBuild-hosted Buildkite runner builds, WORKFLOW_NAME filters
will filter by pipeline name.

=back

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CodeBuild>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

