# Generated by default/object.tt
package Paws::Grafana::NetworkAccessConfiguration;
  use Moose;
  has PrefixListIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'prefixListIds', traits => ['NameInRequest'], required => 1);
  has VpceIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'vpceIds', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Grafana::NetworkAccessConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Grafana::NetworkAccessConfiguration object:

  $service_obj->Method(Att1 => { PrefixListIds => $value, ..., VpceIds => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Grafana::NetworkAccessConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->PrefixListIds

=head1 DESCRIPTION

The configuration settings for in-bound network access to your
workspace.

When this is configured, only listed IP addresses and VPC endpoints
will be able to access your workspace. Standard Grafana authentication
and authorization are still required.

Access is granted to a caller that is in either the IP address list or
the VPC endpoint list - they do not need to be in both.

If this is not configured, or is removed, then all IP addresses and VPC
endpoints are allowed. Standard Grafana authentication and
authorization are still required.

While both C<prefixListIds> and C<vpceIds> are required, you can pass
in an empty array of strings for either parameter if you do not want to
allow any of that type.

If both are passed as empty arrays, no traffic is allowed to the
workspace, because only I<explicitly> allowed connections are accepted.

=head1 ATTRIBUTES


=head2 B<REQUIRED> PrefixListIds => ArrayRef[Str|Undef]

An array of prefix list IDs. A prefix list is a list of CIDR ranges of
IP addresses. The IP addresses specified are allowed to access your
workspace. If the list is not included in the configuration (passed an
empty array) then no IP addresses are allowed to access the workspace.
You create a prefix list using the Amazon VPC console.

Prefix list IDs have the format C<pl-I<1a2b3c4d> >.

For more information about prefix lists, see Group CIDR blocks using
managed prefix lists
(https://docs.aws.amazon.com/vpc/latest/userguide/managed-prefix-lists.html)in
the I<Amazon Virtual Private Cloud User Guide>.


=head2 B<REQUIRED> VpceIds => ArrayRef[Str|Undef]

An array of Amazon VPC endpoint IDs for the workspace. You can create
VPC endpoints to your Amazon Managed Grafana workspace for access from
within a VPC. If a C<NetworkAccessConfiguration> is specified then only
VPC endpoints specified here are allowed to access the workspace. If
you pass in an empty array of strings, then no VPCs are allowed to
access the workspace.

VPC endpoint IDs have the format C<vpce-I<1a2b3c4d> >.

For more information about creating an interface VPC endpoint, see
Interface VPC endpoints
(https://docs.aws.amazon.com/grafana/latest/userguide/VPC-endpoints) in
the I<Amazon Managed Grafana User Guide>.

The only VPC endpoints that can be specified here are interface VPC
endpoints for Grafana workspaces (using the
C<com.amazonaws.[region].grafana-workspace> service endpoint). Other
VPC endpoints are ignored.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Grafana>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

