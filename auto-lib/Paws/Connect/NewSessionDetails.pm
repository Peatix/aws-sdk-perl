# Generated by default/object.tt
package Paws::Connect::NewSessionDetails;
  use Moose;
  has Attributes => (is => 'ro', isa => 'Paws::Connect::Attributes');
  has ParticipantDetails => (is => 'ro', isa => 'Paws::Connect::ParticipantDetails');
  has StreamingConfiguration => (is => 'ro', isa => 'Paws::Connect::ChatStreamingConfiguration');
  has SupportedMessagingContentTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Connect::NewSessionDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Connect::NewSessionDetails object:

  $service_obj->Method(Att1 => { Attributes => $value, ..., SupportedMessagingContentTypes => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Connect::NewSessionDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->Attributes

=head1 DESCRIPTION

Payload of chat properties to apply when starting a new contact.

=head1 ATTRIBUTES


=head2 Attributes => L<Paws::Connect::Attributes>

A custom key-value pair using an attribute map. The attributes are
standard Amazon Connect attributes. They can be accessed in flows just
like any other contact attributes.

There can be up to 32,768 UTF-8 bytes across all key-value pairs per
contact. Attribute keys can include only alphanumeric, dash, and
underscore characters.


=head2 ParticipantDetails => L<Paws::Connect::ParticipantDetails>




=head2 StreamingConfiguration => L<Paws::Connect::ChatStreamingConfiguration>




=head2 SupportedMessagingContentTypes => ArrayRef[Str|Undef]

The supported chat message content types. Supported types are
C<text/plain>, C<text/markdown>, C<application/json>,
C<application/vnd.amazonaws.connect.message.interactive>, and
C<application/vnd.amazonaws.connect.message.interactive.response>.

Content types must always contain C< text/plain>. You can then put any
other supported type in the list. For example, all the following lists
are valid because they contain C<text/plain>: C<[text/plain,
text/markdown, application/json]>, C< [text/markdown, text/plain]>,
C<[text/plain, application/json,
application/vnd.amazonaws.connect.message.interactive.response]>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Connect>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

