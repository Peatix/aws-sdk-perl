# Generated by default/object.tt
package Paws::IVS::StreamEvent;
  use Moose;
  has Code => (is => 'ro', isa => 'Str', request_name => 'code', traits => ['NameInRequest']);
  has EventTime => (is => 'ro', isa => 'Str', request_name => 'eventTime', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::IVS::StreamEvent

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::IVS::StreamEvent object:

  $service_obj->Method(Att1 => { Code => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::IVS::StreamEvent object:

  $result = $service_obj->Method(...);
  $result->Att1->Code

=head1 DESCRIPTION

Object specifying a streamE<rsquo>s events. For a list of events, see
Using Amazon EventBridge with Amazon IVS
(https://docs.aws.amazon.com/ivs/latest/userguide/eventbridge.html).

=head1 ATTRIBUTES


=head2 Code => Str

Provides additional details about the stream event. There are several
values; the long descriptions are provided in the IVS console but not
delivered through the IVS API or EventBridge. Multitrack-related codes
are used only for certain Session Ended events.

=over

=item *

C<MultitrackInputNotAllowed> E<mdash> The broadcast client attempted to
connect with multitrack input, but multitrack input was not enabled on
the channel. Check your broadcast software settings or set
C<MultitrackInputConfiguration.Policy> to C<ALLOW> or C<REQUIRE>.

=item *

C<MultitrackInputRequired> E<mdash> The broadcast client attempted to
connect with single-track video, but multitrack input is required on
this channel. Enable multitrack video in your broadcast software or
configure the channelE<rsquo>s C<MultitrackInputConfiguration.Policy>
to C<ALLOW>.

=item *

C<InvalidGetClientConfigurationStreamKey> E<mdash> The broadcast client
attempted to connect with an invalid, expired, or corrupt stream key.

=item *

C<GetClientConfigurationStreamKeyRequired> E<mdash> The broadcast
client attempted to stream multitrack video without providing an
authenticated stream key from GetClientConfiguration.

=item *

C<InvalidMultitrackInputTrackCount> E<mdash> The multitrack input
stream contained an invalid number of tracks.

=item *

C<InvalidMultitrackInputVideoTrackMediaProperties> E<mdash> The
multitrack input stream contained one or more tracks with an invalid
codec, resolution, bitrate, or framerate.

=item *

C<StreamTakeoverMediaMismatch> E<mdash> The broadcast client attempted
to take over with different media properties (e.g., codec, resolution,
or video track type) from the original stream.

=item *

C<StreamTakeoverInvalidPriority> E<mdash> The broadcast client
attempted a takeover with either a priority integer value equal to or
lower than the original stream's value or a value outside the allowed
range of 1 to 2,147,483,647.

C<StreamTakeoverLimitBreached> E<mdash> The broadcast client reached
the maximum allowed takeover attempts for this stream.

=back



=head2 EventTime => Str

Time when the event occurred. This is an ISO 8601 timestamp; I<note
that this is returned as a string>.


=head2 Name => Str

Name that identifies the stream event within a C<type>.


=head2 Type => Str

Logical group for certain events.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::IVS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

