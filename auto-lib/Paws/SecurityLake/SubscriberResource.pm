# Generated by default/object.tt
package Paws::SecurityLake::SubscriberResource;
  use Moose;
  has AccessTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'accessTypes', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has ResourceShareArn => (is => 'ro', isa => 'Str', request_name => 'resourceShareArn', traits => ['NameInRequest']);
  has ResourceShareName => (is => 'ro', isa => 'Str', request_name => 'resourceShareName', traits => ['NameInRequest']);
  has RoleArn => (is => 'ro', isa => 'Str', request_name => 'roleArn', traits => ['NameInRequest']);
  has S3BucketArn => (is => 'ro', isa => 'Str', request_name => 's3BucketArn', traits => ['NameInRequest']);
  has Sources => (is => 'ro', isa => 'ArrayRef[Paws::SecurityLake::LogSourceResource]', request_name => 'sources', traits => ['NameInRequest'], required => 1);
  has SubscriberArn => (is => 'ro', isa => 'Str', request_name => 'subscriberArn', traits => ['NameInRequest'], required => 1);
  has SubscriberDescription => (is => 'ro', isa => 'Str', request_name => 'subscriberDescription', traits => ['NameInRequest']);
  has SubscriberEndpoint => (is => 'ro', isa => 'Str', request_name => 'subscriberEndpoint', traits => ['NameInRequest']);
  has SubscriberId => (is => 'ro', isa => 'Str', request_name => 'subscriberId', traits => ['NameInRequest'], required => 1);
  has SubscriberIdentity => (is => 'ro', isa => 'Paws::SecurityLake::AwsIdentity', request_name => 'subscriberIdentity', traits => ['NameInRequest'], required => 1);
  has SubscriberName => (is => 'ro', isa => 'Str', request_name => 'subscriberName', traits => ['NameInRequest'], required => 1);
  has SubscriberStatus => (is => 'ro', isa => 'Str', request_name => 'subscriberStatus', traits => ['NameInRequest']);
  has UpdatedAt => (is => 'ro', isa => 'Str', request_name => 'updatedAt', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityLake::SubscriberResource

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityLake::SubscriberResource object:

  $service_obj->Method(Att1 => { AccessTypes => $value, ..., UpdatedAt => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityLake::SubscriberResource object:

  $result = $service_obj->Method(...);
  $result->Att1->AccessTypes

=head1 DESCRIPTION

Provides details about the Amazon Security Lake account subscription.
Subscribers are notified of new objects for a source as the data is
written to your Amazon S3 bucket for Security Lake.

=head1 ATTRIBUTES


=head2 AccessTypes => ArrayRef[Str|Undef]

You can choose to notify subscribers of new objects with an Amazon
Simple Queue Service (Amazon SQS) queue or through messaging to an
HTTPS endpoint provided by the subscriber.

Subscribers can consume data by directly querying Lake Formation tables
in your Amazon S3 bucket through services like Amazon Athena. This
subscription type is defined as C<LAKEFORMATION>.


=head2 CreatedAt => Str

The date and time when the subscriber was created.


=head2 ResourceShareArn => Str

The Amazon Resource Name (ARN) which uniquely defines the Amazon Web
Services RAM resource share. Before accepting the RAM resource share
invitation, you can view details related to the RAM resource share.

This field is available only for Lake Formation subscribers created
after March 8, 2023.


=head2 ResourceShareName => Str

The name of the resource share.


=head2 RoleArn => Str

The Amazon Resource Name (ARN) specifying the role of the subscriber.


=head2 S3BucketArn => Str

The ARN for the Amazon S3 bucket.


=head2 B<REQUIRED> Sources => ArrayRef[L<Paws::SecurityLake::LogSourceResource>]

Amazon Security Lake supports log and event collection for natively
supported Amazon Web Services services. For more information, see the
Amazon Security Lake User Guide
(https://docs.aws.amazon.com/security-lake/latest/userguide/source-management.html).


=head2 B<REQUIRED> SubscriberArn => Str

The subscriber ARN of the Amazon Security Lake subscriber account.


=head2 SubscriberDescription => Str

The subscriber descriptions for a subscriber account. The description
for a subscriber includes C<subscriberName>, C<accountID>,
C<externalID>, and C<subscriberId>.


=head2 SubscriberEndpoint => Str

The subscriber endpoint to which exception messages are posted.


=head2 B<REQUIRED> SubscriberId => Str

The subscriber ID of the Amazon Security Lake subscriber account.


=head2 B<REQUIRED> SubscriberIdentity => L<Paws::SecurityLake::AwsIdentity>

The Amazon Web Services identity used to access your data.


=head2 B<REQUIRED> SubscriberName => Str

The name of your Amazon Security Lake subscriber account.


=head2 SubscriberStatus => Str

The subscriber status of the Amazon Security Lake subscriber account.


=head2 UpdatedAt => Str

The date and time when the subscriber was last updated.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityLake>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

