# Generated by default/object.tt
package Paws::SecurityLake::DataLakeResource;
  use Moose;
  has CreateStatus => (is => 'ro', isa => 'Str', request_name => 'createStatus', traits => ['NameInRequest']);
  has DataLakeArn => (is => 'ro', isa => 'Str', request_name => 'dataLakeArn', traits => ['NameInRequest'], required => 1);
  has EncryptionConfiguration => (is => 'ro', isa => 'Paws::SecurityLake::DataLakeEncryptionConfiguration', request_name => 'encryptionConfiguration', traits => ['NameInRequest']);
  has LifecycleConfiguration => (is => 'ro', isa => 'Paws::SecurityLake::DataLakeLifecycleConfiguration', request_name => 'lifecycleConfiguration', traits => ['NameInRequest']);
  has Region => (is => 'ro', isa => 'Str', request_name => 'region', traits => ['NameInRequest'], required => 1);
  has ReplicationConfiguration => (is => 'ro', isa => 'Paws::SecurityLake::DataLakeReplicationConfiguration', request_name => 'replicationConfiguration', traits => ['NameInRequest']);
  has S3BucketArn => (is => 'ro', isa => 'Str', request_name => 's3BucketArn', traits => ['NameInRequest']);
  has UpdateStatus => (is => 'ro', isa => 'Paws::SecurityLake::DataLakeUpdateStatus', request_name => 'updateStatus', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::SecurityLake::DataLakeResource

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SecurityLake::DataLakeResource object:

  $service_obj->Method(Att1 => { CreateStatus => $value, ..., UpdateStatus => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SecurityLake::DataLakeResource object:

  $result = $service_obj->Method(...);
  $result->Att1->CreateStatus

=head1 DESCRIPTION

Provides details of Amazon Security Lake object.

=head1 ATTRIBUTES


=head2 CreateStatus => Str

Retrieves the status of the C<CreateDatalake> API call for an account
in Amazon Security Lake.


=head2 B<REQUIRED> DataLakeArn => Str

The Amazon Resource Name (ARN) created by you to provide to the
subscriber. For more information about ARNs and how to use them in
policies, see the Amazon Security Lake User Guide
(https://docs.aws.amazon.com/security-lake/latest/userguide/subscriber-management.html).


=head2 EncryptionConfiguration => L<Paws::SecurityLake::DataLakeEncryptionConfiguration>

Provides encryption details of Amazon Security Lake object.


=head2 LifecycleConfiguration => L<Paws::SecurityLake::DataLakeLifecycleConfiguration>

Provides lifecycle details of Amazon Security Lake object.


=head2 B<REQUIRED> Region => Str

The Amazon Web Services Regions where Security Lake is enabled.


=head2 ReplicationConfiguration => L<Paws::SecurityLake::DataLakeReplicationConfiguration>

Provides replication details of Amazon Security Lake object.


=head2 S3BucketArn => Str

The ARN for the Amazon Security Lake Amazon S3 bucket.


=head2 UpdateStatus => L<Paws::SecurityLake::DataLakeUpdateStatus>

The status of the last C<UpdateDataLake >or C<DeleteDataLake> API
request.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SecurityLake>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

