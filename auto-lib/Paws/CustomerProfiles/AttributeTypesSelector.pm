# Generated by default/object.tt
package Paws::CustomerProfiles::AttributeTypesSelector;
  use Moose;
  has Address => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has AttributeMatchingModel => (is => 'ro', isa => 'Str', required => 1);
  has EmailAddress => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has PhoneNumber => (is => 'ro', isa => 'ArrayRef[Str|Undef]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::CustomerProfiles::AttributeTypesSelector

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CustomerProfiles::AttributeTypesSelector object:

  $service_obj->Method(Att1 => { Address => $value, ..., PhoneNumber => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CustomerProfiles::AttributeTypesSelector object:

  $result = $service_obj->Method(...);
  $result->Att1->Address

=head1 DESCRIPTION

Configuration information about the C<AttributeTypesSelector >where the
rule-based identity resolution uses to match profiles. You can choose
how profiles are compared across attribute types and which attribute to
use for matching from each type. There are three attribute types you
can configure:

=over

=item *

Email type

=over

=item *

You can choose from C<Email>, C<BusinessEmail>, and C<PersonalEmail>

=back

=item *

Phone number type

=over

=item *

You can choose from C<Phone>, C<HomePhone>, and C<MobilePhone>

=back

=item *

Address type

=over

=item *

You can choose from C<Address>, C<BusinessAddress>, C<MaillingAddress>,
and C<ShippingAddress>

=back

=back

You can either choose C<ONE_TO_ONE> or C<MANY_TO_MANY> as the
C<AttributeMatchingModel>. When choosing C<MANY_TO_MANY>, the system
can match attribute across the sub-types of an attribute type. For
example, if the value of the C<Email> field of Profile A and the value
of C<BusinessEmail> field of Profile B matches, the two profiles are
matched on the Email type. When choosing C<ONE_TO_ONE> the system can
only match if the sub-types are exact matches. For example, only when
the value of the C<Email> field of Profile A and the value of the
C<Email> field of Profile B matches, the two profiles are matched on
the Email type.

=head1 ATTRIBUTES


=head2 Address => ArrayRef[Str|Undef]

The C<Address> type. You can choose from C<Address>,
C<BusinessAddress>, C<MaillingAddress>, and C<ShippingAddress>.

You only can use the Address type in the C<MatchingRule>. For example,
if you want to match profile based on C<BusinessAddress.City> or
C<MaillingAddress.City>, you need to choose the C<BusinessAddress> and
the C<MaillingAddress> to represent the Address type and specify the
C<Address.City> on the matching rule.


=head2 B<REQUIRED> AttributeMatchingModel => Str

Configures the C<AttributeMatchingModel>, you can either choose
C<ONE_TO_ONE> or C<MANY_TO_MANY>.


=head2 EmailAddress => ArrayRef[Str|Undef]

The C<Email> type. You can choose from C<EmailAddress>,
C<BusinessEmailAddress> and C<PersonalEmailAddress>.

You only can use the C<EmailAddress> type in the C<MatchingRule>. For
example, if you want to match profile based on C<PersonalEmailAddress>
or C<BusinessEmailAddress>, you need to choose the
C<PersonalEmailAddress> and the C<BusinessEmailAddress> to represent
the C<EmailAddress> type and only specify the C<EmailAddress> on the
matching rule.


=head2 PhoneNumber => ArrayRef[Str|Undef]

The C<PhoneNumber> type. You can choose from C<PhoneNumber>,
C<HomePhoneNumber>, and C<MobilePhoneNumber>.

You only can use the C<PhoneNumber> type in the C<MatchingRule>. For
example, if you want to match a profile based on C<Phone> or
C<HomePhone>, you need to choose the C<Phone> and the C<HomePhone> to
represent the C<PhoneNumber> type and only specify the C<PhoneNumber>
on the matching rule.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CustomerProfiles>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

