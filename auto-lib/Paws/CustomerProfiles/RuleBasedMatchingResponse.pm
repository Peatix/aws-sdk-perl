# Generated by default/object.tt
package Paws::CustomerProfiles::RuleBasedMatchingResponse;
  use Moose;
  has AttributeTypesSelector => (is => 'ro', isa => 'Paws::CustomerProfiles::AttributeTypesSelector');
  has ConflictResolution => (is => 'ro', isa => 'Paws::CustomerProfiles::ConflictResolution');
  has Enabled => (is => 'ro', isa => 'Bool');
  has ExportingConfig => (is => 'ro', isa => 'Paws::CustomerProfiles::ExportingConfig');
  has MatchingRules => (is => 'ro', isa => 'ArrayRef[Paws::CustomerProfiles::MatchingRule]');
  has MaxAllowedRuleLevelForMatching => (is => 'ro', isa => 'Int');
  has MaxAllowedRuleLevelForMerging => (is => 'ro', isa => 'Int');
  has Status => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::CustomerProfiles::RuleBasedMatchingResponse

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CustomerProfiles::RuleBasedMatchingResponse object:

  $service_obj->Method(Att1 => { AttributeTypesSelector => $value, ..., Status => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CustomerProfiles::RuleBasedMatchingResponse object:

  $result = $service_obj->Method(...);
  $result->Att1->AttributeTypesSelector

=head1 DESCRIPTION

The response of the Rule-based matching request.

=head1 ATTRIBUTES


=head2 AttributeTypesSelector => L<Paws::CustomerProfiles::AttributeTypesSelector>

Configures information about the C<AttributeTypesSelector> where the
rule-based identity resolution uses to match profiles.


=head2 ConflictResolution => L<Paws::CustomerProfiles::ConflictResolution>




=head2 Enabled => Bool

The flag that enables the rule-based matching process of duplicate
profiles.


=head2 ExportingConfig => L<Paws::CustomerProfiles::ExportingConfig>




=head2 MatchingRules => ArrayRef[L<Paws::CustomerProfiles::MatchingRule>]

Configures how the rule-based matching process should match profiles.
You can have up to 15 C<MatchingRule> in the C<MatchingRules>.


=head2 MaxAllowedRuleLevelForMatching => Int

Indicates the maximum allowed rule level.


=head2 MaxAllowedRuleLevelForMerging => Int

MatchingRule
(https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_MatchingRule.html)


=head2 Status => Str

PENDING

=over

=item *

The first status after configuration a rule-based matching rule. If it
is an existing domain, the rule-based Identity Resolution waits one
hour before creating the matching rule. If it is a new domain, the
system will skip the C<PENDING> stage.

=back

IN_PROGRESS

=over

=item *

The system is creating the rule-based matching rule. Under this status,
the system is evaluating the existing data and you can no longer change
the Rule-based matching configuration.

=back

ACTIVE

=over

=item *

The rule is ready to use. You can change the rule a day after the
status is in C<ACTIVE>.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CustomerProfiles>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

