# Generated by default/object.tt
package Paws::Transcribe::CallAnalyticsJobSettings;
  use Moose;
  has ContentRedaction => (is => 'ro', isa => 'Paws::Transcribe::ContentRedaction');
  has LanguageIdSettings => (is => 'ro', isa => 'Paws::Transcribe::LanguageIdSettingsMap');
  has LanguageModelName => (is => 'ro', isa => 'Str');
  has LanguageOptions => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Summarization => (is => 'ro', isa => 'Paws::Transcribe::Summarization');
  has VocabularyFilterMethod => (is => 'ro', isa => 'Str');
  has VocabularyFilterName => (is => 'ro', isa => 'Str');
  has VocabularyName => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Transcribe::CallAnalyticsJobSettings

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Transcribe::CallAnalyticsJobSettings object:

  $service_obj->Method(Att1 => { ContentRedaction => $value, ..., VocabularyName => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Transcribe::CallAnalyticsJobSettings object:

  $result = $service_obj->Method(...);
  $result->Att1->ContentRedaction

=head1 DESCRIPTION

Provides additional optional settings for your request, including
content redaction, automatic language identification; allows you to
apply custom language models, custom vocabulary filters, and custom
vocabularies.

=head1 ATTRIBUTES


=head2 ContentRedaction => L<Paws::Transcribe::ContentRedaction>




=head2 LanguageIdSettings => L<Paws::Transcribe::LanguageIdSettingsMap>

If using automatic language identification in your request and you want
to apply a custom language model, a custom vocabulary, or a custom
vocabulary filter, include C<LanguageIdSettings> with the relevant
sub-parameters (C<VocabularyName>, C<LanguageModelName>, and
C<VocabularyFilterName>).

C<LanguageIdSettings> supports two to five language codes. Each
language code you include can have an associated custom language model,
custom vocabulary, and custom vocabulary filter. The language codes
that you specify must match the languages of the associated custom
language models, custom vocabularies, and custom vocabulary filters.

It's recommended that you include C<LanguageOptions> when using
C<LanguageIdSettings> to ensure that the correct language dialect is
identified. For example, if you specify a custom vocabulary that is in
C<en-US> but Amazon Transcribe determines that the language spoken in
your media is C<en-AU>, your custom vocabulary I<is not> applied to
your transcription. If you include C<LanguageOptions> and include
C<en-US> as the only English language dialect, your custom vocabulary
I<is> applied to your transcription.

If you want to include a custom language model, custom vocabulary, or
custom vocabulary filter with your request but B<do not> want to use
automatic language identification, use instead the C< parameter with
the C<LanguageModelName>, C<VocabularyName>, or C<VocabularyFilterName>
sub-parameters.>

For a list of languages supported with Call Analytics, refer to
Supported languages and language-specific features
(https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html).


=head2 LanguageModelName => Str

The name of the custom language model you want to use when processing
your Call Analytics job. Note that custom language model names are case
sensitive.

The language of the specified custom language model must match the
language code that you specify in your transcription request. If the
languages do not match, the custom language model isn't applied. There
are no errors or warnings associated with a language mismatch.


=head2 LanguageOptions => ArrayRef[Str|Undef]

You can specify two or more language codes that represent the languages
you think may be present in your media. Including more than five is not
recommended. If you're unsure what languages are present, do not
include this parameter.

Including language options can improve the accuracy of language
identification.

For a list of languages supported with Call Analytics, refer to the
Supported languages
(https://docs.aws.amazon.com/transcribe/latest/dg/supported-languages.html)
table.

To transcribe speech in Modern Standard Arabic (C<ar-SA>) in Amazon Web
Services GovCloud (US) (US-West, us-gov-west-1), Amazon Web Services
GovCloud (US) (US-East, us-gov-east-1), Canada (Calgary) ca-west-1 and
Africa (Cape Town) af-south-1, your media file must be encoded at a
sample rate of 16,000 Hz or higher.


=head2 Summarization => L<Paws::Transcribe::Summarization>

Contains C<GenerateAbstractiveSummary>, which is a required parameter
if you want to enable Generative call summarization in your Call
Analytics request.


=head2 VocabularyFilterMethod => Str

Specify how you want your custom vocabulary filter applied to your
transcript.

To replace words with C<***>, choose C<mask>.

To delete words, choose C<remove>.

To flag words without changing them, choose C<tag>.


=head2 VocabularyFilterName => Str

The name of the custom vocabulary filter you want to include in your
Call Analytics transcription request. Custom vocabulary filter names
are case sensitive.

Note that if you include C<VocabularyFilterName> in your request, you
must also include C<VocabularyFilterMethod>.


=head2 VocabularyName => Str

The name of the custom vocabulary you want to include in your Call
Analytics transcription request. Custom vocabulary names are case
sensitive.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Transcribe>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

