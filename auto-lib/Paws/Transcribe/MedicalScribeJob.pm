# Generated by default/object.tt
package Paws::Transcribe::MedicalScribeJob;
  use Moose;
  has ChannelDefinitions => (is => 'ro', isa => 'ArrayRef[Paws::Transcribe::MedicalScribeChannelDefinition]');
  has CompletionTime => (is => 'ro', isa => 'Str');
  has CreationTime => (is => 'ro', isa => 'Str');
  has DataAccessRoleArn => (is => 'ro', isa => 'Str');
  has FailureReason => (is => 'ro', isa => 'Str');
  has LanguageCode => (is => 'ro', isa => 'Str');
  has Media => (is => 'ro', isa => 'Paws::Transcribe::Media');
  has MedicalScribeJobName => (is => 'ro', isa => 'Str');
  has MedicalScribeJobStatus => (is => 'ro', isa => 'Str');
  has MedicalScribeOutput => (is => 'ro', isa => 'Paws::Transcribe::MedicalScribeOutput');
  has Settings => (is => 'ro', isa => 'Paws::Transcribe::MedicalScribeSettings');
  has StartTime => (is => 'ro', isa => 'Str');
  has Tags => (is => 'ro', isa => 'ArrayRef[Paws::Transcribe::Tag]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Transcribe::MedicalScribeJob

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Transcribe::MedicalScribeJob object:

  $service_obj->Method(Att1 => { ChannelDefinitions => $value, ..., Tags => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Transcribe::MedicalScribeJob object:

  $result = $service_obj->Method(...);
  $result->Att1->ChannelDefinitions

=head1 DESCRIPTION

Provides detailed information about a Medical Scribe job.

To view the status of the specified Medical Scribe job, check the
C<MedicalScribeJobStatus> field. If the status is C<COMPLETED>, the job
is finished and you can find the results at the locations specified in
C<MedicalScribeOutput>. If the status is C<FAILED>, C<FailureReason>
provides details on why your Medical Scribe job failed.

=head1 ATTRIBUTES


=head2 ChannelDefinitions => ArrayRef[L<Paws::Transcribe::MedicalScribeChannelDefinition>]

Makes it possible to specify which speaker is on which channel. For
example, if the clinician is the first participant to speak, you would
set C<ChannelId> of the first C<ChannelDefinition> in the list to C<0>
(to indicate the first channel) and C<ParticipantRole> to C<CLINICIAN>
(to indicate that it's the clinician speaking). Then you would set the
C<ChannelId> of the second C<ChannelDefinition> in the list to C<1> (to
indicate the second channel) and C<ParticipantRole> to C<PATIENT> (to
indicate that it's the patient speaking).


=head2 CompletionTime => Str

The date and time the specified Medical Scribe job finished processing.

Timestamps are in the format C<YYYY-MM-DD'T'HH:MM:SS.SSSSSS-UTC>. For
example, C<2022-05-04T12:32:58.761000-07:00> represents a Medical
Scribe job that finished processing at 12:32 PM UTC-7 on May 4, 2022.


=head2 CreationTime => Str

The date and time the specified Medical Scribe job request was made.

Timestamps are in the format C<YYYY-MM-DD'T'HH:MM:SS.SSSSSS-UTC>. For
example, C<2022-05-04T12:32:58.761000-07:00> represents a Medical
Scribe job that started processing at 12:32 PM UTC-7 on May 4, 2022.


=head2 DataAccessRoleArn => Str

The Amazon Resource Name (ARN) of an IAM role that has permissions to
access the Amazon S3 bucket that contains your input files, write to
the output bucket, and use your KMS key if supplied. If the role that
you specify doesnE<rsquo>t have the appropriate permissions your
request fails.

IAM role ARNs have the format
C<arn:partition:iam::account:role/role-name-with-path>. For example:
C<arn:aws:iam::111122223333:role/Admin>.

For more information, see IAM ARNs
(https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html#identifiers-arns).


=head2 FailureReason => Str

If C<MedicalScribeJobStatus> is C<FAILED>, C<FailureReason> contains
information about why the transcription job failed. See also: Common
Errors
(https://docs.aws.amazon.com/transcribe/latest/APIReference/CommonErrors.html).


=head2 LanguageCode => Str

The language code used to create your Medical Scribe job. US English
(C<en-US>) is the only supported language for Medical Scribe jobs.


=head2 Media => L<Paws::Transcribe::Media>




=head2 MedicalScribeJobName => Str

The name of the Medical Scribe job. Job names are case sensitive and
must be unique within an Amazon Web Services account.


=head2 MedicalScribeJobStatus => Str

Provides the status of the specified Medical Scribe job.

If the status is C<COMPLETED>, the job is finished and you can find the
results at the location specified in C<MedicalScribeOutput> If the
status is C<FAILED>, C<FailureReason> provides details on why your
Medical Scribe job failed.


=head2 MedicalScribeOutput => L<Paws::Transcribe::MedicalScribeOutput>

The location of the output of your Medical Scribe job.
C<ClinicalDocumentUri> holds the Amazon S3 URI for the Clinical
Document and C<TranscriptFileUri> holds the Amazon S3 URI for the
Transcript.


=head2 Settings => L<Paws::Transcribe::MedicalScribeSettings>

Makes it possible to control how your Medical Scribe job is processed
using a C<MedicalScribeSettings> object. Specify
C<ChannelIdentification> if C<ChannelDefinitions> are set. Enabled
C<ShowSpeakerLabels> if C<ChannelIdentification> and
C<ChannelDefinitions> are not set. One and only one of
C<ChannelIdentification> and C<ShowSpeakerLabels> must be set. If
C<ShowSpeakerLabels> is set, C<MaxSpeakerLabels> must also be set. Use
C<Settings> to specify a vocabulary or vocabulary filter or both using
C<VocabularyName>, C<VocabularyFilterName>. C<VocabularyFilterMethod>
must be specified if C<VocabularyFilterName> is set.


=head2 StartTime => Str

The date and time your Medical Scribe job began processing.

Timestamps are in the format C<YYYY-MM-DD'T'HH:MM:SS.SSSSSS-UTC>. For
example, C<2022-05-04T12:32:58.789000-07:00> represents a Medical
Scribe job that started processing at 12:32 PM UTC-7 on May 4, 2022.


=head2 Tags => ArrayRef[L<Paws::Transcribe::Tag>]

Adds one or more custom tags, each in the form of a key:value pair, to
the Medica Scribe job.

To learn more about using tags with Amazon Transcribe, refer to Tagging
resources
(https://docs.aws.amazon.com/transcribe/latest/dg/tagging.html).



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Transcribe>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

