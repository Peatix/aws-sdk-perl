# Generated by default/object.tt
package Paws::Backup::ControlScope;
  use Moose;
  has ComplianceResourceIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ComplianceResourceTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Tags => (is => 'ro', isa => 'Paws::Backup::StringMap');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Backup::ControlScope

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Backup::ControlScope object:

  $service_obj->Method(Att1 => { ComplianceResourceIds => $value, ..., Tags => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Backup::ControlScope object:

  $result = $service_obj->Method(...);
  $result->Att1->ComplianceResourceIds

=head1 DESCRIPTION

A framework consists of one or more controls. Each control has its own
control scope. The control scope can include one or more resource
types, a combination of a tag key and value, or a combination of one
resource type and one resource ID. If no scope is specified,
evaluations for the rule are triggered when any resource in your
recording group changes in configuration.

To set a control scope that includes all of a particular resource,
leave the C<ControlScope> empty or do not pass it when calling
C<CreateFramework>.

=head1 ATTRIBUTES


=head2 ComplianceResourceIds => ArrayRef[Str|Undef]

The ID of the only Amazon Web Services resource that you want your
control scope to contain.


=head2 ComplianceResourceTypes => ArrayRef[Str|Undef]

Describes whether the control scope includes one or more types of
resources, such as C<EFS> or C<RDS>.


=head2 Tags => L<Paws::Backup::StringMap>

The tag key-value pair applied to those Amazon Web Services resources
that you want to trigger an evaluation for a rule. A maximum of one
key-value pair can be provided. The tag value is optional, but it
cannot be an empty string if you are creating or editing a framework
from the console (though the value can be an empty string when included
in a CloudFormation template).

The structure to assign a tag is:
C<[{"Key":"string","Value":"string"}]>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Backup>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

