# Generated by default/object.tt
package Paws::Backup::BackupRule;
  use Moose;
  has CompletionWindowMinutes => (is => 'ro', isa => 'Int');
  has CopyActions => (is => 'ro', isa => 'ArrayRef[Paws::Backup::CopyAction]');
  has EnableContinuousBackup => (is => 'ro', isa => 'Bool');
  has IndexActions => (is => 'ro', isa => 'ArrayRef[Paws::Backup::IndexAction]');
  has Lifecycle => (is => 'ro', isa => 'Paws::Backup::Lifecycle');
  has RecoveryPointTags => (is => 'ro', isa => 'Paws::Backup::Tags');
  has RuleId => (is => 'ro', isa => 'Str');
  has RuleName => (is => 'ro', isa => 'Str', required => 1);
  has ScheduleExpression => (is => 'ro', isa => 'Str');
  has ScheduleExpressionTimezone => (is => 'ro', isa => 'Str');
  has StartWindowMinutes => (is => 'ro', isa => 'Int');
  has TargetBackupVaultName => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Backup::BackupRule

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Backup::BackupRule object:

  $service_obj->Method(Att1 => { CompletionWindowMinutes => $value, ..., TargetBackupVaultName => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Backup::BackupRule object:

  $result = $service_obj->Method(...);
  $result->Att1->CompletionWindowMinutes

=head1 DESCRIPTION

Specifies a scheduled task used to back up a selection of resources.

=head1 ATTRIBUTES


=head2 CompletionWindowMinutes => Int

A value in minutes after a backup job is successfully started before it
must be completed or it will be canceled by Backup. This value is
optional.


=head2 CopyActions => ArrayRef[L<Paws::Backup::CopyAction>]

An array of C<CopyAction> objects, which contains the details of the
copy operation.


=head2 EnableContinuousBackup => Bool

Specifies whether Backup creates continuous backups. True causes Backup
to create continuous backups capable of point-in-time restore (PITR).
False (or not specified) causes Backup to create snapshot backups.


=head2 IndexActions => ArrayRef[L<Paws::Backup::IndexAction>]

IndexActions is an array you use to specify how backup data should be
indexed.

eEach BackupRule can have 0 or 1 IndexAction, as each backup can have
up to one index associated with it.

Within the array is ResourceType. Only one will be accepted for each
BackupRule.


=head2 Lifecycle => L<Paws::Backup::Lifecycle>

The lifecycle defines when a protected resource is transitioned to cold
storage and when it expires. Backup transitions and expires backups
automatically according to the lifecycle that you define.

Backups transitioned to cold storage must be stored in cold storage for
a minimum of 90 days. Therefore, the E<ldquo>retentionE<rdquo> setting
must be 90 days greater than the E<ldquo>transition to cold after
daysE<rdquo> setting. The E<ldquo>transition to cold after daysE<rdquo>
setting cannot be changed after a backup has been transitioned to cold.

Resource types that can transition to cold storage are listed in the
Feature availability by resource
(https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
table. Backup ignores this expression for other resource types.


=head2 RecoveryPointTags => L<Paws::Backup::Tags>

The tags that are assigned to resources that are associated with this
rule when restored from backup.


=head2 RuleId => Str

Uniquely identifies a rule that is used to schedule the backup of a
selection of resources.


=head2 B<REQUIRED> RuleName => Str

A display name for a backup rule. Must contain 1 to 50 alphanumeric or
'-_.' characters.


=head2 ScheduleExpression => Str

A cron expression in UTC specifying when Backup initiates a backup job.
For more information about Amazon Web Services cron expressions, see
Schedule Expressions for Rules
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)
in the I<Amazon CloudWatch Events User Guide.>. Two examples of Amazon
Web Services cron expressions are C< 15 * ? * * *> (take a backup every
hour at 15 minutes past the hour) and C<0 12 * * ? *> (take a backup
every day at 12 noon UTC). For a table of examples, click the preceding
link and scroll down the page.


=head2 ScheduleExpressionTimezone => Str

The timezone in which the schedule expression is set. By default,
ScheduleExpressions are in UTC. You can modify this to a specified
timezone.


=head2 StartWindowMinutes => Int

A value in minutes after a backup is scheduled before a job will be
canceled if it doesn't start successfully. This value is optional. If
this value is included, it must be at least 60 minutes to avoid errors.

During the start window, the backup job status remains in C<CREATED>
status until it has successfully begun or until the start window time
has run out. If within the start window time Backup receives an error
that allows the job to be retried, Backup will automatically retry to
begin the job at least every 10 minutes until the backup successfully
begins (the job status changes to C<RUNNING>) or until the job status
changes to C<EXPIRED> (which is expected to occur when the start window
time is over).


=head2 B<REQUIRED> TargetBackupVaultName => Str

The name of a logical container where backups are stored. Backup vaults
are identified by names that are unique to the account used to create
them and the Amazon Web Services Region where they are created.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Backup>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

