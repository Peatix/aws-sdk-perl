# Generated by default/object.tt
package Paws::IoTDeviceAdvisor::SuiteDefinitionInformation;
  use Moose;
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has DefaultDevices => (is => 'ro', isa => 'ArrayRef[Paws::IoTDeviceAdvisor::DeviceUnderTest]', request_name => 'defaultDevices', traits => ['NameInRequest']);
  has IntendedForQualification => (is => 'ro', isa => 'Bool', request_name => 'intendedForQualification', traits => ['NameInRequest']);
  has IsLongDurationTest => (is => 'ro', isa => 'Bool', request_name => 'isLongDurationTest', traits => ['NameInRequest']);
  has Protocol => (is => 'ro', isa => 'Str', request_name => 'protocol', traits => ['NameInRequest']);
  has SuiteDefinitionId => (is => 'ro', isa => 'Str', request_name => 'suiteDefinitionId', traits => ['NameInRequest']);
  has SuiteDefinitionName => (is => 'ro', isa => 'Str', request_name => 'suiteDefinitionName', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::IoTDeviceAdvisor::SuiteDefinitionInformation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::IoTDeviceAdvisor::SuiteDefinitionInformation object:

  $service_obj->Method(Att1 => { CreatedAt => $value, ..., SuiteDefinitionName => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::IoTDeviceAdvisor::SuiteDefinitionInformation object:

  $result = $service_obj->Method(...);
  $result->Att1->CreatedAt

=head1 DESCRIPTION

Information about the suite definition.

=head1 ATTRIBUTES


=head2 CreatedAt => Str

Date (in Unix epoch time) when the test suite was created.


=head2 DefaultDevices => ArrayRef[L<Paws::IoTDeviceAdvisor::DeviceUnderTest>]

Specifies the devices that are under test for the test suite.


=head2 IntendedForQualification => Bool

Specifies if the test suite is intended for qualification.


=head2 IsLongDurationTest => Bool

Verifies if the test suite is a long duration test.


=head2 Protocol => Str

Gets the MQTT protocol that is configured in the suite definition.


=head2 SuiteDefinitionId => Str

Suite definition ID of the test suite.


=head2 SuiteDefinitionName => Str

Suite name of the test suite.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::IoTDeviceAdvisor>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

