# Generated by default/object.tt
package Paws::FraudDetector::TrainingResultV2;
  use Moose;
  has AggregatedVariablesImportanceMetrics => (is => 'ro', isa => 'Paws::FraudDetector::AggregatedVariablesImportanceMetrics', request_name => 'aggregatedVariablesImportanceMetrics', traits => ['NameInRequest']);
  has DataValidationMetrics => (is => 'ro', isa => 'Paws::FraudDetector::DataValidationMetrics', request_name => 'dataValidationMetrics', traits => ['NameInRequest']);
  has TrainingMetricsV2 => (is => 'ro', isa => 'Paws::FraudDetector::TrainingMetricsV2', request_name => 'trainingMetricsV2', traits => ['NameInRequest']);
  has VariableImportanceMetrics => (is => 'ro', isa => 'Paws::FraudDetector::VariableImportanceMetrics', request_name => 'variableImportanceMetrics', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::FraudDetector::TrainingResultV2

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FraudDetector::TrainingResultV2 object:

  $service_obj->Method(Att1 => { AggregatedVariablesImportanceMetrics => $value, ..., VariableImportanceMetrics => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FraudDetector::TrainingResultV2 object:

  $result = $service_obj->Method(...);
  $result->Att1->AggregatedVariablesImportanceMetrics

=head1 DESCRIPTION

The training result details.

=head1 ATTRIBUTES


=head2 AggregatedVariablesImportanceMetrics => L<Paws::FraudDetector::AggregatedVariablesImportanceMetrics>

The variable importance metrics of the aggregated variables.

Account Takeover Insights (ATI) model uses event variables from the
login data you provide to continuously calculate a set of variables
(aggregated variables) based on historical events. For example, your
ATI model might calculate the number of times an user has logged in
using the same IP address. In this case, event variables used to derive
the aggregated variables are C<IP address> and C<user>.


=head2 DataValidationMetrics => L<Paws::FraudDetector::DataValidationMetrics>




=head2 TrainingMetricsV2 => L<Paws::FraudDetector::TrainingMetricsV2>

The training metric details.


=head2 VariableImportanceMetrics => L<Paws::FraudDetector::VariableImportanceMetrics>





=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FraudDetector>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

