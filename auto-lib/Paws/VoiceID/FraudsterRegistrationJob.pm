# Generated by default/object.tt
package Paws::VoiceID::FraudsterRegistrationJob;
  use Moose;
  has CreatedAt => (is => 'ro', isa => 'Str');
  has DataAccessRoleArn => (is => 'ro', isa => 'Str');
  has DomainId => (is => 'ro', isa => 'Str');
  has EndedAt => (is => 'ro', isa => 'Str');
  has FailureDetails => (is => 'ro', isa => 'Paws::VoiceID::FailureDetails');
  has InputDataConfig => (is => 'ro', isa => 'Paws::VoiceID::InputDataConfig');
  has JobId => (is => 'ro', isa => 'Str');
  has JobName => (is => 'ro', isa => 'Str');
  has JobProgress => (is => 'ro', isa => 'Paws::VoiceID::JobProgress');
  has JobStatus => (is => 'ro', isa => 'Str');
  has OutputDataConfig => (is => 'ro', isa => 'Paws::VoiceID::OutputDataConfig');
  has RegistrationConfig => (is => 'ro', isa => 'Paws::VoiceID::RegistrationConfig');

1;

### main pod documentation begin ###

=head1 NAME

Paws::VoiceID::FraudsterRegistrationJob

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::VoiceID::FraudsterRegistrationJob object:

  $service_obj->Method(Att1 => { CreatedAt => $value, ..., RegistrationConfig => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::VoiceID::FraudsterRegistrationJob object:

  $result = $service_obj->Method(...);
  $result->Att1->CreatedAt

=head1 DESCRIPTION

Contains all the information about a fraudster registration job.

=head1 ATTRIBUTES


=head2 CreatedAt => Str

A timestamp of when the fraudster registration job was created.


=head2 DataAccessRoleArn => Str

The IAM role Amazon Resource Name (ARN) that grants Voice ID
permissions to access customer's buckets to read the input manifest
file and write the job output file.


=head2 DomainId => Str

The identifier of the domain that contains the fraudster registration
job.


=head2 EndedAt => Str

A timestamp of when the fraudster registration job ended.


=head2 FailureDetails => L<Paws::VoiceID::FailureDetails>

Contains details that are populated when an entire batch job fails. In
cases of individual registration job failures, the batch job as a whole
doesn't fail; it is completed with a C<JobStatus> of
C<COMPLETED_WITH_ERRORS>. You can use the job output file to identify
the individual registration requests that failed.


=head2 InputDataConfig => L<Paws::VoiceID::InputDataConfig>

The input data config containing an S3 URI for the input manifest file
that contains the list of fraudster registration job requests.


=head2 JobId => Str

The service-generated identifier for the fraudster registration job.


=head2 JobName => Str

The client-provided name for the fraudster registration job.


=head2 JobProgress => L<Paws::VoiceID::JobProgress>

Shows the completed percentage of registration requests listed in the
input file.


=head2 JobStatus => Str

The current status of the fraudster registration job.


=head2 OutputDataConfig => L<Paws::VoiceID::OutputDataConfig>

The output data config containing the S3 location where you want Voice
ID to write your job output file; you must also include a KMS key ID in
order to encrypt the file.


=head2 RegistrationConfig => L<Paws::VoiceID::RegistrationConfig>

The registration config containing details such as the action to take
when a duplicate fraudster is detected, and the similarity threshold to
use for detecting a duplicate fraudster.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::VoiceID>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

