# Generated by default/object.tt
package Paws::Rekognition::RegionOfInterest;
  use Moose;
  has BoundingBox => (is => 'ro', isa => 'Paws::Rekognition::BoundingBox');
  has Polygon => (is => 'ro', isa => 'ArrayRef[Paws::Rekognition::Point]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Rekognition::RegionOfInterest

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Rekognition::RegionOfInterest object:

  $service_obj->Method(Att1 => { BoundingBox => $value, ..., Polygon => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Rekognition::RegionOfInterest object:

  $result = $service_obj->Method(...);
  $result->Att1->BoundingBox

=head1 DESCRIPTION

Specifies a location within the frame that Rekognition checks for
objects of interest such as text, labels, or faces. It uses a
C<BoundingBox> or C<Polygon> to set a region of the screen.

A word, face, or label is included in the region if it is more than
half in that region. If there is more than one region, the word, face,
or label is compared with all regions of the screen. Any object of
interest that is more than half in a region is kept in the results.

=head1 ATTRIBUTES


=head2 BoundingBox => L<Paws::Rekognition::BoundingBox>

The box representing a region of interest on screen.


=head2 Polygon => ArrayRef[L<Paws::Rekognition::Point>]

Specifies a shape made up of up to 10 C<Point> objects to define a
region of interest.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Rekognition>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

