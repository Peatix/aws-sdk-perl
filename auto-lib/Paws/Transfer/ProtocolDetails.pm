# Generated by default/object.tt
package Paws::Transfer::ProtocolDetails;
  use Moose;
  has As2Transports => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has PassiveIp => (is => 'ro', isa => 'Str');
  has SetStatOption => (is => 'ro', isa => 'Str');
  has TlsSessionResumptionMode => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Transfer::ProtocolDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Transfer::ProtocolDetails object:

  $service_obj->Method(Att1 => { As2Transports => $value, ..., TlsSessionResumptionMode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Transfer::ProtocolDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->As2Transports

=head1 DESCRIPTION

The protocol settings that are configured for your server.

=head1 ATTRIBUTES


=head2 As2Transports => ArrayRef[Str|Undef]

Indicates the transport method for the AS2 messages. Currently, only
HTTP is supported.


=head2 PassiveIp => Str

Indicates passive mode, for FTP and FTPS protocols. Enter a single IPv4
address, such as the public IP address of a firewall, router, or load
balancer. For example:

C<aws transfer update-server --protocol-details PassiveIp=0.0.0.0>

Replace C<0.0.0.0> in the example above with the actual IP address you
want to use.

If you change the C<PassiveIp> value, you must stop and then restart
your Transfer Family server for the change to take effect. For details
on using passive mode (PASV) in a NAT environment, see Configuring your
FTPS server behind a firewall or NAT with Transfer Family
(http://aws.amazon.com/blogs/storage/configuring-your-ftps-server-behind-a-firewall-or-nat-with-aws-transfer-family/).

I<Special values>

The C<AUTO> and C<0.0.0.0> are special values for the C<PassiveIp>
parameter. The value C<PassiveIp=AUTO> is assigned by default to FTP
and FTPS type servers. In this case, the server automatically responds
with one of the endpoint IPs within the PASV response.
C<PassiveIp=0.0.0.0> has a more unique application for its usage. For
example, if you have a High Availability (HA) Network Load Balancer
(NLB) environment, where you have 3 subnets, you can only specify a
single IP address using the C<PassiveIp> parameter. This reduces the
effectiveness of having High Availability. In this case, you can
specify C<PassiveIp=0.0.0.0>. This tells the client to use the same IP
address as the Control connection and utilize all AZs for their
connections. Note, however, that not all FTP clients support the
C<PassiveIp=0.0.0.0> response. FileZilla and WinSCP do support it. If
you are using other clients, check to see if your client supports the
C<PassiveIp=0.0.0.0> response.


=head2 SetStatOption => Str

Use the C<SetStatOption> to ignore the error that is generated when the
client attempts to use C<SETSTAT> on a file you are uploading to an S3
bucket.

Some SFTP file transfer clients can attempt to change the attributes of
remote files, including timestamp and permissions, using commands, such
as C<SETSTAT> when uploading the file. However, these commands are not
compatible with object storage systems, such as Amazon S3. Due to this
incompatibility, file uploads from these clients can result in errors
even when the file is otherwise successfully uploaded.

Set the value to C<ENABLE_NO_OP> to have the Transfer Family server
ignore the C<SETSTAT> command, and upload files without needing to make
any changes to your SFTP client. While the C<SetStatOption>
C<ENABLE_NO_OP> setting ignores the error, it does generate a log entry
in Amazon CloudWatch Logs, so you can determine when the client is
making a C<SETSTAT> call.

If you want to preserve the original timestamp for your file, and
modify other file attributes using C<SETSTAT>, you can use Amazon EFS
as backend storage with Transfer Family.


=head2 TlsSessionResumptionMode => Str

A property used with Transfer Family servers that use the FTPS
protocol. TLS Session Resumption provides a mechanism to resume or
share a negotiated secret key between the control and data connection
for an FTPS session. C<TlsSessionResumptionMode> determines whether or
not the server resumes recent, negotiated sessions through a unique
session ID. This property is available during C<CreateServer> and
C<UpdateServer> calls. If a C<TlsSessionResumptionMode> value is not
specified during C<CreateServer>, it is set to C<ENFORCED> by default.

=over

=item *

C<DISABLED>: the server does not process TLS session resumption client
requests and creates a new TLS session for each request.

=item *

C<ENABLED>: the server processes and accepts clients that are
performing TLS session resumption. The server doesn't reject client
data connections that do not perform the TLS session resumption client
processing.

=item *

C<ENFORCED>: the server processes and accepts clients that are
performing TLS session resumption. The server rejects client data
connections that do not perform the TLS session resumption client
processing. Before you set the value to C<ENFORCED>, test your clients.

Not all FTPS clients perform TLS session resumption. So, if you choose
to enforce TLS session resumption, you prevent any connections from
FTPS clients that don't perform the protocol negotiation. To determine
whether or not you can use the C<ENFORCED> value, you need to test your
clients.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Transfer>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

