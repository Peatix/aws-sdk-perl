# Generated by default/object.tt
package Paws::FSX::DataRepositoryAssociation;
  use Moose;
  has AssociationId => (is => 'ro', isa => 'Str');
  has BatchImportMetaDataOnCreate => (is => 'ro', isa => 'Bool');
  has CreationTime => (is => 'ro', isa => 'Str');
  has DataRepositoryPath => (is => 'ro', isa => 'Str');
  has DataRepositorySubdirectories => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has FailureDetails => (is => 'ro', isa => 'Paws::FSX::DataRepositoryFailureDetails');
  has FileCacheId => (is => 'ro', isa => 'Str');
  has FileCachePath => (is => 'ro', isa => 'Str');
  has FileSystemId => (is => 'ro', isa => 'Str');
  has FileSystemPath => (is => 'ro', isa => 'Str');
  has ImportedFileChunkSize => (is => 'ro', isa => 'Int');
  has Lifecycle => (is => 'ro', isa => 'Str');
  has NFS => (is => 'ro', isa => 'Paws::FSX::NFSDataRepositoryConfiguration');
  has ResourceARN => (is => 'ro', isa => 'Str');
  has S3 => (is => 'ro', isa => 'Paws::FSX::S3DataRepositoryConfiguration');
  has Tags => (is => 'ro', isa => 'ArrayRef[Paws::FSX::Tag]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FSX::DataRepositoryAssociation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FSX::DataRepositoryAssociation object:

  $service_obj->Method(Att1 => { AssociationId => $value, ..., Tags => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FSX::DataRepositoryAssociation object:

  $result = $service_obj->Method(...);
  $result->Att1->AssociationId

=head1 DESCRIPTION

The configuration of a data repository association that links an Amazon
FSx for Lustre file system to an Amazon S3 bucket or an Amazon File
Cache resource to an Amazon S3 bucket or an NFS file system. The data
repository association configuration object is returned in the response
of the following operations:

=over

=item *

C<CreateDataRepositoryAssociation>

=item *

C<UpdateDataRepositoryAssociation>

=item *

C<DescribeDataRepositoryAssociations>

=back

Data repository associations are supported on Amazon File Cache
resources and all FSx for Lustre 2.12 and 2.15 file systems, excluding
C<scratch_1> deployment type.

=head1 ATTRIBUTES


=head2 AssociationId => Str

The system-generated, unique ID of the data repository association.


=head2 BatchImportMetaDataOnCreate => Bool

A boolean flag indicating whether an import data repository task to
import metadata should run after the data repository association is
created. The task runs if this flag is set to C<true>.

C<BatchImportMetaDataOnCreate> is not supported for data repositories
linked to an Amazon File Cache resource.


=head2 CreationTime => Str




=head2 DataRepositoryPath => Str

The path to the data repository that will be linked to the cache or
file system.

=over

=item *

For Amazon File Cache, the path can be an NFS data repository that will
be linked to the cache. The path can be in one of two formats:

=over

=item *

If you are not using the C<DataRepositorySubdirectories> parameter, the
path is to an NFS Export directory (or one of its subdirectories) in
the format C<nsf://nfs-domain-name/exportpath>. You can therefore link
a single NFS Export to a single data repository association.

=item *

If you are using the C<DataRepositorySubdirectories> parameter, the
path is the domain name of the NFS file system in the format
C<nfs://filer-domain-name>, which indicates the root of the
subdirectories specified with the C<DataRepositorySubdirectories>
parameter.

=back

=item *

For Amazon File Cache, the path can be an S3 bucket or prefix in the
format C<s3://bucket-name/prefix/> (where C<prefix> is optional).

=item *

For Amazon FSx for Lustre, the path can be an S3 bucket or prefix in
the format C<s3://bucket-name/prefix/> (where C<prefix> is optional).

=back



=head2 DataRepositorySubdirectories => ArrayRef[Str|Undef]

For Amazon File Cache, a list of NFS Exports that will be linked with
an NFS data repository association. All the subdirectories must be on a
single NFS file system. The Export paths are in the format
C</exportpath1>. To use this parameter, you must configure
C<DataRepositoryPath> as the domain name of the NFS file system. The
NFS file system domain name in effect is the root of the
subdirectories. Note that C<DataRepositorySubdirectories> is not
supported for S3 data repositories.


=head2 FailureDetails => L<Paws::FSX::DataRepositoryFailureDetails>




=head2 FileCacheId => Str

The globally unique ID of the Amazon File Cache resource.


=head2 FileCachePath => Str

A path on the Amazon File Cache that points to a high-level directory
(such as C</ns1/>) or subdirectory (such as C</ns1/subdir/>) that will
be mapped 1-1 with C<DataRepositoryPath>. The leading forward slash in
the path is required. Two data repository associations cannot have
overlapping cache paths. For example, if a data repository is
associated with cache path C</ns1/>, then you cannot link another data
repository with cache path C</ns1/ns2>.

This path specifies the directory in your cache where files will be
exported from. This cache directory can be linked to only one data
repository (S3 or NFS) and no other data repository can be linked to
the directory.

The cache path can only be set to root (/) on an NFS DRA when
C<DataRepositorySubdirectories> is specified. If you specify root (/)
as the cache path, you can create only one DRA on the cache.

The cache path cannot be set to root (/) for an S3 DRA.


=head2 FileSystemId => Str




=head2 FileSystemPath => Str

A path on the Amazon FSx for Lustre file system that points to a
high-level directory (such as C</ns1/>) or subdirectory (such as
C</ns1/subdir/>) that will be mapped 1-1 with C<DataRepositoryPath>.
The leading forward slash in the name is required. Two data repository
associations cannot have overlapping file system paths. For example, if
a data repository is associated with file system path C</ns1/>, then
you cannot link another data repository with file system path
C</ns1/ns2>.

This path specifies where in your file system files will be exported
from or imported to. This file system directory can be linked to only
one Amazon S3 bucket, and no other S3 bucket can be linked to the
directory.

If you specify only a forward slash (C</>) as the file system path, you
can link only one data repository to the file system. You can only
specify "/" as the file system path for the first data repository
associated with a file system.


=head2 ImportedFileChunkSize => Int

For files imported from a data repository, this value determines the
stripe count and maximum amount of data per file (in MiB) stored on a
single physical disk. The maximum number of disks that a single file
can be striped across is limited by the total number of disks that make
up the file system or cache.

The default chunk size is 1,024 MiB (1 GiB) and can go as high as
512,000 MiB (500 GiB). Amazon S3 objects have a maximum size of 5 TB.


=head2 Lifecycle => Str

Describes the state of a data repository association. The lifecycle can
have the following values:

=over

=item *

C<CREATING> - The data repository association between the file system
or cache and the data repository is being created. The data repository
is unavailable.

=item *

C<AVAILABLE> - The data repository association is available for use.

=item *

C<MISCONFIGURED> - The data repository association is misconfigured.
Until the configuration is corrected, automatic import and automatic
export will not work (only for Amazon FSx for Lustre).

=item *

C<UPDATING> - The data repository association is undergoing a customer
initiated update that might affect its availability.

=item *

C<DELETING> - The data repository association is undergoing a customer
initiated deletion.

=item *

C<FAILED> - The data repository association is in a terminal state that
cannot be recovered.

=back



=head2 NFS => L<Paws::FSX::NFSDataRepositoryConfiguration>

The configuration for an NFS data repository linked to an Amazon File
Cache resource with a data repository association.


=head2 ResourceARN => Str




=head2 S3 => L<Paws::FSX::S3DataRepositoryConfiguration>

The configuration for an Amazon S3 data repository linked to an Amazon
FSx for Lustre file system with a data repository association.


=head2 Tags => ArrayRef[L<Paws::FSX::Tag>]





=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FSX>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

