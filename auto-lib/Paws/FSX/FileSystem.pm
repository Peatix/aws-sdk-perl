# Generated by default/object.tt
package Paws::FSX::FileSystem;
  use Moose;
  has AdministrativeActions => (is => 'ro', isa => 'ArrayRef[Paws::FSX::AdministrativeAction]');
  has CreationTime => (is => 'ro', isa => 'Str');
  has DNSName => (is => 'ro', isa => 'Str');
  has FailureDetails => (is => 'ro', isa => 'Paws::FSX::FileSystemFailureDetails');
  has FileSystemId => (is => 'ro', isa => 'Str');
  has FileSystemType => (is => 'ro', isa => 'Str');
  has FileSystemTypeVersion => (is => 'ro', isa => 'Str');
  has KmsKeyId => (is => 'ro', isa => 'Str');
  has Lifecycle => (is => 'ro', isa => 'Str');
  has LustreConfiguration => (is => 'ro', isa => 'Paws::FSX::LustreFileSystemConfiguration');
  has NetworkInterfaceIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has OntapConfiguration => (is => 'ro', isa => 'Paws::FSX::OntapFileSystemConfiguration');
  has OpenZFSConfiguration => (is => 'ro', isa => 'Paws::FSX::OpenZFSFileSystemConfiguration');
  has OwnerId => (is => 'ro', isa => 'Str');
  has ResourceARN => (is => 'ro', isa => 'Str');
  has StorageCapacity => (is => 'ro', isa => 'Int');
  has StorageType => (is => 'ro', isa => 'Str');
  has SubnetIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Tags => (is => 'ro', isa => 'ArrayRef[Paws::FSX::Tag]');
  has VpcId => (is => 'ro', isa => 'Str');
  has WindowsConfiguration => (is => 'ro', isa => 'Paws::FSX::WindowsFileSystemConfiguration');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FSX::FileSystem

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FSX::FileSystem object:

  $service_obj->Method(Att1 => { AdministrativeActions => $value, ..., WindowsConfiguration => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FSX::FileSystem object:

  $result = $service_obj->Method(...);
  $result->Att1->AdministrativeActions

=head1 DESCRIPTION

A description of a specific Amazon FSx file system.

=head1 ATTRIBUTES


=head2 AdministrativeActions => ArrayRef[L<Paws::FSX::AdministrativeAction>]

A list of administrative actions for the file system that are in
process or waiting to be processed. Administrative actions describe
changes to the Amazon FSx system that you have initiated using the
C<UpdateFileSystem> operation.


=head2 CreationTime => Str

The time that the file system was created, in seconds (since
1970-01-01T00:00:00Z), also known as Unix time.


=head2 DNSName => Str

The Domain Name System (DNS) name for the file system.


=head2 FailureDetails => L<Paws::FSX::FileSystemFailureDetails>




=head2 FileSystemId => Str

The system-generated, unique 17-digit ID of the file system.


=head2 FileSystemType => Str

The type of Amazon FSx file system, which can be C<LUSTRE>, C<WINDOWS>,
C<ONTAP>, or C<OPENZFS>.


=head2 FileSystemTypeVersion => Str

The Lustre version of the Amazon FSx for Lustre file system, which can
be C<2.10>, C<2.12>, or C<2.15>.


=head2 KmsKeyId => Str

The ID of the Key Management Service (KMS) key used to encrypt Amazon
FSx file system data. Used as follows with Amazon FSx file system
types:

=over

=item *

Amazon FSx for Lustre C<PERSISTENT_1> and C<PERSISTENT_2> deployment
types only.

C<SCRATCH_1> and C<SCRATCH_2> types are encrypted using the Amazon FSx
service KMS key for your account.

=item *

Amazon FSx for NetApp ONTAP

=item *

Amazon FSx for OpenZFS

=item *

Amazon FSx for Windows File Server

=back



=head2 Lifecycle => Str

The lifecycle status of the file system. The following are the possible
values and what they mean:

=over

=item *

C<AVAILABLE> - The file system is in a healthy state, and is reachable
and available for use.

=item *

C<CREATING> - Amazon FSx is creating the new file system.

=item *

C<DELETING> - Amazon FSx is deleting an existing file system.

=item *

C<FAILED> - An existing file system has experienced an unrecoverable
failure. When creating a new file system, Amazon FSx was unable to
create the file system.

=item *

C<MISCONFIGURED> - The file system is in a failed but recoverable
state.

=item *

C<MISCONFIGURED_UNAVAILABLE> - (Amazon FSx for Windows File Server
only) The file system is currently unavailable due to a change in your
Active Directory configuration.

=item *

C<UPDATING> - The file system is undergoing a customer-initiated
update.

=back



=head2 LustreConfiguration => L<Paws::FSX::LustreFileSystemConfiguration>




=head2 NetworkInterfaceIds => ArrayRef[Str|Undef]

The IDs of the elastic network interfaces from which a specific file
system is accessible. The elastic network interface is automatically
created in the same virtual private cloud (VPC) that the Amazon FSx
file system was created in. For more information, see Elastic Network
Interfaces
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html) in
the I<Amazon EC2 User Guide.>

For an Amazon FSx for Windows File Server file system, you can have one
network interface ID. For an Amazon FSx for Lustre file system, you can
have more than one.


=head2 OntapConfiguration => L<Paws::FSX::OntapFileSystemConfiguration>

The configuration for this Amazon FSx for NetApp ONTAP file system.


=head2 OpenZFSConfiguration => L<Paws::FSX::OpenZFSFileSystemConfiguration>

The configuration for this Amazon FSx for OpenZFS file system.


=head2 OwnerId => Str

The Amazon Web Services account that created the file system. If the
file system was created by a user in IAM Identity Center, the Amazon
Web Services account to which the IAM user belongs is the owner.


=head2 ResourceARN => Str

The Amazon Resource Name (ARN) of the file system resource.


=head2 StorageCapacity => Int

The storage capacity of the file system in gibibytes (GiB).

Amazon FSx responds with an HTTP status code 400 (Bad Request) if the
value of C<StorageCapacity> is outside of the minimum or maximum
values.


=head2 StorageType => Str

The type of storage the file system is using. If set to C<SSD>, the
file system uses solid state drive storage. If set to C<HDD>, the file
system uses hard disk drive storage.


=head2 SubnetIds => ArrayRef[Str|Undef]

Specifies the IDs of the subnets that the file system is accessible
from. For the Amazon FSx Windows and ONTAP C<MULTI_AZ_1> file system
deployment type, there are two subnet IDs, one for the preferred file
server and one for the standby file server. The preferred file server
subnet identified in the C<PreferredSubnetID> property. All other file
systems have only one subnet ID.

For FSx for Lustre file systems, and Single-AZ Windows file systems,
this is the ID of the subnet that contains the file system's endpoint.
For C<MULTI_AZ_1> Windows and ONTAP file systems, the file system
endpoint is available in the C<PreferredSubnetID>.


=head2 Tags => ArrayRef[L<Paws::FSX::Tag>]

The tags to associate with the file system. For more information, see
Tagging your Amazon FSx resources
(https://docs.aws.amazon.com/fsx/latest/LustreGuide/tag-resources.html)
in the I<Amazon FSx for Lustre User Guide>.


=head2 VpcId => Str

The ID of the primary virtual private cloud (VPC) for the file system.


=head2 WindowsConfiguration => L<Paws::FSX::WindowsFileSystemConfiguration>

The configuration for this Amazon FSx for Windows File Server file
system.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FSX>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

