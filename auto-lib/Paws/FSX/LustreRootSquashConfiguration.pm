# Generated by default/object.tt
package Paws::FSX::LustreRootSquashConfiguration;
  use Moose;
  has NoSquashNids => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has RootSquash => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FSX::LustreRootSquashConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FSX::LustreRootSquashConfiguration object:

  $service_obj->Method(Att1 => { NoSquashNids => $value, ..., RootSquash => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FSX::LustreRootSquashConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->NoSquashNids

=head1 DESCRIPTION

The configuration for Lustre root squash used to restrict root-level
access from clients that try to access your FSx for Lustre file system
as root. Use the C<RootSquash> parameter to enable root squash. To
learn more about Lustre root squash, see Lustre root squash
(https://docs.aws.amazon.com/fsx/latest/LustreGuide/root-squash.html).

You can also use the C<NoSquashNids> parameter to provide an array of
clients who are not affected by the root squash setting. These clients
will access the file system as root, with unrestricted privileges.

=head1 ATTRIBUTES


=head2 NoSquashNids => ArrayRef[Str|Undef]

When root squash is enabled, you can optionally specify an array of
NIDs of clients for which root squash does not apply. A client NID is a
Lustre Network Identifier used to uniquely identify a client. You can
specify the NID as either a single address or a range of addresses:

=over

=item *

A single address is described in standard Lustre NID format by
specifying the clientE<rsquo>s IP address followed by the Lustre
network ID (for example, C<10.0.1.6@tcp>).

=item *

An address range is described using a dash to separate the range (for
example, C<10.0.[2-10].[1-255]@tcp>).

=back



=head2 RootSquash => Str

You enable root squash by setting a user ID (UID) and group ID (GID)
for the file system in the format C<UID:GID> (for example,
C<365534:65534>). The UID and GID values can range from C<0> to
C<4294967294>:

=over

=item *

A non-zero value for UID and GID enables root squash. The UID and GID
values can be different, but each must be a non-zero value.

=item *

A value of C<0> (zero) for UID and GID indicates root, and therefore
disables root squash.

=back

When root squash is enabled, the user ID and group ID of a root user
accessing the file system are re-mapped to the UID and GID you provide.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FSX>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

