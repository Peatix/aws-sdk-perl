# Generated by default/object.tt
package Paws::FSX::OpenZFSVolumeConfiguration;
  use Moose;
  has CopyStrategy => (is => 'ro', isa => 'Str');
  has CopyTagsToSnapshots => (is => 'ro', isa => 'Bool');
  has DataCompressionType => (is => 'ro', isa => 'Str');
  has DeleteClonedVolumes => (is => 'ro', isa => 'Bool');
  has DeleteIntermediateData => (is => 'ro', isa => 'Bool');
  has DeleteIntermediateSnaphots => (is => 'ro', isa => 'Bool');
  has DestinationSnapshot => (is => 'ro', isa => 'Str');
  has NfsExports => (is => 'ro', isa => 'ArrayRef[Paws::FSX::OpenZFSNfsExport]');
  has OriginSnapshot => (is => 'ro', isa => 'Paws::FSX::OpenZFSOriginSnapshotConfiguration');
  has ParentVolumeId => (is => 'ro', isa => 'Str');
  has ReadOnly => (is => 'ro', isa => 'Bool');
  has RecordSizeKiB => (is => 'ro', isa => 'Int');
  has RestoreToSnapshot => (is => 'ro', isa => 'Str');
  has SourceSnapshotARN => (is => 'ro', isa => 'Str');
  has StorageCapacityQuotaGiB => (is => 'ro', isa => 'Int');
  has StorageCapacityReservationGiB => (is => 'ro', isa => 'Int');
  has UserAndGroupQuotas => (is => 'ro', isa => 'ArrayRef[Paws::FSX::OpenZFSUserOrGroupQuota]');
  has VolumePath => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FSX::OpenZFSVolumeConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FSX::OpenZFSVolumeConfiguration object:

  $service_obj->Method(Att1 => { CopyStrategy => $value, ..., VolumePath => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FSX::OpenZFSVolumeConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->CopyStrategy

=head1 DESCRIPTION

The configuration of an Amazon FSx for OpenZFS volume.

=head1 ATTRIBUTES


=head2 CopyStrategy => Str

Specifies the strategy used when copying data from the snapshot to the
new volume.

=over

=item *

C<CLONE> - The new volume references the data in the origin snapshot.
Cloning a snapshot is faster than copying data from the snapshot to a
new volume and doesn't consume disk throughput. However, the origin
snapshot can't be deleted if there is a volume using its copied data.

=item *

C<FULL_COPY> - Copies all data from the snapshot to the new volume.

Specify this option to create the volume from a snapshot on another FSx
for OpenZFS file system.

=back

The C<INCREMENTAL_COPY> option is only for updating an existing volume
by using a snapshot from another FSx for OpenZFS file system. For more
information, see CopySnapshotAndUpdateVolume
(https://docs.aws.amazon.com/fsx/latest/APIReference/API_CopySnapshotAndUpdateVolume.html).


=head2 CopyTagsToSnapshots => Bool

A Boolean value indicating whether tags for the volume should be copied
to snapshots. This value defaults to C<false>. If it's set to C<true>,
all tags for the volume are copied to snapshots where the user doesn't
specify tags. If this value is C<true> and you specify one or more
tags, only the specified tags are copied to snapshots. If you specify
one or more tags when creating the snapshot, no tags are copied from
the volume, regardless of this value.


=head2 DataCompressionType => Str

Specifies the method used to compress the data on the volume. The
compression type is C<NONE> by default.

=over

=item *

C<NONE> - Doesn't compress the data on the volume. C<NONE> is the
default.

=item *

C<ZSTD> - Compresses the data in the volume using the Zstandard (ZSTD)
compression algorithm. Compared to LZ4, Z-Standard provides a better
compression ratio to minimize on-disk storage utilization.

=item *

C<LZ4> - Compresses the data in the volume using the LZ4 compression
algorithm. Compared to Z-Standard, LZ4 is less compute-intensive and
delivers higher write throughput speeds.

=back



=head2 DeleteClonedVolumes => Bool

A Boolean value indicating whether dependent clone volumes created from
intermediate snapshots should be deleted when a volume is restored from
snapshot.


=head2 DeleteIntermediateData => Bool

A Boolean value indicating whether snapshot data that differs between
the current state and the specified snapshot should be overwritten when
a volume is restored from a snapshot.


=head2 DeleteIntermediateSnaphots => Bool

A Boolean value indicating whether snapshots between the current state
and the specified snapshot should be deleted when a volume is restored
from snapshot.


=head2 DestinationSnapshot => Str

The ID of the snapshot that's being copied or was most recently copied
to the destination volume.


=head2 NfsExports => ArrayRef[L<Paws::FSX::OpenZFSNfsExport>]

The configuration object for mounting a Network File System (NFS) file
system.


=head2 OriginSnapshot => L<Paws::FSX::OpenZFSOriginSnapshotConfiguration>

The configuration object that specifies the snapshot to use as the
origin of the data for the volume.


=head2 ParentVolumeId => Str

The ID of the parent volume.


=head2 ReadOnly => Bool

A Boolean value indicating whether the volume is read-only.


=head2 RecordSizeKiB => Int

The record size of an OpenZFS volume, in kibibytes (KiB). Valid values
are 4, 8, 16, 32, 64, 128, 256, 512, or 1024 KiB. The default is 128
KiB. Most workloads should use the default record size. For guidance on
when to set a custom record size, see the I<Amazon FSx for OpenZFS User
Guide>.


=head2 RestoreToSnapshot => Str

Specifies the ID of the snapshot to which the volume was restored.


=head2 SourceSnapshotARN => Str




=head2 StorageCapacityQuotaGiB => Int

The maximum amount of storage in gibibytes (GiB) that the volume can
use from its parent. You can specify a quota larger than the storage on
the parent volume.


=head2 StorageCapacityReservationGiB => Int

The amount of storage in gibibytes (GiB) to reserve from the parent
volume. You can't reserve more storage than the parent volume has
reserved.


=head2 UserAndGroupQuotas => ArrayRef[L<Paws::FSX::OpenZFSUserOrGroupQuota>]

An object specifying how much storage users or groups can use on the
volume.


=head2 VolumePath => Str

The path to the volume from the root volume. For example,
C<fsx/parentVolume/volume1>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FSX>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

