# Generated by default/object.tt
package Paws::FSX::UpdateOpenZFSVolumeConfiguration;
  use Moose;
  has DataCompressionType => (is => 'ro', isa => 'Str');
  has NfsExports => (is => 'ro', isa => 'ArrayRef[Paws::FSX::OpenZFSNfsExport]');
  has ReadOnly => (is => 'ro', isa => 'Bool');
  has RecordSizeKiB => (is => 'ro', isa => 'Int');
  has StorageCapacityQuotaGiB => (is => 'ro', isa => 'Int');
  has StorageCapacityReservationGiB => (is => 'ro', isa => 'Int');
  has UserAndGroupQuotas => (is => 'ro', isa => 'ArrayRef[Paws::FSX::OpenZFSUserOrGroupQuota]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::FSX::UpdateOpenZFSVolumeConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::FSX::UpdateOpenZFSVolumeConfiguration object:

  $service_obj->Method(Att1 => { DataCompressionType => $value, ..., UserAndGroupQuotas => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::FSX::UpdateOpenZFSVolumeConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->DataCompressionType

=head1 DESCRIPTION

Used to specify changes to the OpenZFS configuration for the volume
that you are updating.

=head1 ATTRIBUTES


=head2 DataCompressionType => Str

Specifies the method used to compress the data on the volume. The
compression type is C<NONE> by default.

=over

=item *

C<NONE> - Doesn't compress the data on the volume. C<NONE> is the
default.

=item *

C<ZSTD> - Compresses the data in the volume using the Zstandard (ZSTD)
compression algorithm. Compared to LZ4, Z-Standard provides a better
compression ratio to minimize on-disk storage utilization.

=item *

C<LZ4> - Compresses the data in the volume using the LZ4 compression
algorithm. Compared to Z-Standard, LZ4 is less compute-intensive and
delivers higher write throughput speeds.

=back



=head2 NfsExports => ArrayRef[L<Paws::FSX::OpenZFSNfsExport>]

The configuration object for mounting a Network File System (NFS) file
system.


=head2 ReadOnly => Bool

A Boolean value indicating whether the volume is read-only.


=head2 RecordSizeKiB => Int

Specifies the record size of an OpenZFS volume, in kibibytes (KiB).
Valid values are 4, 8, 16, 32, 64, 128, 256, 512, or 1024 KiB. The
default is 128 KiB. Most workloads should use the default record size.
Database workflows can benefit from a smaller record size, while
streaming workflows can benefit from a larger record size. For
additional guidance on when to set a custom record size, see Tips for
maximizing performance
(https://docs.aws.amazon.com/fsx/latest/OpenZFSGuide/performance.html#performance-tips-zfs)
in the I<Amazon FSx for OpenZFS User Guide>.


=head2 StorageCapacityQuotaGiB => Int

The maximum amount of storage in gibibytes (GiB) that the volume can
use from its parent. You can specify a quota larger than the storage on
the parent volume. You can specify a value of C<-1> to unset a volume's
storage capacity quota.


=head2 StorageCapacityReservationGiB => Int

The amount of storage in gibibytes (GiB) to reserve from the parent
volume. You can't reserve more storage than the parent volume has
reserved. You can specify a value of C<-1> to unset a volume's storage
capacity reservation.


=head2 UserAndGroupQuotas => ArrayRef[L<Paws::FSX::OpenZFSUserOrGroupQuota>]

An object specifying how much storage users or groups can use on the
volume.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::FSX>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

