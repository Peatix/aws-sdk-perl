# Generated by default/object.tt
package Paws::Kendra::UserContext;
  use Moose;
  has DataSourceGroups => (is => 'ro', isa => 'ArrayRef[Paws::Kendra::DataSourceGroup]');
  has Groups => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Token => (is => 'ro', isa => 'Str');
  has UserId => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Kendra::UserContext

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Kendra::UserContext object:

  $service_obj->Method(Att1 => { DataSourceGroups => $value, ..., UserId => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Kendra::UserContext object:

  $result = $service_obj->Method(...);
  $result->Att1->DataSourceGroups

=head1 DESCRIPTION

Provides information about the user context for an Amazon Kendra index.

User context filtering is a kind of personalized search with the
benefit of controlling access to documents. For example, not all teams
that search the company portal for information should access top-secret
company documents, nor are these documents relevant to all users. Only
specific users or groups of teams given access to top-secret documents
should see these documents in their search results.

You provide one of the following:

=over

=item *

User token

=item *

User ID, the groups the user belongs to, and any data sources the
groups can access.

=back

If you provide both, an exception is thrown.

If you're using an Amazon Kendra Gen AI Enterprise Edition index, you
can use C<UserId>, C<Groups>, and C<DataSourceGroups> to filter
content. If you set the C<UserId> to a particular user ID, it also
includes all public documents.

Amazon Kendra Gen AI Enterprise Edition indices don't support token
based document filtering. If you're using an Amazon Kendra Gen AI
Enterprise Edition index, Amazon Kendra returns a
C<ValidationException> error if the C<Token> field has a non-null
value.

=head1 ATTRIBUTES


=head2 DataSourceGroups => ArrayRef[L<Paws::Kendra::DataSourceGroup>]

The list of data source groups you want to filter search results based
on groups' access to documents in that data source.


=head2 Groups => ArrayRef[Str|Undef]

The list of groups you want to filter search results based on the
groups' access to documents.


=head2 Token => Str

The user context token for filtering search results for a user. It must
be a JWT or a JSON token.


=head2 UserId => Str

The identifier of the user you want to filter search results based on
their access to documents.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Kendra>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

