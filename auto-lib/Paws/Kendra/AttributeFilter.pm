# Generated by default/object.tt
package Paws::Kendra::AttributeFilter;
  use Moose;
  has AndAllFilters => (is => 'ro', isa => 'ArrayRef[Paws::Kendra::AttributeFilter]');
  has ContainsAll => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has ContainsAny => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has EqualsTo => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has GreaterThan => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has GreaterThanOrEquals => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has LessThan => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has LessThanOrEquals => (is => 'ro', isa => 'Paws::Kendra::DocumentAttribute');
  has NotFilter => (is => 'ro', isa => 'Paws::Kendra::AttributeFilter');
  has OrAllFilters => (is => 'ro', isa => 'ArrayRef[Paws::Kendra::AttributeFilter]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Kendra::AttributeFilter

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Kendra::AttributeFilter object:

  $service_obj->Method(Att1 => { AndAllFilters => $value, ..., OrAllFilters => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Kendra::AttributeFilter object:

  $result = $service_obj->Method(...);
  $result->Att1->AndAllFilters

=head1 DESCRIPTION

Filters the search results based on document attributes or fields.

You can filter results using attributes for your particular documents.
The attributes must exist in your index. For example, if your documents
include the custom attribute "Department", you can filter documents
that belong to the "HR" department. You would use the C<EqualsTo>
operation to filter results or documents with "Department" equals to
"HR".

You can use C<AndAllFilters> and C<OrAllFilters> in combination with
each other or with other operations such as C<EqualsTo>. For example:

C<AndAllFilters>

=over

=item *

C<EqualsTo>: "Department", "HR"

=item *

C<OrAllFilters>

=over

=item *

C<ContainsAny>: "Project Name", ["new hires", "new hiring"]

=back

=back

This example filters results or documents that belong to the HR
department C<AND> belong to projects that contain "new hires" C<OR>
"new hiring" in the project name (must use C<ContainAny> with
C<StringListValue>). This example is filtering with a depth of 2.

You cannot filter more than a depth of 2, otherwise you receive a
C<ValidationException> exception with the message "AttributeFilter
cannot have a depth of more than 2." Also, if you use more than 10
attribute filters in a given list for C<AndAllFilters> or
C<OrAllFilters>, you receive a C<ValidationException> with the message
"AttributeFilter cannot have a length of more than 10".

For examples of using C<AttributeFilter>, see Using document attributes
to filter search results
(https://docs.aws.amazon.com/kendra/latest/dg/filtering.html#search-filtering).

=head1 ATTRIBUTES


=head2 AndAllFilters => ArrayRef[L<Paws::Kendra::AttributeFilter>]

Performs a logical C<AND> operation on all filters that you specify.


=head2 ContainsAll => L<Paws::Kendra::DocumentAttribute>

Returns true when a document contains all of the specified document
attributes/fields. This filter is only applicable to StringListValue
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html).


=head2 ContainsAny => L<Paws::Kendra::DocumentAttribute>

Returns true when a document contains any of the specified document
attributes/fields. This filter is only applicable to StringListValue
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html).


=head2 EqualsTo => L<Paws::Kendra::DocumentAttribute>

Performs an equals operation on document attributes/fields and their
values.


=head2 GreaterThan => L<Paws::Kendra::DocumentAttribute>

Performs a greater than operation on document attributes/fields and
their values. Use with the document attribute type
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html)
C<Date> or C<Long>.


=head2 GreaterThanOrEquals => L<Paws::Kendra::DocumentAttribute>

Performs a greater or equals than operation on document
attributes/fields and their values. Use with the document attribute
type
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html)
C<Date> or C<Long>.


=head2 LessThan => L<Paws::Kendra::DocumentAttribute>

Performs a less than operation on document attributes/fields and their
values. Use with the document attribute type
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html)
C<Date> or C<Long>.


=head2 LessThanOrEquals => L<Paws::Kendra::DocumentAttribute>

Performs a less than or equals operation on document attributes/fields
and their values. Use with the document attribute type
(https://docs.aws.amazon.com/kendra/latest/APIReference/API_DocumentAttributeValue.html)
C<Date> or C<Long>.


=head2 NotFilter => L<Paws::Kendra::AttributeFilter>

Performs a logical C<NOT> operation on all filters that you specify.


=head2 OrAllFilters => ArrayRef[L<Paws::Kendra::AttributeFilter>]

Performs a logical C<OR> operation on all filters that you specify.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Kendra>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

