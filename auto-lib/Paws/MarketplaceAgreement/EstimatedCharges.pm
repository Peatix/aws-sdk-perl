# Generated by default/object.tt
package Paws::MarketplaceAgreement::EstimatedCharges;
  use Moose;
  has AgreementValue => (is => 'ro', isa => 'Str', request_name => 'agreementValue', traits => ['NameInRequest']);
  has CurrencyCode => (is => 'ro', isa => 'Str', request_name => 'currencyCode', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MarketplaceAgreement::EstimatedCharges

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MarketplaceAgreement::EstimatedCharges object:

  $service_obj->Method(Att1 => { AgreementValue => $value, ..., CurrencyCode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MarketplaceAgreement::EstimatedCharges object:

  $result = $service_obj->Method(...);
  $result->Att1->AgreementValue

=head1 DESCRIPTION

Estimated cost of the agreement.

=head1 ATTRIBUTES


=head2 AgreementValue => Str

The total known amount customer has to pay across the lifecycle of the
agreement.

This is the total contract value if accepted terms contain
C<ConfigurableUpfrontPricingTerm> or C<FixedUpfrontPricingTerm>. In the
case of pure contract pricing, this will be the total value of the
contract. In the case of contracts with consumption pricing, this will
only include the committed value and not include any overages that
occur.

If the accepted terms contain C<PaymentScheduleTerm>, it will be the
total payment schedule amount. This occurs when flexible payment
schedule is used, and is the sum of all invoice charges in the payment
schedule.

In case a customer has amended an agreement, by purchasing more units
of any dimension, this will include both the original cost as well as
the added cost incurred due to addition of new units.

This is C<0> if the accepted terms contain C<UsageBasedPricingTerm>
without C<ConfigurableUpfrontPricingTerm> or C<RecurringPaymentTerm>.
This occurs for usage-based pricing (such as SaaS metered or
AMI/container hourly or monthly), because the exact usage is not known
upfront.


=head2 CurrencyCode => Str

Defines the currency code for the charge.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MarketplaceAgreement>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

