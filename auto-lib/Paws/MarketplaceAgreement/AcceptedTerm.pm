# Generated by default/object.tt
package Paws::MarketplaceAgreement::AcceptedTerm;
  use Moose;
  has ByolPricingTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::ByolPricingTerm', request_name => 'byolPricingTerm', traits => ['NameInRequest']);
  has ConfigurableUpfrontPricingTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::ConfigurableUpfrontPricingTerm', request_name => 'configurableUpfrontPricingTerm', traits => ['NameInRequest']);
  has FixedUpfrontPricingTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::FixedUpfrontPricingTerm', request_name => 'fixedUpfrontPricingTerm', traits => ['NameInRequest']);
  has FreeTrialPricingTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::FreeTrialPricingTerm', request_name => 'freeTrialPricingTerm', traits => ['NameInRequest']);
  has LegalTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::LegalTerm', request_name => 'legalTerm', traits => ['NameInRequest']);
  has PaymentScheduleTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::PaymentScheduleTerm', request_name => 'paymentScheduleTerm', traits => ['NameInRequest']);
  has RecurringPaymentTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::RecurringPaymentTerm', request_name => 'recurringPaymentTerm', traits => ['NameInRequest']);
  has RenewalTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::RenewalTerm', request_name => 'renewalTerm', traits => ['NameInRequest']);
  has SupportTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::SupportTerm', request_name => 'supportTerm', traits => ['NameInRequest']);
  has UsageBasedPricingTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::UsageBasedPricingTerm', request_name => 'usageBasedPricingTerm', traits => ['NameInRequest']);
  has ValidityTerm => (is => 'ro', isa => 'Paws::MarketplaceAgreement::ValidityTerm', request_name => 'validityTerm', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MarketplaceAgreement::AcceptedTerm

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MarketplaceAgreement::AcceptedTerm object:

  $service_obj->Method(Att1 => { ByolPricingTerm => $value, ..., ValidityTerm => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MarketplaceAgreement::AcceptedTerm object:

  $result = $service_obj->Method(...);
  $result->Att1->ByolPricingTerm

=head1 DESCRIPTION

A subset of terms proposed by the proposer, which have been accepted by
the acceptor as part of agreement creation.

=head1 ATTRIBUTES


=head2 ByolPricingTerm => L<Paws::MarketplaceAgreement::ByolPricingTerm>

Enables you and your customers to move your existing agreements to AWS
Marketplace. The customer won't be charged for product usage in AWS
Marketplace because they already paid for the product outside of AWS
Marketplace.


=head2 ConfigurableUpfrontPricingTerm => L<Paws::MarketplaceAgreement::ConfigurableUpfrontPricingTerm>

Defines a prepaid payment model that allows buyers to configure the
entitlements they want to purchase and the duration.


=head2 FixedUpfrontPricingTerm => L<Paws::MarketplaceAgreement::FixedUpfrontPricingTerm>

Defines a pre-paid pricing model where the customers are charged a
fixed upfront amount.


=head2 FreeTrialPricingTerm => L<Paws::MarketplaceAgreement::FreeTrialPricingTerm>

Defines a short-term free pricing model where the buyers arenE<rsquo>t
charged anything within a specified limit.


=head2 LegalTerm => L<Paws::MarketplaceAgreement::LegalTerm>

Defines the list of text agreements proposed to the acceptors. An
example is the end user license agreement (EULA).


=head2 PaymentScheduleTerm => L<Paws::MarketplaceAgreement::PaymentScheduleTerm>

Defines an installment-based pricing model where customers are charged
a fixed price on different dates during the agreement validity period.
This is used most commonly for flexible payment schedule pricing.


=head2 RecurringPaymentTerm => L<Paws::MarketplaceAgreement::RecurringPaymentTerm>

Defines a pricing model where customers are charged a fixed recurring
price at the end of each billing period.


=head2 RenewalTerm => L<Paws::MarketplaceAgreement::RenewalTerm>

Defines that on graceful expiration of the agreement (when the
agreement ends on its pre-defined end date), a new agreement will be
created using the accepted terms on the existing agreement. In other
words, the agreement will be renewed. Presence of C<RenewalTerm> in the
offer document means that auto-renewal is allowed. Buyers will have the
option to accept or decline auto-renewal at the offer
acceptance/agreement creation. Buyers can also change this flag from
C<True> to C<False> or C<False> to C<True> at anytime during the
agreement's lifecycle.


=head2 SupportTerm => L<Paws::MarketplaceAgreement::SupportTerm>

Defines the customer support available for the acceptors when they
purchase the software.


=head2 UsageBasedPricingTerm => L<Paws::MarketplaceAgreement::UsageBasedPricingTerm>

Defines a usage-based pricing model (typically, pay-as-you-go pricing),
where the customers are charged based on product usage.


=head2 ValidityTerm => L<Paws::MarketplaceAgreement::ValidityTerm>

Defines the conditions that will keep an agreement created from this
offer valid.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MarketplaceAgreement>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

