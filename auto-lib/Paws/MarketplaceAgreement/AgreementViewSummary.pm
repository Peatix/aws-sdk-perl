# Generated by default/object.tt
package Paws::MarketplaceAgreement::AgreementViewSummary;
  use Moose;
  has AcceptanceTime => (is => 'ro', isa => 'Str', request_name => 'acceptanceTime', traits => ['NameInRequest']);
  has Acceptor => (is => 'ro', isa => 'Paws::MarketplaceAgreement::Acceptor', request_name => 'acceptor', traits => ['NameInRequest']);
  has AgreementId => (is => 'ro', isa => 'Str', request_name => 'agreementId', traits => ['NameInRequest']);
  has AgreementType => (is => 'ro', isa => 'Str', request_name => 'agreementType', traits => ['NameInRequest']);
  has EndTime => (is => 'ro', isa => 'Str', request_name => 'endTime', traits => ['NameInRequest']);
  has ProposalSummary => (is => 'ro', isa => 'Paws::MarketplaceAgreement::ProposalSummary', request_name => 'proposalSummary', traits => ['NameInRequest']);
  has Proposer => (is => 'ro', isa => 'Paws::MarketplaceAgreement::Proposer', request_name => 'proposer', traits => ['NameInRequest']);
  has StartTime => (is => 'ro', isa => 'Str', request_name => 'startTime', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MarketplaceAgreement::AgreementViewSummary

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MarketplaceAgreement::AgreementViewSummary object:

  $service_obj->Method(Att1 => { AcceptanceTime => $value, ..., Status => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MarketplaceAgreement::AgreementViewSummary object:

  $result = $service_obj->Method(...);
  $result->Att1->AcceptanceTime

=head1 DESCRIPTION

A summary of the agreement, including top-level attributes (for
example, the agreement ID, version, proposer, and acceptor).

=head1 ATTRIBUTES


=head2 AcceptanceTime => Str

The date and time that the agreement was accepted.


=head2 Acceptor => L<Paws::MarketplaceAgreement::Acceptor>

Details of the party accepting the agreement terms. This is commonly
the buyer for C<PurchaseAgreement.>


=head2 AgreementId => Str

The unique identifier of the agreement.


=head2 AgreementType => Str

The type of agreement. Values are C<PurchaseAgreement> or
C<VendorInsightsAgreement>.


=head2 EndTime => Str

The date and time when the agreement ends. The field is C<null> for
pay-as-you-go agreements, which donE<rsquo>t have end dates.


=head2 ProposalSummary => L<Paws::MarketplaceAgreement::ProposalSummary>

A summary of the proposal


=head2 Proposer => L<Paws::MarketplaceAgreement::Proposer>

Details of the party proposing the agreement terms, most commonly the
seller for C<PurchaseAgreement>.


=head2 StartTime => Str

The date and time when the agreement starts.


=head2 Status => Str

The current status of the agreement.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MarketplaceAgreement>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

