# Generated by default/object.tt
package Paws::CodeDeploy::ZonalConfig;
  use Moose;
  has FirstZoneMonitorDurationInSeconds => (is => 'ro', isa => 'Int', request_name => 'firstZoneMonitorDurationInSeconds', traits => ['NameInRequest']);
  has MinimumHealthyHostsPerZone => (is => 'ro', isa => 'Paws::CodeDeploy::MinimumHealthyHostsPerZone', request_name => 'minimumHealthyHostsPerZone', traits => ['NameInRequest']);
  has MonitorDurationInSeconds => (is => 'ro', isa => 'Int', request_name => 'monitorDurationInSeconds', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::CodeDeploy::ZonalConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CodeDeploy::ZonalConfig object:

  $service_obj->Method(Att1 => { FirstZoneMonitorDurationInSeconds => $value, ..., MonitorDurationInSeconds => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CodeDeploy::ZonalConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->FirstZoneMonitorDurationInSeconds

=head1 DESCRIPTION

Configure the C<ZonalConfig> object if you want CodeDeploy to deploy
your application to one Availability Zone
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-availability-zones)
at a time, within an Amazon Web Services Region. By deploying to one
Availability Zone at a time, you can expose your deployment to a
progressively larger audience as confidence in the deployment's
performance and viability grows. If you don't configure the
C<ZonalConfig> object, CodeDeploy deploys your application to a random
selection of hosts across a Region.

For more information about the zonal configuration feature, see zonal
configuration
(https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-create.html#zonal-config)
in the I<CodeDeploy User Guide>.

=head1 ATTRIBUTES


=head2 FirstZoneMonitorDurationInSeconds => Int

The period of time, in seconds, that CodeDeploy must wait after
completing a deployment to the I<first> Availability Zone. CodeDeploy
will wait this amount of time before starting a deployment to the
second Availability Zone. You might set this option if you want to
allow extra bake time for the first Availability Zone. If you don't
specify a value for C<firstZoneMonitorDurationInSeconds>, then
CodeDeploy uses the C<monitorDurationInSeconds> value for the first
Availability Zone.

For more information about the zonal configuration feature, see zonal
configuration
(https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-create.html#zonal-config)
in the I<CodeDeploy User Guide>.


=head2 MinimumHealthyHostsPerZone => L<Paws::CodeDeploy::MinimumHealthyHostsPerZone>

The number or percentage of instances that must remain available per
Availability Zone during a deployment. This option works in conjunction
with the C<MinimumHealthyHosts> option. For more information, see About
the minimum number of healthy hosts per Availability Zone
(https://docs.aws.amazon.com/codedeploy/latest/userguide/instances-health.html#minimum-healthy-hosts-az)
in the I<CodeDeploy User Guide>.

If you don't specify the C<minimumHealthyHostsPerZone> option, then
CodeDeploy uses a default value of C<0> percent.

For more information about the zonal configuration feature, see zonal
configuration
(https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-create.html#zonal-config)
in the I<CodeDeploy User Guide>.


=head2 MonitorDurationInSeconds => Int

The period of time, in seconds, that CodeDeploy must wait after
completing a deployment to an Availability Zone. CodeDeploy will wait
this amount of time before starting a deployment to the next
Availability Zone. Consider adding a monitor duration to give the
deployment some time to prove itself (or 'bake') in one Availability
Zone before it is released in the next zone. If you don't specify a
C<monitorDurationInSeconds>, CodeDeploy starts deploying to the next
Availability Zone immediately.

For more information about the zonal configuration feature, see zonal
configuration
(https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations-create.html#zonal-config)
in the I<CodeDeploy User Guide>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CodeDeploy>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

