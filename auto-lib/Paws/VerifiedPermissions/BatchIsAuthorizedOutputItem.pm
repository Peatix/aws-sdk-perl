# Generated by default/object.tt
package Paws::VerifiedPermissions::BatchIsAuthorizedOutputItem;
  use Moose;
  has Decision => (is => 'ro', isa => 'Str', request_name => 'decision', traits => ['NameInRequest'], required => 1);
  has DeterminingPolicies => (is => 'ro', isa => 'ArrayRef[Paws::VerifiedPermissions::DeterminingPolicyItem]', request_name => 'determiningPolicies', traits => ['NameInRequest'], required => 1);
  has Errors => (is => 'ro', isa => 'ArrayRef[Paws::VerifiedPermissions::EvaluationErrorItem]', request_name => 'errors', traits => ['NameInRequest'], required => 1);
  has Request => (is => 'ro', isa => 'Paws::VerifiedPermissions::BatchIsAuthorizedInputItem', request_name => 'request', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::VerifiedPermissions::BatchIsAuthorizedOutputItem

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::VerifiedPermissions::BatchIsAuthorizedOutputItem object:

  $service_obj->Method(Att1 => { Decision => $value, ..., Request => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::VerifiedPermissions::BatchIsAuthorizedOutputItem object:

  $result = $service_obj->Method(...);
  $result->Att1->Decision

=head1 DESCRIPTION

The decision, based on policy evaluation, from an individual
authorization request in a C<BatchIsAuthorized> API request.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Decision => Str

An authorization decision that indicates if the authorization request
should be allowed or denied.


=head2 B<REQUIRED> DeterminingPolicies => ArrayRef[L<Paws::VerifiedPermissions::DeterminingPolicyItem>]

The list of determining policies used to make the authorization
decision. For example, if there are two matching policies, where one is
a forbid and the other is a permit, then the forbid policy will be the
determining policy. In the case of multiple matching permit policies
then there would be multiple determining policies. In the case that no
policies match, and hence the response is DENY, there would be no
determining policies.


=head2 B<REQUIRED> Errors => ArrayRef[L<Paws::VerifiedPermissions::EvaluationErrorItem>]

Errors that occurred while making an authorization decision. For
example, a policy might reference an entity or attribute that doesn't
exist in the request.


=head2 B<REQUIRED> Request => L<Paws::VerifiedPermissions::BatchIsAuthorizedInputItem>

The authorization request that initiated the decision.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::VerifiedPermissions>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

