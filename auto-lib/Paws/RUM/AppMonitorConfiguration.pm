# Generated by default/object.tt
package Paws::RUM::AppMonitorConfiguration;
  use Moose;
  has AllowCookies => (is => 'ro', isa => 'Bool');
  has EnableXRay => (is => 'ro', isa => 'Bool');
  has ExcludedPages => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has FavoritePages => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has GuestRoleArn => (is => 'ro', isa => 'Str');
  has IdentityPoolId => (is => 'ro', isa => 'Str');
  has IncludedPages => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has SessionSampleRate => (is => 'ro', isa => 'Num');
  has Telemetries => (is => 'ro', isa => 'ArrayRef[Str|Undef]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::RUM::AppMonitorConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::RUM::AppMonitorConfiguration object:

  $service_obj->Method(Att1 => { AllowCookies => $value, ..., Telemetries => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::RUM::AppMonitorConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->AllowCookies

=head1 DESCRIPTION

This structure contains much of the configuration data for the app
monitor.

=head1 ATTRIBUTES


=head2 AllowCookies => Bool

If you set this to C<true>, the RUM web client sets two cookies, a
session cookie and a user cookie. The cookies allow the RUM web client
to collect data relating to the number of users an application has and
the behavior of the application across a sequence of events. Cookies
are stored in the top-level domain of the current page.


=head2 EnableXRay => Bool

If you set this to C<true>, RUM enables X-Ray tracing for the user
sessions that RUM samples. RUM adds an X-Ray trace header to allowed
HTTP requests. It also records an X-Ray segment for allowed HTTP
requests. You can see traces and segments from these user sessions in
the X-Ray console and the CloudWatch ServiceLens console. For more
information, see What is X-Ray?
(https://docs.aws.amazon.com/xray/latest/devguide/aws-xray.html)


=head2 ExcludedPages => ArrayRef[Str|Undef]

A list of URLs in your website or application to exclude from RUM data
collection.

You can't include both C<ExcludedPages> and C<IncludedPages> in the
same operation.


=head2 FavoritePages => ArrayRef[Str|Undef]

A list of pages in your application that are to be displayed with a
"favorite" icon in the CloudWatch RUM console.


=head2 GuestRoleArn => Str

The ARN of the guest IAM role that is attached to the Amazon Cognito
identity pool that is used to authorize the sending of data to RUM.

It is possible that an app monitor does not have a value for
C<GuestRoleArn>. For example, this can happen when you use the console
to create an app monitor and you allow CloudWatch RUM to create a new
identity pool for Authorization. In this case, C<GuestRoleArn> is not
present in the GetAppMonitor
(https://docs.aws.amazon.com/cloudwatchrum/latest/APIReference/API_GetAppMonitor.html)
response because it is not stored by the service.

If this issue affects you, you can take one of the following steps:

=over

=item *

Use the Cloud Development Kit (CDK) to create an identity pool and the
associated IAM role, and use that for your app monitor.

=item *

Make a separate GetIdentityPoolRoles
(https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetIdentityPoolRoles.html)
call to Amazon Cognito to retrieve the C<GuestRoleArn>.

=back



=head2 IdentityPoolId => Str

The ID of the Amazon Cognito identity pool that is used to authorize
the sending of data to RUM.


=head2 IncludedPages => ArrayRef[Str|Undef]

If this app monitor is to collect data from only certain pages in your
application, this structure lists those pages.

You can't include both C<ExcludedPages> and C<IncludedPages> in the
same operation.


=head2 SessionSampleRate => Num

Specifies the portion of user sessions to use for RUM data collection.
Choosing a higher portion gives you more data but also incurs more
costs.

The range for this value is 0 to 1 inclusive. Setting this to 1 means
that 100% of user sessions are sampled, and setting it to 0.1 means
that 10% of user sessions are sampled.

If you omit this parameter, the default of 0.1 is used, and 10% of
sessions will be sampled.


=head2 Telemetries => ArrayRef[Str|Undef]

An array that lists the types of telemetry data that this app monitor
is to collect.

=over

=item *

C<errors> indicates that RUM collects data about unhandled JavaScript
errors raised by your application.

=item *

C<performance> indicates that RUM collects performance data about how
your application and its resources are loaded and rendered. This
includes Core Web Vitals.

=item *

C<http> indicates that RUM collects data about HTTP errors thrown by
your application.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::RUM>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

