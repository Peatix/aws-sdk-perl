# Generated by default/object.tt
package Paws::RUM::MetricDefinitionRequest;
  use Moose;
  has DimensionKeys => (is => 'ro', isa => 'Paws::RUM::DimensionKeysMap');
  has EventPattern => (is => 'ro', isa => 'Str');
  has Name => (is => 'ro', isa => 'Str', required => 1);
  has Namespace => (is => 'ro', isa => 'Str');
  has UnitLabel => (is => 'ro', isa => 'Str');
  has ValueKey => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::RUM::MetricDefinitionRequest

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::RUM::MetricDefinitionRequest object:

  $service_obj->Method(Att1 => { DimensionKeys => $value, ..., ValueKey => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::RUM::MetricDefinitionRequest object:

  $result = $service_obj->Method(...);
  $result->Att1->DimensionKeys

=head1 DESCRIPTION

Use this structure to define one extended metric or custom metric that
RUM will send to CloudWatch or CloudWatch Evidently. For more
information, see Custom metrics and extended metrics that you can send
to CloudWatch and CloudWatch Evidently
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-custom-and-extended-metrics.html).

This structure is validated differently for extended metrics and custom
metrics. For extended metrics that are sent to the C<AWS/RUM>
namespace, the following validations apply:

=over

=item *

The C<Namespace> parameter must be omitted or set to C<AWS/RUM>.

=item *

Only certain combinations of values for C<Name>, C<ValueKey>, and
C<EventPattern> are valid. In addition to what is displayed in the
following list, the C<EventPattern> can also include information used
by the C<DimensionKeys> field.

=over

=item *

If C<Name> is C<PerformanceNavigationDuration>, then C<ValueKey>must be
C<event_details.duration> and the C<EventPattern> must include
C<{"event_type":["com.amazon.rum.performance_navigation_event"]}>

=item *

If C<Name> is C<PerformanceResourceDuration>, then C<ValueKey>must be
C<event_details.duration> and the C<EventPattern> must include
C<{"event_type":["com.amazon.rum.performance_resource_event"]}>

=item *

If C<Name> is C<NavigationSatisfiedTransaction>, then C<ValueKey>must
be null and the C<EventPattern> must include C<{ "event_type":
["com.amazon.rum.performance_navigation_event"], "event_details": {
"duration": [{ "numeric": ["E<gt>",2000] }] } }>

=item *

If C<Name> is C<NavigationToleratedTransaction>, then C<ValueKey>must
be null and the C<EventPattern> must include C<{ "event_type":
["com.amazon.rum.performance_navigation_event"], "event_details": {
"duration": [{ "numeric": ["E<gt>=",2000,"E<lt>"8000] }] } }>

=item *

If C<Name> is C<NavigationFrustratedTransaction>, then C<ValueKey>must
be null and the C<EventPattern> must include C<{ "event_type":
["com.amazon.rum.performance_navigation_event"], "event_details": {
"duration": [{ "numeric": ["E<gt>=",8000] }] } }>

=item *

If C<Name> is C<WebVitalsCumulativeLayoutShift>, then C<ValueKey>must
be C<event_details.value> and the C<EventPattern> must include
C<{"event_type":["com.amazon.rum.cumulative_layout_shift_event"]}>

=item *

If C<Name> is C<WebVitalsFirstInputDelay>, then C<ValueKey>must be
C<event_details.value> and the C<EventPattern> must include
C<{"event_type":["com.amazon.rum.first_input_delay_event"]}>

=item *

If C<Name> is C<WebVitalsLargestContentfulPaint>, then C<ValueKey>must
be C<event_details.value> and the C<EventPattern> must include
C<{"event_type":["com.amazon.rum.largest_contentful_paint_event"]}>

=item *

If C<Name> is C<JsErrorCount>, then C<ValueKey>must be null and the
C<EventPattern> must include
C<{"event_type":["com.amazon.rum.js_error_event"]}>

=item *

If C<Name> is C<HttpErrorCount>, then C<ValueKey>must be null and the
C<EventPattern> must include
C<{"event_type":["com.amazon.rum.http_event"]}>

=item *

If C<Name> is C<SessionCount>, then C<ValueKey>must be null and the
C<EventPattern> must include
C<{"event_type":["com.amazon.rum.session_start_event"]}>

=item *

If C<Name> is C<PageViewCount>, then C<ValueKey>must be null and the
C<EventPattern> must include
C<{"event_type":["com.amazon.rum.page_view_event"]}>

=item *

If C<Name> is C<Http4xxCount>, then C<ValueKey>must be null and the
C<EventPattern> must include C<{"event_type":
["com.amazon.rum.http_event"],"event_details":{"response":{"status":[{"numeric":["E<gt>=",400,"E<lt>",500]}]}}}
}>

=item *

If C<Name> is C<Http5xxCount>, then C<ValueKey>must be null and the
C<EventPattern> must include C<{"event_type":
["com.amazon.rum.http_event"],"event_details":{"response":{"status":[{"numeric":["E<gt>=",500,"E<lt>=",599]}]}}}
}>

=back

=back

For custom metrics, the following validation rules apply:

=over

=item *

The namespace can't be omitted and can't be C<AWS/RUM>. You can use the
C<AWS/RUM> namespace only for extended metrics.

=item *

All dimensions listed in the C<DimensionKeys> field must be present in
the value of C<EventPattern>.

=item *

The values that you specify for C<ValueKey>, C<EventPattern>, and
C<DimensionKeys> must be fields in RUM events, so all first-level keys
in these fields must be one of the keys in the list later in this
section.

=item *

If you set a value for C<EventPattern>, it must be a JSON object.

=item *

For every non-empty C<event_details>, there must be a non-empty
C<event_type>.

=item *

If C<EventPattern> contains an C<event_details> field, it must also
contain an C<event_type>. For every built-in C<event_type> that you
use, you must use a value for C<event_details> that corresponds to that
C<event_type>. For information about event details that correspond to
event types, see RUM event details
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-RUM-datacollected.html#CloudWatch-RUM-datacollected-eventDetails).

=item *

In C<EventPattern>, any JSON array must contain only one value.

=back

Valid key values for first-level keys in the C<ValueKey>,
C<EventPattern>, and C<DimensionKeys> fields:

=over

=item *

C<account_id>

=item *

C<application_Id>

=item *

C<application_version>

=item *

C<application_name>

=item *

C<batch_id>

=item *

C<event_details>

=item *

C<event_id>

=item *

C<event_interaction>

=item *

C<event_timestamp>

=item *

C<event_type>

=item *

C<event_version>

=item *

C<log_stream>

=item *

C<metadata>

=item *

C<sessionId>

=item *

C<user_details>

=item *

C<userId>

=back


=head1 ATTRIBUTES


=head2 DimensionKeys => L<Paws::RUM::DimensionKeysMap>

Use this field only if you are sending the metric to CloudWatch.

This field is a map of field paths to dimension names. It defines the
dimensions to associate with this metric in CloudWatch. For extended
metrics, valid values for the entries in this field are the following:

=over

=item *

C<"metadata.pageId": "PageId">

=item *

C<"metadata.browserName": "BrowserName">

=item *

C<"metadata.deviceType": "DeviceType">

=item *

C<"metadata.osName": "OSName">

=item *

C<"metadata.countryCode": "CountryCode">

=item *

C<"event_details.fileType": "FileType">

=back

For both extended metrics and custom metrics, all dimensions listed in
this field must also be included in C<EventPattern>.


=head2 EventPattern => Str

The pattern that defines the metric, specified as a JSON object. RUM
checks events that happen in a user's session against the pattern, and
events that match the pattern are sent to the metric destination.

When you define extended metrics, the metric definition is not valid if
C<EventPattern> is omitted.

Example event patterns:

=over

=item *

C<'{ "event_type": ["com.amazon.rum.js_error_event"], "metadata": {
"browserName": [ "Chrome", "Safari" ], } }'>

=item *

C<'{ "event_type": ["com.amazon.rum.performance_navigation_event"],
"metadata": { "browserName": [ "Chrome", "Firefox" ] },
"event_details": { "duration": [{ "numeric": [ "E<lt>", 2000 ] }] } }'>

=item *

C<'{ "event_type": ["com.amazon.rum.performance_navigation_event"],
"metadata": { "browserName": [ "Chrome", "Safari" ], "countryCode": [
"US" ] }, "event_details": { "duration": [{ "numeric": [ "E<gt>=",
2000, "E<lt>", 8000 ] }] } }'>

=back

If the metrics destination is C<CloudWatch> and the event also matches
a value in C<DimensionKeys>, then the metric is published with the
specified dimensions.


=head2 B<REQUIRED> Name => Str

The name for the metric that is defined in this structure. For custom
metrics, you can specify any name that you like. For extended metrics,
valid values are the following:

=over

=item *

C<PerformanceNavigationDuration>

=item *

C<PerformanceResourceDuration>

=item *

C<NavigationSatisfiedTransaction>

=item *

C<NavigationToleratedTransaction>

=item *

C<NavigationFrustratedTransaction>

=item *

C<WebVitalsCumulativeLayoutShift>

=item *

C<WebVitalsFirstInputDelay>

=item *

C<WebVitalsLargestContentfulPaint>

=item *

C<JsErrorCount>

=item *

C<HttpErrorCount>

=item *

C<SessionCount>

=back



=head2 Namespace => Str

If this structure is for a custom metric instead of an extended
metrics, use this parameter to define the metric namespace for that
custom metric. Do not specify this parameter if this structure is for
an extended metric.

You cannot use any string that starts with C<AWS/> for your namespace.


=head2 UnitLabel => Str

The CloudWatch metric unit to use for this metric. If you omit this
field, the metric is recorded with no unit.


=head2 ValueKey => Str

The field within the event object that the metric value is sourced
from.

If you omit this field, a hardcoded value of 1 is pushed as the metric
value. This is useful if you want to count the number of events that
the filter catches.

If this metric is sent to CloudWatch Evidently, this field will be
passed to Evidently raw. Evidently will handle data extraction from the
event.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::RUM>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

