# Generated by default/object.tt
package Paws::GeoPlaces::StreetComponents;
  use Moose;
  has BaseName => (is => 'ro', isa => 'Str');
  has Direction => (is => 'ro', isa => 'Str');
  has Language => (is => 'ro', isa => 'Str');
  has Prefix => (is => 'ro', isa => 'Str');
  has Suffix => (is => 'ro', isa => 'Str');
  has Type => (is => 'ro', isa => 'Str');
  has TypePlacement => (is => 'ro', isa => 'Str');
  has TypeSeparator => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoPlaces::StreetComponents

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoPlaces::StreetComponents object:

  $service_obj->Method(Att1 => { BaseName => $value, ..., TypeSeparator => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoPlaces::StreetComponents object:

  $result = $service_obj->Method(...);
  $result->Att1->BaseName

=head1 DESCRIPTION

Components of a street.

=head1 ATTRIBUTES


=head2 BaseName => Str

Base name part of the street name.

Example: Younge from the E<ldquo>Younge street".


=head2 Direction => Str

Indicates the official directional identifiers assigned to highways.


=head2 Language => Str

A BCP 47 (https://en.wikipedia.org/wiki/IETF_language_tag) compliant
language codes for the results to be rendered in. If there is no data
for the result in the requested language, data will be returned in the
default language for the entry.


=head2 Prefix => Str

A prefix is a directional identifier that precedes, but is not included
in, the base name of a road.

Example: E for East.


=head2 Suffix => Str

A suffix is a directional identifier that follows, but is not included
in, the base name of a road.

Example W for West.


=head2 Type => Str

Street type part of the street name.

Example: C<E<ldquo>avenue">.


=head2 TypePlacement => Str

Defines if the street type is before or after the base name.


=head2 TypeSeparator => Str

What character(s) separates the string from its type.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoPlaces>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

