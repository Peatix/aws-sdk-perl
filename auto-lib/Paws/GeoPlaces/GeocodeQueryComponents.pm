# Generated by default/object.tt
package Paws::GeoPlaces::GeocodeQueryComponents;
  use Moose;
  has AddressNumber => (is => 'ro', isa => 'Str');
  has Country => (is => 'ro', isa => 'Str');
  has District => (is => 'ro', isa => 'Str');
  has Locality => (is => 'ro', isa => 'Str');
  has PostalCode => (is => 'ro', isa => 'Str');
  has Region => (is => 'ro', isa => 'Str');
  has Street => (is => 'ro', isa => 'Str');
  has SubRegion => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoPlaces::GeocodeQueryComponents

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoPlaces::GeocodeQueryComponents object:

  $service_obj->Method(Att1 => { AddressNumber => $value, ..., SubRegion => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoPlaces::GeocodeQueryComponents object:

  $result = $service_obj->Method(...);
  $result->Att1->AddressNumber

=head1 DESCRIPTION

A structured free text query allows you to search for places by the
name or text representation of specific properties of the place.

=head1 ATTRIBUTES


=head2 AddressNumber => Str

The house number or address results should have.


=head2 Country => Str

The alpha-2 or alpha-3 character code for the country that the results
will be present in.


=head2 District => Str

The district or division of a city the results should be present in.


=head2 Locality => Str

City or locality results should be present in.

Example: C<Vancouver>.


=head2 PostalCode => Str

An alphanumeric string included in a postal address to facilitate mail
sorting, such as post code, postcode, or ZIP code for which the result
should posses.


=head2 Region => Str

The region or state results should be to be present in.

Example: C<North Rhine-Westphalia>.


=head2 Street => Str

The name of the street results should be present in.


=head2 SubRegion => Str

The sub-region or county for which results should be present in.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoPlaces>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

