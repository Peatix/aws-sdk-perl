# Generated by default/object.tt
package Paws::ApplicationAutoScaling::PredictiveScalingMetricSpecification;
  use Moose;
  has CustomizedCapacityMetricSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification');
  has CustomizedLoadMetricSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification');
  has CustomizedScalingMetricSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification');
  has PredefinedLoadMetricSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingPredefinedLoadMetricSpecification');
  has PredefinedMetricPairSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingPredefinedMetricPairSpecification');
  has PredefinedScalingMetricSpecification => (is => 'ro', isa => 'Paws::ApplicationAutoScaling::PredictiveScalingPredefinedScalingMetricSpecification');
  has TargetValue => (is => 'ro', isa => 'Num', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ApplicationAutoScaling::PredictiveScalingMetricSpecification

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ApplicationAutoScaling::PredictiveScalingMetricSpecification object:

  $service_obj->Method(Att1 => { CustomizedCapacityMetricSpecification => $value, ..., TargetValue => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ApplicationAutoScaling::PredictiveScalingMetricSpecification object:

  $result = $service_obj->Method(...);
  $result->Att1->CustomizedCapacityMetricSpecification

=head1 DESCRIPTION

This structure specifies the metrics and target utilization settings
for a predictive scaling policy.

You must specify either a metric pair, or a load metric and a scaling
metric individually. Specifying a metric pair instead of individual
metrics provides a simpler way to configure metrics for a scaling
policy. You choose the metric pair, and the policy automatically knows
the correct sum and average statistics to use for the load metric and
the scaling metric.

=head1 ATTRIBUTES


=head2 CustomizedCapacityMetricSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification>

The customized capacity metric specification.


=head2 CustomizedLoadMetricSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification>

The customized load metric specification.


=head2 CustomizedScalingMetricSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingCustomizedMetricSpecification>

The customized scaling metric specification.


=head2 PredefinedLoadMetricSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingPredefinedLoadMetricSpecification>

The predefined load metric specification.


=head2 PredefinedMetricPairSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingPredefinedMetricPairSpecification>

The predefined metric pair specification that determines the
appropriate scaling metric and load metric to use.


=head2 PredefinedScalingMetricSpecification => L<Paws::ApplicationAutoScaling::PredictiveScalingPredefinedScalingMetricSpecification>

The predefined scaling metric specification.


=head2 B<REQUIRED> TargetValue => Num

Specifies the target utilization.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ApplicationAutoScaling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

