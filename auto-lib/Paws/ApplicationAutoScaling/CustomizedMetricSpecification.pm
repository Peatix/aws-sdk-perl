# Generated by default/object.tt
package Paws::ApplicationAutoScaling::CustomizedMetricSpecification;
  use Moose;
  has Dimensions => (is => 'ro', isa => 'ArrayRef[Paws::ApplicationAutoScaling::MetricDimension]');
  has MetricName => (is => 'ro', isa => 'Str');
  has Metrics => (is => 'ro', isa => 'ArrayRef[Paws::ApplicationAutoScaling::TargetTrackingMetricDataQuery]');
  has Namespace => (is => 'ro', isa => 'Str');
  has Statistic => (is => 'ro', isa => 'Str');
  has Unit => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::ApplicationAutoScaling::CustomizedMetricSpecification

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ApplicationAutoScaling::CustomizedMetricSpecification object:

  $service_obj->Method(Att1 => { Dimensions => $value, ..., Unit => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ApplicationAutoScaling::CustomizedMetricSpecification object:

  $result = $service_obj->Method(...);
  $result->Att1->Dimensions

=head1 DESCRIPTION

Represents a CloudWatch metric of your choosing for a target tracking
scaling policy to use with Application Auto Scaling.

For information about the available metrics for a service, see Amazon
Web Services services that publish CloudWatch metrics
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-services-cloudwatch-metrics.html)
in the I<Amazon CloudWatch User Guide>.

To create your customized metric specification:

=over

=item *

Add values for each required parameter from CloudWatch. You can use an
existing metric, or a new metric that you create. To use your own
metric, you must first publish the metric to CloudWatch. For more
information, see Publish custom metrics
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html)
in the I<Amazon CloudWatch User Guide>.

=item *

Choose a metric that changes proportionally with capacity. The value of
the metric should increase or decrease in inverse proportion to the
number of capacity units. That is, the value of the metric should
decrease when capacity increases, and increase when capacity decreases.

=back

For more information about the CloudWatch terminology below, see Amazon
CloudWatch concepts
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html)
in the I<Amazon CloudWatch User Guide>.

=head1 ATTRIBUTES


=head2 Dimensions => ArrayRef[L<Paws::ApplicationAutoScaling::MetricDimension>]

The dimensions of the metric.

Conditional: If you published your metric with dimensions, you must
specify the same dimensions in your scaling policy.


=head2 MetricName => Str

The name of the metric. To get the exact metric name, namespace, and
dimensions, inspect the Metric
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html)
object that's returned by a call to ListMetrics
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).


=head2 Metrics => ArrayRef[L<Paws::ApplicationAutoScaling::TargetTrackingMetricDataQuery>]

The metrics to include in the target tracking scaling policy, as a
metric data query. This can include both raw metric and metric math
expressions.


=head2 Namespace => Str

The namespace of the metric.


=head2 Statistic => Str

The statistic of the metric.


=head2 Unit => Str

The unit of the metric. For a complete list of the units that
CloudWatch supports, see the MetricDatum
(https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html)
data type in the I<Amazon CloudWatch API Reference>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ApplicationAutoScaling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

