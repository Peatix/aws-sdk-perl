# Generated by default/object.tt
package Paws::ApplicationAutoScaling::StepScalingPolicyConfiguration;
  use Moose;
  has AdjustmentType => (is => 'ro', isa => 'Str');
  has Cooldown => (is => 'ro', isa => 'Int');
  has MetricAggregationType => (is => 'ro', isa => 'Str');
  has MinAdjustmentMagnitude => (is => 'ro', isa => 'Int');
  has StepAdjustments => (is => 'ro', isa => 'ArrayRef[Paws::ApplicationAutoScaling::StepAdjustment]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::ApplicationAutoScaling::StepScalingPolicyConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ApplicationAutoScaling::StepScalingPolicyConfiguration object:

  $service_obj->Method(Att1 => { AdjustmentType => $value, ..., StepAdjustments => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ApplicationAutoScaling::StepScalingPolicyConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->AdjustmentType

=head1 DESCRIPTION

Represents a step scaling policy configuration to use with Application
Auto Scaling.

For more information, see Step scaling policies
(https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html)
in the I<Application Auto Scaling User Guide>.

=head1 ATTRIBUTES


=head2 AdjustmentType => Str

Specifies how the C<ScalingAdjustment> value in a StepAdjustment
(https://docs.aws.amazon.com/autoscaling/application/APIReference/API_StepAdjustment.html)
is interpreted (for example, an absolute number or a percentage). The
valid values are C<ChangeInCapacity>, C<ExactCapacity>, and
C<PercentChangeInCapacity>.

C<AdjustmentType> is required if you are adding a new step scaling
policy configuration.


=head2 Cooldown => Int

The amount of time, in seconds, to wait for a previous scaling activity
to take effect. If not specified, the default value is 300. For more
information, see Cooldown period
(https://docs.aws.amazon.com/autoscaling/application/userguide/step-scaling-policy-overview.html#step-scaling-cooldown)
in the I<Application Auto Scaling User Guide>.


=head2 MetricAggregationType => Str

The aggregation type for the CloudWatch metrics. Valid values are
C<Minimum>, C<Maximum>, and C<Average>. If the aggregation type is
null, the value is treated as C<Average>.


=head2 MinAdjustmentMagnitude => Int

The minimum value to scale by when the adjustment type is
C<PercentChangeInCapacity>. For example, suppose that you create a step
scaling policy to scale out an Amazon ECS service by 25 percent and you
specify a C<MinAdjustmentMagnitude> of 2. If the service has 4 tasks
and the scaling policy is performed, 25 percent of 4 is 1. However,
because you specified a C<MinAdjustmentMagnitude> of 2, Application
Auto Scaling scales out the service by 2 tasks.


=head2 StepAdjustments => ArrayRef[L<Paws::ApplicationAutoScaling::StepAdjustment>]

A set of adjustments that enable you to scale based on the size of the
alarm breach.

At least one step adjustment is required if you are adding a new step
scaling policy configuration.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ApplicationAutoScaling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

