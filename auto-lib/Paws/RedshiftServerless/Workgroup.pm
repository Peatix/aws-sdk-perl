# Generated by default/object.tt
package Paws::RedshiftServerless::Workgroup;
  use Moose;
  has BaseCapacity => (is => 'ro', isa => 'Int', request_name => 'baseCapacity', traits => ['NameInRequest']);
  has ConfigParameters => (is => 'ro', isa => 'ArrayRef[Paws::RedshiftServerless::ConfigParameter]', request_name => 'configParameters', traits => ['NameInRequest']);
  has CreationDate => (is => 'ro', isa => 'Str', request_name => 'creationDate', traits => ['NameInRequest']);
  has CrossAccountVpcs => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'crossAccountVpcs', traits => ['NameInRequest']);
  has CustomDomainCertificateArn => (is => 'ro', isa => 'Str', request_name => 'customDomainCertificateArn', traits => ['NameInRequest']);
  has CustomDomainCertificateExpiryTime => (is => 'ro', isa => 'Str', request_name => 'customDomainCertificateExpiryTime', traits => ['NameInRequest']);
  has CustomDomainName => (is => 'ro', isa => 'Str', request_name => 'customDomainName', traits => ['NameInRequest']);
  has Endpoint => (is => 'ro', isa => 'Paws::RedshiftServerless::Endpoint', request_name => 'endpoint', traits => ['NameInRequest']);
  has EnhancedVpcRouting => (is => 'ro', isa => 'Bool', request_name => 'enhancedVpcRouting', traits => ['NameInRequest']);
  has IpAddressType => (is => 'ro', isa => 'Str', request_name => 'ipAddressType', traits => ['NameInRequest']);
  has MaxCapacity => (is => 'ro', isa => 'Int', request_name => 'maxCapacity', traits => ['NameInRequest']);
  has NamespaceName => (is => 'ro', isa => 'Str', request_name => 'namespaceName', traits => ['NameInRequest']);
  has PatchVersion => (is => 'ro', isa => 'Str', request_name => 'patchVersion', traits => ['NameInRequest']);
  has PendingTrackName => (is => 'ro', isa => 'Str', request_name => 'pendingTrackName', traits => ['NameInRequest']);
  has Port => (is => 'ro', isa => 'Int', request_name => 'port', traits => ['NameInRequest']);
  has PricePerformanceTarget => (is => 'ro', isa => 'Paws::RedshiftServerless::PerformanceTarget', request_name => 'pricePerformanceTarget', traits => ['NameInRequest']);
  has PubliclyAccessible => (is => 'ro', isa => 'Bool', request_name => 'publiclyAccessible', traits => ['NameInRequest']);
  has SecurityGroupIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'securityGroupIds', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has SubnetIds => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'subnetIds', traits => ['NameInRequest']);
  has TrackName => (is => 'ro', isa => 'Str', request_name => 'trackName', traits => ['NameInRequest']);
  has WorkgroupArn => (is => 'ro', isa => 'Str', request_name => 'workgroupArn', traits => ['NameInRequest']);
  has WorkgroupId => (is => 'ro', isa => 'Str', request_name => 'workgroupId', traits => ['NameInRequest']);
  has WorkgroupName => (is => 'ro', isa => 'Str', request_name => 'workgroupName', traits => ['NameInRequest']);
  has WorkgroupVersion => (is => 'ro', isa => 'Str', request_name => 'workgroupVersion', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::RedshiftServerless::Workgroup

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::RedshiftServerless::Workgroup object:

  $service_obj->Method(Att1 => { BaseCapacity => $value, ..., WorkgroupVersion => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::RedshiftServerless::Workgroup object:

  $result = $service_obj->Method(...);
  $result->Att1->BaseCapacity

=head1 DESCRIPTION

The collection of computing resources from which an endpoint is
created.

=head1 ATTRIBUTES


=head2 BaseCapacity => Int

The base data warehouse capacity of the workgroup in Redshift
Processing Units (RPUs).


=head2 ConfigParameters => ArrayRef[L<Paws::RedshiftServerless::ConfigParameter>]

An array of parameters to set for advanced control over a database. The
options are C<auto_mv>, C<datestyle>,
C<enable_case_sensitive_identifier>, C<enable_user_activity_logging>,
C<query_group>, C<search_path>, C<require_ssl>, C<use_fips_ssl>, and
query monitoring metrics that let you define performance boundaries.
For more information about query monitoring rules and available
metrics, see Query monitoring metrics for Amazon Redshift Serverless
(https://docs.aws.amazon.com/redshift/latest/dg/cm-c-wlm-query-monitoring-rules.html#cm-c-wlm-query-monitoring-metrics-serverless).


=head2 CreationDate => Str

The creation date of the workgroup.


=head2 CrossAccountVpcs => ArrayRef[Str|Undef]

A list of VPCs. Each entry is the unique identifier of a virtual
private cloud with access to Amazon Redshift Serverless. If all of the
VPCs for the grantee are allowed, it shows an asterisk.


=head2 CustomDomainCertificateArn => Str

The custom domain nameE<rsquo>s certificate Amazon resource name (ARN).


=head2 CustomDomainCertificateExpiryTime => Str

The expiration time for the certificate.


=head2 CustomDomainName => Str

The custom domain name associated with the workgroup.


=head2 Endpoint => L<Paws::RedshiftServerless::Endpoint>

The endpoint that is created from the workgroup.


=head2 EnhancedVpcRouting => Bool

The value that specifies whether to enable enhanced virtual private
cloud (VPC) routing, which forces Amazon Redshift Serverless to route
traffic through your VPC.


=head2 IpAddressType => Str

The IP address type that the workgroup supports. Possible values are
C<ipv4> and C<dualstack>.


=head2 MaxCapacity => Int

The maximum data-warehouse capacity Amazon Redshift Serverless uses to
serve queries. The max capacity is specified in RPUs.


=head2 NamespaceName => Str

The namespace the workgroup is associated with.


=head2 PatchVersion => Str

The patch version of your Amazon Redshift Serverless workgroup. For
more information about patch versions, see Cluster versions for Amazon
Redshift
(https://docs.aws.amazon.com/redshift/latest/mgmt/cluster-versions.html).


=head2 PendingTrackName => Str

The name for the track that you want to assign to the workgroup. When
the track changes, the workgroup is switched to the latest workgroup
release available for the track. At this point, the track name is
applied.


=head2 Port => Int

The custom port to use when connecting to a workgroup. Valid port
ranges are 5431-5455 and 8191-8215. The default is 5439.


=head2 PricePerformanceTarget => L<Paws::RedshiftServerless::PerformanceTarget>

An object that represents the price performance target settings for the
workgroup.


=head2 PubliclyAccessible => Bool

A value that specifies whether the workgroup can be accessible from a
public network.


=head2 SecurityGroupIds => ArrayRef[Str|Undef]

An array of security group IDs to associate with the workgroup.


=head2 Status => Str

The status of the workgroup.


=head2 SubnetIds => ArrayRef[Str|Undef]

An array of subnet IDs the workgroup is associated with.


=head2 TrackName => Str

The name of the track for the workgroup.


=head2 WorkgroupArn => Str

The Amazon Resource Name (ARN) that links to the workgroup.


=head2 WorkgroupId => Str

The unique identifier of the workgroup.


=head2 WorkgroupName => Str

The name of the workgroup.


=head2 WorkgroupVersion => Str

The Amazon Redshift Serverless version of your workgroup. For more
information about Amazon Redshift Serverless versions, seeCluster
versions for Amazon Redshift
(https://docs.aws.amazon.com/redshift/latest/mgmt/cluster-versions.html).



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::RedshiftServerless>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

