# Generated by default/object.tt
package Paws::GameLift::SupportContainerDefinitionInput;
  use Moose;
  has ContainerName => (is => 'ro', isa => 'Str', required => 1);
  has DependsOn => (is => 'ro', isa => 'ArrayRef[Paws::GameLift::ContainerDependency]');
  has EnvironmentOverride => (is => 'ro', isa => 'ArrayRef[Paws::GameLift::ContainerEnvironment]');
  has Essential => (is => 'ro', isa => 'Bool');
  has HealthCheck => (is => 'ro', isa => 'Paws::GameLift::ContainerHealthCheck');
  has ImageUri => (is => 'ro', isa => 'Str', required => 1);
  has MemoryHardLimitMebibytes => (is => 'ro', isa => 'Int');
  has MountPoints => (is => 'ro', isa => 'ArrayRef[Paws::GameLift::ContainerMountPoint]');
  has PortConfiguration => (is => 'ro', isa => 'Paws::GameLift::ContainerPortConfiguration');
  has Vcpu => (is => 'ro', isa => 'Num');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GameLift::SupportContainerDefinitionInput

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GameLift::SupportContainerDefinitionInput object:

  $service_obj->Method(Att1 => { ContainerName => $value, ..., Vcpu => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GameLift::SupportContainerDefinitionInput object:

  $result = $service_obj->Method(...);
  $result->Att1->ContainerName

=head1 DESCRIPTION

Describes a support container in a container group. You can define a
support container in either a game server container group or a
per-instance container group. Support containers don't run game server
processes.

This definition includes container configuration, resources, and start
instructions. Use this data type when creating or updating a container
group definition. For properties of a deployed support container, see
SupportContainerDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_SupportContainerDefinition.html).

B<Use with: > CreateContainerGroupDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_CreateContainerGroupDefinition.html),
UpdateContainerGroupDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_UpdateContainerGroupDefinition.html)

=head1 ATTRIBUTES


=head2 B<REQUIRED> ContainerName => Str

A string that uniquely identifies the container definition within a
container group.


=head2 DependsOn => ArrayRef[L<Paws::GameLift::ContainerDependency>]

Establishes dependencies between this container and the status of other
containers in the same container group. A container can have
dependencies on multiple different containers.

.

You can use dependencies to establish a startup/shutdown sequence
across the container group. For example, you might specify that
I<ContainerB> has a C<START> dependency on I<ContainerA>. This
dependency means that I<ContainerB> can't start until after
I<ContainerA> has started. This dependency is reversed on shutdown,
which means that I<ContainerB> must shut down before I<ContainerA> can
shut down.


=head2 EnvironmentOverride => ArrayRef[L<Paws::GameLift::ContainerEnvironment>]

A set of environment variables to pass to the container on startup. See
the ContainerDefinition::environment
(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ContainerDefinition.html#ECS-Type-ContainerDefinition-environment)
parameter in the I<Amazon Elastic Container Service API Reference>.


=head2 Essential => Bool

Flags the container as vital for the container group to function
properly. If an essential container fails, the entire container group
restarts. At least one support container in a per-instance container
group must be essential. When flagging a container as essential, also
configure a health check so that the container can signal that it's
healthy.


=head2 HealthCheck => L<Paws::GameLift::ContainerHealthCheck>

Configuration for a non-terminal health check. A container
automatically restarts if it stops functioning. With a health check,
you can define additional reasons to flag a container as unhealthy and
restart it. If an essential container fails a health check, the entire
container group restarts.


=head2 B<REQUIRED> ImageUri => Str

The location of the container image to deploy to a container fleet.
Provide an image in an Amazon Elastic Container Registry public or
private repository. The repository must be in the same Amazon Web
Services account and Amazon Web Services Region where you're creating
the container group definition. For limits on image size, see Amazon
GameLift endpoints and quotas
(https://docs.aws.amazon.com/general/latest/gr/gamelift.html). You can
use any of the following image URI formats:

=over

=item *

Image ID only: C<[AWS account].dkr.ecr.[AWS
region].amazonaws.com/[repository ID]>

=item *

Image ID and digest: C<[AWS account].dkr.ecr.[AWS
region].amazonaws.com/[repository ID]@[digest]>

=item *

Image ID and tag: C<[AWS account].dkr.ecr.[AWS
region].amazonaws.com/[repository ID]:[tag]>

=back



=head2 MemoryHardLimitMebibytes => Int

A specified amount of memory (in MiB) to reserve for this container. If
you don't specify a container-specific memory limit, the container
shares the container group's total memory allocation.

B<Related data type: > ContainerGroupDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html)TotalMemoryLimitMebibytesC<>


=head2 MountPoints => ArrayRef[L<Paws::GameLift::ContainerMountPoint>]

A mount point that binds a path inside the container to a file or
directory on the host system and lets it access the file or directory.


=head2 PortConfiguration => L<Paws::GameLift::ContainerPortConfiguration>

A set of ports that Amazon GameLift can assign to processes in the
container. Any processes that accept inbound traffic connections must
be assigned a port from this set. The container port range must be
large enough to assign one to each process in the container that needs
one.

Container ports aren't directly accessed by inbound traffic. Amazon
GameLift maps these container ports to externally accessible connection
ports, which are assigned as needed from the container fleet's
C<ConnectionPortRange>.


=head2 Vcpu => Num

The number of vCPU units to reserve for this container. The container
can use more resources when needed, if available. If you don't reserve
CPU units for this container, it shares the container group's total
vCPU limit.

B<Related data type: > ContainerGroupDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_ContainerGroupDefinition.html)
TotalCpuLimit



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GameLift>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

