# Generated by default/object.tt
package Paws::GameLift::ContainerDependency;
  use Moose;
  has Condition => (is => 'ro', isa => 'Str', required => 1);
  has ContainerName => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::GameLift::ContainerDependency

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GameLift::ContainerDependency object:

  $service_obj->Method(Att1 => { Condition => $value, ..., ContainerName => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GameLift::ContainerDependency object:

  $result = $service_obj->Method(...);
  $result->Att1->Condition

=head1 DESCRIPTION

A container's dependency on another container in the same container
group. The dependency impacts how the dependent container is able to
start or shut down based the status of the other container.

For example, I<ContainerA> is configured with the following dependency:
a C<START> dependency on I<ContainerB>. This means that I<ContainerA>
can't start until I<ContainerB> has started. It also means that
I<ContainerA> must shut down before I<ContainerB>.

B<Part of:> GameServerContainerDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_GameServerContainerDefinition.html),
GameServerContainerDefinitionInput
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_GameServerContainerDefinitionInput.html),
SupportContainerDefinition
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_SupportContainerDefinition.html),
SupportContainerDefinitionInput
(https://docs.aws.amazon.com/gamelift/latest/apireference/API_SupportContainerDefinitionInput.html)

=head1 ATTRIBUTES


=head2 B<REQUIRED> Condition => Str

The condition that the dependency container must reach before the
dependent container can start. Valid conditions include:

=over

=item *

START - The dependency container must have started.

=item *

COMPLETE - The dependency container has run to completion (exits). Use
this condition with nonessential containers, such as those that run a
script and then exit. The dependency container can't be an essential
container.

=item *

SUCCESS - The dependency container has run to completion and exited
with a zero status. The dependency container can't be an essential
container.

=item *

HEALTHY - The dependency container has passed its Docker health check.
Use this condition with dependency containers that have health checks
configured. This condition is confirmed at container group startup
only.

=back



=head2 B<REQUIRED> ContainerName => Str

A descriptive label for the container definition that this container
depends on.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GameLift>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

