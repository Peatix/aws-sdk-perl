# Generated by default/object.tt
package Paws::GameLift::Event;
  use Moose;
  has Count => (is => 'ro', isa => 'Int');
  has EventCode => (is => 'ro', isa => 'Str');
  has EventId => (is => 'ro', isa => 'Str');
  has EventTime => (is => 'ro', isa => 'Str');
  has Message => (is => 'ro', isa => 'Str');
  has PreSignedLogUrl => (is => 'ro', isa => 'Str');
  has ResourceId => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GameLift::Event

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GameLift::Event object:

  $service_obj->Method(Att1 => { Count => $value, ..., ResourceId => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GameLift::Event object:

  $result = $service_obj->Method(...);
  $result->Att1->Count

=head1 DESCRIPTION

Log entry describing an event that involves Amazon GameLift resources
(such as a fleet). In addition to tracking activity, event codes and
messages can provide additional information for troubleshooting and
debugging problems.

=head1 ATTRIBUTES


=head2 Count => Int

The number of times that this event occurred.


=head2 EventCode => Str

The type of event being logged.

B<Fleet state transition events:>

=over

=item *

FLEET_CREATED -- A fleet resource was successfully created with a
status of C<NEW>. Event messaging includes the fleet ID.

=item *

FLEET_STATE_DOWNLOADING -- Fleet status changed from C<NEW> to
C<DOWNLOADING>. Amazon GameLift is downloading the compressed build and
running install scripts.

=item *

FLEET_STATE_VALIDATING -- Fleet status changed from C<DOWNLOADING> to
C<VALIDATING>. Amazon GameLift has successfully installed build and is
now validating the build files.

=item *

FLEET_STATE_BUILDING -- Fleet status changed from C<VALIDATING> to
C<BUILDING>. Amazon GameLift has successfully verified the build files
and is now launching a fleet instance.

=item *

FLEET_STATE_ACTIVATING -- Fleet status changed from C<BUILDING> to
C<ACTIVATING>. Amazon GameLift is launching a game server process on
the fleet instance and is testing its connectivity with the Amazon
GameLift service.

=item *

FLEET_STATE_ACTIVE -- The fleet's status changed from C<ACTIVATING> to
C<ACTIVE>. The fleet is now ready to host game sessions.

=item *

FLEET_STATE_ERROR -- The Fleet's status changed to C<ERROR>. Describe
the fleet event message for more details.

=back

B<Fleet creation events (ordered by fleet creation activity):>

=over

=item *

FLEET_BINARY_DOWNLOAD_FAILED -- The build failed to download to the
fleet instance.

=item *

FLEET_CREATION_EXTRACTING_BUILD -- The game server build was
successfully downloaded to an instance, and Amazon GameLiftis now
extracting the build files from the uploaded build. Failure at this
stage prevents a fleet from moving to ACTIVE status. Logs for this
stage display a list of the files that are extracted and saved on the
instance. Access the logs by using the URL in I<PreSignedLogUrl>.

=item *

FLEET_CREATION_RUNNING_INSTALLER -- The game server build files were
successfully extracted, and Amazon GameLift is now running the build's
install script (if one is included). Failure in this stage prevents a
fleet from moving to ACTIVE status. Logs for this stage list the
installation steps and whether or not the install completed
successfully. Access the logs by using the URL in I<PreSignedLogUrl>.

=item *

FLEET_CREATION_COMPLETED_INSTALLER -- The game server build files were
successfully installed and validation of the installation will begin
soon.

=item *

FLEET_CREATION_FAILED_INSTALLER -- The installed failed while
attempting to install the build files. This event indicates that the
failure occurred before Amazon GameLift could start validation.

=item *

FLEET_CREATION_VALIDATING_RUNTIME_CONFIG -- The build process was
successful, and the GameLift is now verifying that the game server
launch paths, which are specified in the fleet's runtime configuration,
exist. If any listed launch path exists, Amazon GameLift tries to
launch a game server process and waits for the process to report ready.
Failures in this stage prevent a fleet from moving to C<ACTIVE> status.
Logs for this stage list the launch paths in the runtime configuration
and indicate whether each is found. Access the logs by using the URL in
I<PreSignedLogUrl>.

=item *

FLEET_VALIDATION_LAUNCH_PATH_NOT_FOUND -- Validation of the runtime
configuration failed because the executable specified in a launch path
does not exist on the instance.

=item *

FLEET_VALIDATION_EXECUTABLE_RUNTIME_FAILURE -- Validation of the
runtime configuration failed because the executable specified in a
launch path failed to run on the fleet instance.

=item *

FLEET_VALIDATION_TIMED_OUT -- Validation of the fleet at the end of
creation timed out. Try fleet creation again.

=item *

FLEET_ACTIVATION_FAILED -- The fleet failed to successfully complete
one of the steps in the fleet activation process. This event code
indicates that the game build was successfully downloaded to a fleet
instance, built, and validated, but was not able to start a server
process. For more information, see Debug Fleet Creation Issues
(https://docs.aws.amazon.com/gamelift/latest/developerguide/fleets-creating-debug.html#fleets-creating-debug-creation).

=item *

FLEET_ACTIVATION_FAILED_NO_INSTANCES -- Fleet creation was not able to
obtain any instances based on the input fleet attributes. Try again at
a different time or choose a different combination of fleet attributes
such as fleet type, instance type, etc.

=item *

FLEET_INITIALIZATION_FAILED -- A generic exception occurred during
fleet creation. Describe the fleet event message for more details.

=back

B<VPC peering events:>

=over

=item *

FLEET_VPC_PEERING_SUCCEEDED -- A VPC peering connection has been
established between the VPC for an Amazon GameLift fleet and a VPC in
your Amazon Web Services account.

=item *

FLEET_VPC_PEERING_FAILED -- A requested VPC peering connection has
failed. Event details and status information provide additional detail.
A common reason for peering failure is that the two VPCs have
overlapping CIDR blocks of IPv4 addresses. To resolve this, change the
CIDR block for the VPC in your Amazon Web Services account. For more
information on VPC peering failures, see
https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html
(https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/invalid-peering-configurations.html)

=item *

FLEET_VPC_PEERING_DELETED -- A VPC peering connection has been
successfully deleted.

=back

B<Spot instance events:>

=over

=item *

INSTANCE_INTERRUPTED -- A spot instance was interrupted by EC2 with a
two-minute notification.

=item *

INSTANCE_RECYCLED -- A spot instance was determined to have a high risk
of interruption and is scheduled to be recycled once it has no active
game sessions.

=back

B<Server process events:>

=over

=item *

SERVER_PROCESS_INVALID_PATH -- The game server executable or script
could not be found based on the Fleet runtime configuration. Check that
the launch path is correct based on the operating system of the Fleet.

=item *

SERVER_PROCESS_SDK_INITIALIZATION_TIMEOUT -- The server process did not
call C<InitSDK()> within the time expected (5 minutes). Check your game
session log to see why C<InitSDK()> was not called in time. This event
is not emitted for managed container fleets and Anywhere fleets unless
they're deployed with the Amazon GameLift Agent.

=item *

SERVER_PROCESS_PROCESS_READY_TIMEOUT -- The server process did not call
C<ProcessReady()> within the time expected (5 minutes) after calling
C<InitSDK()>. Check your game session log to see why C<ProcessReady()>
was not called in time.

=item *

SERVER_PROCESS_CRASHED -- The server process exited without calling
C<ProcessEnding()>. Check your game session log to see why
C<ProcessEnding()> was not called.

=item *

SERVER_PROCESS_TERMINATED_UNHEALTHY -- The server process did not
report a valid health check for too long and was therefore terminated
by GameLift. Check your game session log to see if the thread became
stuck processing a synchronous task for too long.

=item *

SERVER_PROCESS_FORCE_TERMINATED -- The server process did not exit
cleanly within the time expected after C<OnProcessTerminate()> was
sent. Check your game session log to see why termination took longer
than expected.

=item *

SERVER_PROCESS_PROCESS_EXIT_TIMEOUT -- The server process did not exit
cleanly within the time expected (30 seconds) after calling
C<ProcessEnding()>. Check your game session log to see why termination
took longer than expected.

=back

B<Game session events:>

=over

=item *

GAME_SESSION_ACTIVATION_TIMEOUT -- GameSession failed to activate
within the expected time. Check your game session log to see why
C<ActivateGameSession()> took longer to complete than expected.

=back

B<Other fleet events:>

=over

=item *

FLEET_SCALING_EVENT -- A change was made to the fleet's capacity
settings (desired instances, minimum/maximum scaling limits). Event
messaging includes the new capacity settings.

=item *

FLEET_NEW_GAME_SESSION_PROTECTION_POLICY_UPDATED -- A change was made
to the fleet's game session protection policy setting. Event messaging
includes both the old and new policy setting.

=item *

FLEET_DELETED -- A request to delete a fleet was initiated.

=item *

GENERIC_EVENT -- An unspecified event has occurred.

=back



=head2 EventId => Str

A unique identifier for a fleet event.


=head2 EventTime => Str

Time stamp indicating when this event occurred. Format is a number
expressed in Unix time as milliseconds (for example
C<"1469498468.057">).


=head2 Message => Str

Additional information related to the event.


=head2 PreSignedLogUrl => Str

Location of stored logs with additional detail that is related to the
event. This is useful for debugging issues. The URL is valid for 15
minutes. You can also access fleet creation logs through the Amazon
GameLift console.


=head2 ResourceId => Str

A unique identifier for an event resource, such as a fleet ID.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GameLift>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

