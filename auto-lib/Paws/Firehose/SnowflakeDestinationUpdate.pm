# Generated by default/object.tt
package Paws::Firehose::SnowflakeDestinationUpdate;
  use Moose;
  has AccountUrl => (is => 'ro', isa => 'Str');
  has BufferingHints => (is => 'ro', isa => 'Paws::Firehose::SnowflakeBufferingHints');
  has CloudWatchLoggingOptions => (is => 'ro', isa => 'Paws::Firehose::CloudWatchLoggingOptions');
  has ContentColumnName => (is => 'ro', isa => 'Str');
  has Database => (is => 'ro', isa => 'Str');
  has DataLoadingOption => (is => 'ro', isa => 'Str');
  has KeyPassphrase => (is => 'ro', isa => 'Str');
  has MetaDataColumnName => (is => 'ro', isa => 'Str');
  has PrivateKey => (is => 'ro', isa => 'Str');
  has ProcessingConfiguration => (is => 'ro', isa => 'Paws::Firehose::ProcessingConfiguration');
  has RetryOptions => (is => 'ro', isa => 'Paws::Firehose::SnowflakeRetryOptions');
  has RoleARN => (is => 'ro', isa => 'Str');
  has S3BackupMode => (is => 'ro', isa => 'Str');
  has S3Update => (is => 'ro', isa => 'Paws::Firehose::S3DestinationUpdate');
  has Schema => (is => 'ro', isa => 'Str');
  has SecretsManagerConfiguration => (is => 'ro', isa => 'Paws::Firehose::SecretsManagerConfiguration');
  has SnowflakeRoleConfiguration => (is => 'ro', isa => 'Paws::Firehose::SnowflakeRoleConfiguration');
  has Table => (is => 'ro', isa => 'Str');
  has User => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Firehose::SnowflakeDestinationUpdate

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Firehose::SnowflakeDestinationUpdate object:

  $service_obj->Method(Att1 => { AccountUrl => $value, ..., User => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Firehose::SnowflakeDestinationUpdate object:

  $result = $service_obj->Method(...);
  $result->Att1->AccountUrl

=head1 DESCRIPTION

Update to configuration settings

=head1 ATTRIBUTES


=head2 AccountUrl => Str

URL for accessing your Snowflake account. This URL must include your
account identifier
(https://docs.snowflake.com/en/user-guide/admin-account-identifier).
Note that the protocol (https://) and port number are optional.


=head2 BufferingHints => L<Paws::Firehose::SnowflakeBufferingHints>

Describes the buffering to perform before delivering data to the
Snowflake destination.


=head2 CloudWatchLoggingOptions => L<Paws::Firehose::CloudWatchLoggingOptions>




=head2 ContentColumnName => Str

The name of the content metadata column


=head2 Database => Str

All data in Snowflake is maintained in databases.


=head2 DataLoadingOption => Str

JSON keys mapped to table column names or choose to split the JSON
payload where content is mapped to a record content column and source
metadata is mapped to a record metadata column.


=head2 KeyPassphrase => Str

Passphrase to decrypt the private key when the key is encrypted. For
information, see Using Key Pair Authentication & Key Rotation
(https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation).


=head2 MetaDataColumnName => Str

The name of the record metadata column


=head2 PrivateKey => Str

The private key used to encrypt your Snowflake client. For information,
see Using Key Pair Authentication & Key Rotation
(https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation).


=head2 ProcessingConfiguration => L<Paws::Firehose::ProcessingConfiguration>




=head2 RetryOptions => L<Paws::Firehose::SnowflakeRetryOptions>

Specify how long Firehose retries sending data to the New Relic HTTP
endpoint. After sending data, Firehose first waits for an
acknowledgment from the HTTP endpoint. If an error occurs or the
acknowledgment doesnE<rsquo>t arrive within the acknowledgment timeout
period, Firehose starts the retry duration counter. It keeps retrying
until the retry duration expires. After that, Firehose considers it a
data delivery failure and backs up the data to your Amazon S3 bucket.
Every time that Firehose sends data to the HTTP endpoint (either the
initial attempt or a retry), it restarts the acknowledgement timeout
counter and waits for an acknowledgement from the HTTP endpoint. Even
if the retry duration expires, Firehose still waits for the
acknowledgment until it receives it or the acknowledgement timeout
period is reached. If the acknowledgment times out, Firehose determines
whether there's time left in the retry counter. If there is time left,
it retries again and repeats the logic until it receives an
acknowledgment or determines that the retry time has expired. If you
don't want Firehose to retry sending data, set this value to 0.


=head2 RoleARN => Str

The Amazon Resource Name (ARN) of the Snowflake role


=head2 S3BackupMode => Str

Choose an S3 backup mode. Once you set the mode as C<AllData>, you can
not change it to C<FailedDataOnly>.


=head2 S3Update => L<Paws::Firehose::S3DestinationUpdate>




=head2 Schema => Str

Each database consists of one or more schemas, which are logical
groupings of database objects, such as tables and views


=head2 SecretsManagerConfiguration => L<Paws::Firehose::SecretsManagerConfiguration>

Describes the Secrets Manager configuration in Snowflake.


=head2 SnowflakeRoleConfiguration => L<Paws::Firehose::SnowflakeRoleConfiguration>

Optionally configure a Snowflake role. Otherwise the default user role
will be used.


=head2 Table => Str

All data in Snowflake is stored in database tables, logically
structured as collections of columns and rows.


=head2 User => Str

User login name for the Snowflake account.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Firehose>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

