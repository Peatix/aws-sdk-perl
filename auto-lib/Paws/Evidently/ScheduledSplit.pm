# Generated by default/object.tt
package Paws::Evidently::ScheduledSplit;
  use Moose;
  has GroupWeights => (is => 'ro', isa => 'Paws::Evidently::GroupToWeightMap', request_name => 'groupWeights', traits => ['NameInRequest']);
  has SegmentOverrides => (is => 'ro', isa => 'ArrayRef[Paws::Evidently::SegmentOverride]', request_name => 'segmentOverrides', traits => ['NameInRequest']);
  has StartTime => (is => 'ro', isa => 'Str', request_name => 'startTime', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Evidently::ScheduledSplit

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Evidently::ScheduledSplit object:

  $service_obj->Method(Att1 => { GroupWeights => $value, ..., StartTime => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Evidently::ScheduledSplit object:

  $result = $service_obj->Method(...);
  $result->Att1->GroupWeights

=head1 DESCRIPTION

This structure defines the traffic allocation percentages among the
feature variations during one step of a launch, and the start time of
that step.

=head1 ATTRIBUTES


=head2 GroupWeights => L<Paws::Evidently::GroupToWeightMap>

The traffic allocation percentages among the feature variations during
one step of a launch. This is a set of key-value pairs. The keys are
variation names. The values represent the percentage of traffic to
allocate to that variation during this step.

The values is expressed in thousandths of a percent, so assigning a
weight of 50000 assigns 50% of traffic to that variation.

If the sum of the weights for all the variations in a segment override
does not add up to 100,000, then the remaining traffic that matches
this segment is not assigned by this segment override, and instead
moves on to the next segment override or the default traffic split.


=head2 SegmentOverrides => ArrayRef[L<Paws::Evidently::SegmentOverride>]

Use this parameter to specify different traffic splits for one or more
audience I<segments>. A segment is a portion of your audience that
share one or more characteristics. Examples could be Chrome browser
users, users in Europe, or Firefox browser users in Europe who also fit
other criteria that your application collects, such as age.

This parameter is an array of up to six segment override objects. Each
of these objects specifies a segment that you have already created, and
defines the traffic split for that segment.


=head2 B<REQUIRED> StartTime => Str

The date and time that this step of the launch starts.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Evidently>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

