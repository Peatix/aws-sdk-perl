# Generated by default/object.tt
package Paws::MediaTailor::Channel;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', required => 1);
  has Audiences => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ChannelName => (is => 'ro', isa => 'Str', required => 1);
  has ChannelState => (is => 'ro', isa => 'Str', required => 1);
  has CreationTime => (is => 'ro', isa => 'Str');
  has FillerSlate => (is => 'ro', isa => 'Paws::MediaTailor::SlateSource');
  has LastModifiedTime => (is => 'ro', isa => 'Str');
  has LogConfiguration => (is => 'ro', isa => 'Paws::MediaTailor::LogConfigurationForChannel', required => 1);
  has Outputs => (is => 'ro', isa => 'ArrayRef[Paws::MediaTailor::ResponseOutputItem]', required => 1);
  has PlaybackMode => (is => 'ro', isa => 'Str', required => 1);
  has Tags => (is => 'ro', isa => 'Paws::MediaTailor::__mapOf__string', request_name => 'tags', traits => ['NameInRequest']);
  has Tier => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::MediaTailor::Channel

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::MediaTailor::Channel object:

  $service_obj->Method(Att1 => { Arn => $value, ..., Tier => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::MediaTailor::Channel object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

The configuration parameters for a channel. For information about
MediaTailor channels, see Working with channels
(https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html)
in the I<MediaTailor User Guide>.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Arn => Str

The ARN of the channel.


=head2 Audiences => ArrayRef[Str|Undef]

The list of audiences defined in channel.


=head2 B<REQUIRED> ChannelName => Str

The name of the channel.


=head2 B<REQUIRED> ChannelState => Str

Returns the state whether the channel is running or not.


=head2 CreationTime => Str

The timestamp of when the channel was created.


=head2 FillerSlate => L<Paws::MediaTailor::SlateSource>

The slate used to fill gaps between programs in the schedule. You must
configure filler slate if your channel uses the C<LINEAR>
C<PlaybackMode>. MediaTailor doesn't support filler slate for channels
using the C<LOOP> C<PlaybackMode>.


=head2 LastModifiedTime => Str

The timestamp of when the channel was last modified.


=head2 B<REQUIRED> LogConfiguration => L<Paws::MediaTailor::LogConfigurationForChannel>

The log configuration.


=head2 B<REQUIRED> Outputs => ArrayRef[L<Paws::MediaTailor::ResponseOutputItem>]

The channel's output properties.


=head2 B<REQUIRED> PlaybackMode => Str

The type of playback mode for this channel.

C<LINEAR> - Programs play back-to-back only once.

C<LOOP> - Programs play back-to-back in an endless loop. When the last
program in the schedule plays, playback loops back to the first program
in the schedule.


=head2 Tags => L<Paws::MediaTailor::__mapOf__string>

The tags to assign to the channel. Tags are key-value pairs that you
can associate with Amazon resources to help with organization, access
control, and cost tracking. For more information, see Tagging AWS
Elemental MediaTailor Resources
(https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).


=head2 B<REQUIRED> Tier => Str

The tier for this channel. STANDARD tier channels can contain live
programs.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::MediaTailor>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

