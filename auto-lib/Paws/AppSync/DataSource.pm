# Generated by default/object.tt
package Paws::AppSync::DataSource;
  use Moose;
  has DataSourceArn => (is => 'ro', isa => 'Str', request_name => 'dataSourceArn', traits => ['NameInRequest']);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest']);
  has DynamodbConfig => (is => 'ro', isa => 'Paws::AppSync::DynamodbDataSourceConfig', request_name => 'dynamodbConfig', traits => ['NameInRequest']);
  has ElasticsearchConfig => (is => 'ro', isa => 'Paws::AppSync::ElasticsearchDataSourceConfig', request_name => 'elasticsearchConfig', traits => ['NameInRequest']);
  has EventBridgeConfig => (is => 'ro', isa => 'Paws::AppSync::EventBridgeDataSourceConfig', request_name => 'eventBridgeConfig', traits => ['NameInRequest']);
  has HttpConfig => (is => 'ro', isa => 'Paws::AppSync::HttpDataSourceConfig', request_name => 'httpConfig', traits => ['NameInRequest']);
  has LambdaConfig => (is => 'ro', isa => 'Paws::AppSync::LambdaDataSourceConfig', request_name => 'lambdaConfig', traits => ['NameInRequest']);
  has MetricsConfig => (is => 'ro', isa => 'Str', request_name => 'metricsConfig', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has OpenSearchServiceConfig => (is => 'ro', isa => 'Paws::AppSync::OpenSearchServiceDataSourceConfig', request_name => 'openSearchServiceConfig', traits => ['NameInRequest']);
  has RelationalDatabaseConfig => (is => 'ro', isa => 'Paws::AppSync::RelationalDatabaseDataSourceConfig', request_name => 'relationalDatabaseConfig', traits => ['NameInRequest']);
  has ServiceRoleArn => (is => 'ro', isa => 'Str', request_name => 'serviceRoleArn', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::AppSync::DataSource

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::AppSync::DataSource object:

  $service_obj->Method(Att1 => { DataSourceArn => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::AppSync::DataSource object:

  $result = $service_obj->Method(...);
  $result->Att1->DataSourceArn

=head1 DESCRIPTION

Describes a data source.

=head1 ATTRIBUTES


=head2 DataSourceArn => Str

The data source Amazon Resource Name (ARN).


=head2 Description => Str

The description of the data source.


=head2 DynamodbConfig => L<Paws::AppSync::DynamodbDataSourceConfig>

DynamoDB settings.


=head2 ElasticsearchConfig => L<Paws::AppSync::ElasticsearchDataSourceConfig>

Amazon OpenSearch Service settings.


=head2 EventBridgeConfig => L<Paws::AppSync::EventBridgeDataSourceConfig>

Amazon EventBridge settings.


=head2 HttpConfig => L<Paws::AppSync::HttpDataSourceConfig>

HTTP endpoint settings.


=head2 LambdaConfig => L<Paws::AppSync::LambdaDataSourceConfig>

Lambda settings.


=head2 MetricsConfig => Str

Enables or disables enhanced data source metrics for specified data
sources. Note that C<metricsConfig> won't be used unless the
C<dataSourceLevelMetricsBehavior> value is set to
C<PER_DATA_SOURCE_METRICS>. If the C<dataSourceLevelMetricsBehavior> is
set to C<FULL_REQUEST_DATA_SOURCE_METRICS> instead, C<metricsConfig>
will be ignored. However, you can still set its value.

C<metricsConfig> can be C<ENABLED> or C<DISABLED>.


=head2 Name => Str

The name of the data source.


=head2 OpenSearchServiceConfig => L<Paws::AppSync::OpenSearchServiceDataSourceConfig>

Amazon OpenSearch Service settings.


=head2 RelationalDatabaseConfig => L<Paws::AppSync::RelationalDatabaseDataSourceConfig>

Relational database settings.


=head2 ServiceRoleArn => Str

The Identity and Access Management (IAM) service role Amazon Resource
Name (ARN) for the data source. The system assumes this role when
accessing the data source.


=head2 Type => Str

The type of the data source.

=over

=item *

B<AWS_LAMBDA>: The data source is an Lambda function.

=item *

B<AMAZON_DYNAMODB>: The data source is an Amazon DynamoDB table.

=item *

B<AMAZON_ELASTICSEARCH>: The data source is an Amazon OpenSearch
Service domain.

=item *

B<AMAZON_OPENSEARCH_SERVICE>: The data source is an Amazon OpenSearch
Service domain.

=item *

B<AMAZON_EVENTBRIDGE>: The data source is an Amazon EventBridge
configuration.

=item *

B<AMAZON_BEDROCK_RUNTIME>: The data source is the Amazon Bedrock
runtime.

=item *

B<NONE>: There is no data source. Use this type when you want to invoke
a GraphQL operation without connecting to a data source, such as when
you're performing data transformation with resolvers or invoking a
subscription from a mutation.

=item *

B<HTTP>: The data source is an HTTP endpoint.

=item *

B<RELATIONAL_DATABASE>: The data source is a relational database.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::AppSync>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

