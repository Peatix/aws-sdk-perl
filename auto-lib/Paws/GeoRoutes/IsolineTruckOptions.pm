# Generated by default/object.tt
package Paws::GeoRoutes::IsolineTruckOptions;
  use Moose;
  has AxleCount => (is => 'ro', isa => 'Int');
  has EngineType => (is => 'ro', isa => 'Str');
  has GrossWeight => (is => 'ro', isa => 'Int');
  has HazardousCargos => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Height => (is => 'ro', isa => 'Int');
  has HeightAboveFirstAxle => (is => 'ro', isa => 'Int');
  has KpraLength => (is => 'ro', isa => 'Int');
  has Length => (is => 'ro', isa => 'Int');
  has LicensePlate => (is => 'ro', isa => 'Paws::GeoRoutes::IsolineVehicleLicensePlate');
  has MaxSpeed => (is => 'ro', isa => 'Num');
  has Occupancy => (is => 'ro', isa => 'Int');
  has PayloadCapacity => (is => 'ro', isa => 'Int');
  has TireCount => (is => 'ro', isa => 'Int');
  has Trailer => (is => 'ro', isa => 'Paws::GeoRoutes::IsolineTrailerOptions');
  has TruckType => (is => 'ro', isa => 'Str');
  has TunnelRestrictionCode => (is => 'ro', isa => 'Str');
  has WeightPerAxle => (is => 'ro', isa => 'Int');
  has WeightPerAxleGroup => (is => 'ro', isa => 'Paws::GeoRoutes::WeightPerAxleGroup');
  has Width => (is => 'ro', isa => 'Int');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoRoutes::IsolineTruckOptions

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoRoutes::IsolineTruckOptions object:

  $service_obj->Method(Att1 => { AxleCount => $value, ..., Width => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoRoutes::IsolineTruckOptions object:

  $result = $service_obj->Method(...);
  $result->Att1->AxleCount

=head1 DESCRIPTION

Travel mode options when the provided travel mode is "Truck"

=head1 ATTRIBUTES


=head2 AxleCount => Int

Total number of axles of the vehicle.


=head2 EngineType => Str

Engine type of the vehicle.


=head2 GrossWeight => Int

Gross weight of the vehicle including trailers, and goods at capacity.

B<Unit>: C<Kilograms>


=head2 HazardousCargos => ArrayRef[Str|Undef]

List of Hazardous cargo contained in the vehicle.


=head2 Height => Int

Height of the vehicle.

B<Unit>: C<centimeters>


=head2 HeightAboveFirstAxle => Int

Height of the vehicle above its first axle.

B<Unit>: C<centimeters>


=head2 KpraLength => Int

Kingpin to rear axle length of the vehicle.

B<Unit>: C<centimeters>


=head2 Length => Int

Length of the vehicle.

B<Unit>: C<centimeters>


=head2 LicensePlate => L<Paws::GeoRoutes::IsolineVehicleLicensePlate>

The vehicle License Plate.


=head2 MaxSpeed => Num

Maximum speed specified.

B<Unit>: C<KilometersPerHour>


=head2 Occupancy => Int

The number of occupants in the vehicle.

Default Value: C<1>


=head2 PayloadCapacity => Int

Payload capacity of the vehicle and trailers attached.

B<Unit>: C<kilograms>


=head2 TireCount => Int

Number of tires on the vehicle.


=head2 Trailer => L<Paws::GeoRoutes::IsolineTrailerOptions>

Trailer options corresponding to the vehicle.


=head2 TruckType => Str

Type of the truck.


=head2 TunnelRestrictionCode => Str

The tunnel restriction code.

Tunnel categories in this list indicate the restrictions which apply to
certain tunnels in Great Britain. They relate to the types of dangerous
goods that can be transported through them.

=over

=item *

I<Tunnel Category B>

=over

=item *

I<Risk Level>: Limited risk

=item *

I<Restrictions>: Few restrictions

=back

=item *

I<Tunnel Category C>

=over

=item *

I<Risk Level>: Medium risk

=item *

I<Restrictions>: Some restrictions

=back

=item *

I<Tunnel Category D>

=over

=item *

I<Risk Level>: High risk

=item *

I<Restrictions>: Many restrictions occur

=back

=item *

I<Tunnel Category E>

=over

=item *

I<Risk Level>: Very high risk

=item *

I<Restrictions>: Restricted tunnel

=back

=back



=head2 WeightPerAxle => Int

Heaviest weight per axle irrespective of the axle type or the axle
group. Meant for usage in countries where the differences in axle types
or axle groups are not distinguished.

B<Unit>: C<Kilograms>


=head2 WeightPerAxleGroup => L<Paws::GeoRoutes::WeightPerAxleGroup>

Specifies the total weight for the specified axle group. Meant for
usage in countries that have different regulations based on the axle
group type.

B<Unit>: C<Kilograms>


=head2 Width => Int

Width of the vehicle.

B<Unit>: C<centimeters>



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoRoutes>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

