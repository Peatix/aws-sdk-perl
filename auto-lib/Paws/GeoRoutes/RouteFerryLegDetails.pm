# Generated by default/object.tt
package Paws::GeoRoutes::RouteFerryLegDetails;
  use Moose;
  has AfterTravelSteps => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteFerryAfterTravelStep]', required => 1);
  has Arrival => (is => 'ro', isa => 'Paws::GeoRoutes::RouteFerryArrival', required => 1);
  has BeforeTravelSteps => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteFerryBeforeTravelStep]', required => 1);
  has Departure => (is => 'ro', isa => 'Paws::GeoRoutes::RouteFerryDeparture', required => 1);
  has Notices => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteFerryNotice]', required => 1);
  has PassThroughWaypoints => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RoutePassThroughWaypoint]', required => 1);
  has RouteName => (is => 'ro', isa => 'Str');
  has Spans => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteFerrySpan]', required => 1);
  has Summary => (is => 'ro', isa => 'Paws::GeoRoutes::RouteFerrySummary');
  has TravelSteps => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteFerryTravelStep]', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoRoutes::RouteFerryLegDetails

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoRoutes::RouteFerryLegDetails object:

  $service_obj->Method(Att1 => { AfterTravelSteps => $value, ..., TravelSteps => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoRoutes::RouteFerryLegDetails object:

  $result = $service_obj->Method(...);
  $result->Att1->AfterTravelSteps

=head1 DESCRIPTION

FerryLegDetails is populated when the Leg type is Ferry, and provides
additional information that is specific

=head1 ATTRIBUTES


=head2 B<REQUIRED> AfterTravelSteps => ArrayRef[L<Paws::GeoRoutes::RouteFerryAfterTravelStep>]

Steps of a leg that must be performed after the travel portion of the
leg.


=head2 B<REQUIRED> Arrival => L<Paws::GeoRoutes::RouteFerryArrival>

Details corresponding to the arrival for the leg.


=head2 B<REQUIRED> BeforeTravelSteps => ArrayRef[L<Paws::GeoRoutes::RouteFerryBeforeTravelStep>]

Steps of a leg that must be performed before the travel portion of the
leg.


=head2 B<REQUIRED> Departure => L<Paws::GeoRoutes::RouteFerryDeparture>

Details corresponding to the departure for the leg.


=head2 B<REQUIRED> Notices => ArrayRef[L<Paws::GeoRoutes::RouteFerryNotice>]

Notices are additional information returned that indicate issues that
occurred during route calculation.


=head2 B<REQUIRED> PassThroughWaypoints => ArrayRef[L<Paws::GeoRoutes::RoutePassThroughWaypoint>]

Waypoints that were passed through during the leg. This includes the
waypoints that were configured with the PassThrough option.


=head2 RouteName => Str

Route name of the ferry line.


=head2 B<REQUIRED> Spans => ArrayRef[L<Paws::GeoRoutes::RouteFerrySpan>]

Spans that were computed for the requested SpanAdditionalFeatures.


=head2 Summary => L<Paws::GeoRoutes::RouteFerrySummary>

Summarized details of the leg.


=head2 B<REQUIRED> TravelSteps => ArrayRef[L<Paws::GeoRoutes::RouteFerryTravelStep>]

Steps of a leg that must be performed before the travel portion of the
leg.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoRoutes>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

