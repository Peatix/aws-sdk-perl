# Generated by default/object.tt
package Paws::GeoRoutes::WeightPerAxleGroup;
  use Moose;
  has Quad => (is => 'ro', isa => 'Int');
  has Quint => (is => 'ro', isa => 'Int');
  has Single => (is => 'ro', isa => 'Int');
  has Tandem => (is => 'ro', isa => 'Int');
  has Triple => (is => 'ro', isa => 'Int');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoRoutes::WeightPerAxleGroup

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoRoutes::WeightPerAxleGroup object:

  $service_obj->Method(Att1 => { Quad => $value, ..., Triple => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoRoutes::WeightPerAxleGroup object:

  $result = $service_obj->Method(...);
  $result->Att1->Quad

=head1 DESCRIPTION

Specifies the total weight for the specified axle group. Meant for
usage in countries that have different regulations based on the axle
group type.

B<Unit>: C<Kilograms>

=head1 ATTRIBUTES


=head2 Quad => Int

Weight for quad axle group.

B<Unit>: C<Kilograms>


=head2 Quint => Int

Weight for quad quint group.

B<Unit>: C<Kilograms>


=head2 Single => Int

Weight for single axle group.

B<Unit>: C<Kilograms>


=head2 Tandem => Int

Weight for tandem axle group.

B<Unit>: C<Kilograms>


=head2 Triple => Int

Weight for triple axle group.

B<Unit>: C<Kilograms>



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoRoutes>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

