# Generated by default/object.tt
package Paws::GeoRoutes::RouteAvoidanceOptions;
  use Moose;
  has Areas => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteAvoidanceArea]');
  has CarShuttleTrains => (is => 'ro', isa => 'Bool');
  has ControlledAccessHighways => (is => 'ro', isa => 'Bool');
  has DirtRoads => (is => 'ro', isa => 'Bool');
  has Ferries => (is => 'ro', isa => 'Bool');
  has SeasonalClosure => (is => 'ro', isa => 'Bool');
  has TollRoads => (is => 'ro', isa => 'Bool');
  has TollTransponders => (is => 'ro', isa => 'Bool');
  has TruckRoadTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Tunnels => (is => 'ro', isa => 'Bool');
  has UTurns => (is => 'ro', isa => 'Bool');
  has ZoneCategories => (is => 'ro', isa => 'ArrayRef[Paws::GeoRoutes::RouteAvoidanceZoneCategory]');

1;

### main pod documentation begin ###

=head1 NAME

Paws::GeoRoutes::RouteAvoidanceOptions

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::GeoRoutes::RouteAvoidanceOptions object:

  $service_obj->Method(Att1 => { Areas => $value, ..., ZoneCategories => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::GeoRoutes::RouteAvoidanceOptions object:

  $result = $service_obj->Method(...);
  $result->Att1->Areas

=head1 DESCRIPTION

Specifies options for areas to avoid when calculating the route. This
is a best-effort avoidance setting, meaning the router will try to
honor the avoidance preferences but may still include restricted areas
if no feasible alternative route exists. If avoidance options are not
followed, the response will indicate that the avoidance criteria were
violated.

=head1 ATTRIBUTES


=head2 Areas => ArrayRef[L<Paws::GeoRoutes::RouteAvoidanceArea>]

Areas to be avoided.


=head2 CarShuttleTrains => Bool

Avoid car-shuttle-trains while calculating the route.


=head2 ControlledAccessHighways => Bool

Avoid controlled access highways while calculating the route.


=head2 DirtRoads => Bool

Avoid dirt roads while calculating the route.


=head2 Ferries => Bool

Avoid ferries while calculating the route.


=head2 SeasonalClosure => Bool

Avoid roads that have seasonal closure while calculating the route.


=head2 TollRoads => Bool

Avoids roads where the specified toll transponders are the only mode of
payment.


=head2 TollTransponders => Bool

Avoids roads where the specified toll transponders are the only mode of
payment.


=head2 TruckRoadTypes => ArrayRef[Str|Undef]

Truck road type identifiers. C<BK1> through C<BK4> apply only to
Sweden. C<A2,A4,B2,B4,C,D,ET2,ET4> apply only to Mexico.

There are currently no other supported values as of 26th April 2024.


=head2 Tunnels => Bool

Avoid tunnels while calculating the route.


=head2 UTurns => Bool

Avoid U-turns for calculation on highways and motorways.


=head2 ZoneCategories => ArrayRef[L<Paws::GeoRoutes::RouteAvoidanceZoneCategory>]

Zone categories to be avoided.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::GeoRoutes>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

