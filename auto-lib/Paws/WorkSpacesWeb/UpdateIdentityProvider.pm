
package Paws::WorkSpacesWeb::UpdateIdentityProvider;
  use Moose;
  has ClientToken => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'clientToken');
  has IdentityProviderArn => (is => 'ro', isa => 'Str', traits => ['ParamInURI'], uri_name => 'identityProviderArn', required => 1);
  has IdentityProviderDetails => (is => 'ro', isa => 'Paws::WorkSpacesWeb::IdentityProviderDetails', traits => ['NameInRequest'], request_name => 'identityProviderDetails');
  has IdentityProviderName => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'identityProviderName');
  has IdentityProviderType => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'identityProviderType');

  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => 'UpdateIdentityProvider');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '/identityProviders/{identityProviderArn+}');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => 'PATCH');
  class_has _returns => (isa => 'Str', is => 'ro', default => 'Paws::WorkSpacesWeb::UpdateIdentityProviderResponse');
1;

### main pod documentation begin ###

=head1 NAME

Paws::WorkSpacesWeb::UpdateIdentityProvider - Arguments for method UpdateIdentityProvider on L<Paws::WorkSpacesWeb>

=head1 DESCRIPTION

This class represents the parameters used for calling the method UpdateIdentityProvider on the
L<Amazon WorkSpaces Web|Paws::WorkSpacesWeb> service. Use the attributes of this class
as arguments to method UpdateIdentityProvider.

You shouldn't make instances of this class. Each attribute should be used as a named argument in the call to UpdateIdentityProvider.

=head1 SYNOPSIS

    my $workspaces-web = Paws->service('WorkSpacesWeb');
    my $UpdateIdentityProviderResponse =
      $workspaces -web->UpdateIdentityProvider(
      IdentityProviderArn     => 'MySubresourceARN',
      ClientToken             => 'MyClientToken',      # OPTIONAL
      IdentityProviderDetails => {
        'MyStringType' => 'MyStringType', # key: max: 131072, value: max: 131072
      },    # OPTIONAL
      IdentityProviderName => 'MyIdentityProviderName',    # OPTIONAL
      IdentityProviderType => 'SAML',                      # OPTIONAL
      );

    # Results:
    my $IdentityProvider = $UpdateIdentityProviderResponse->IdentityProvider;

    # Returns a L<Paws::WorkSpacesWeb::UpdateIdentityProviderResponse> object.

Values for attributes that are native types (Int, String, Float, etc) can passed as-is (scalar values). Values for complex Types (objects) can be passed as a HashRef. The keys and values of the hashref will be used to instance the underlying object.
For the AWS API documentation, see L<https://docs.aws.amazon.com/goto/WebAPI/workspaces-web/UpdateIdentityProvider>

=head1 ATTRIBUTES


=head2 ClientToken => Str

A unique, case-sensitive identifier that you provide to ensure the
idempotency of the request. Idempotency ensures that an API request
completes only once. With an idempotent request, if the original
request completes successfully, subsequent retries with the same client
token return the result from the original successful request.

If you do not specify a client token, one is automatically generated by
the Amazon Web Services SDK.



=head2 B<REQUIRED> IdentityProviderArn => Str

The ARN of the identity provider.



=head2 IdentityProviderDetails => L<Paws::WorkSpacesWeb::IdentityProviderDetails>

The details of the identity provider. The following list describes the
provider detail keys for each identity provider type.

=over

=item *

For Google and Login with Amazon:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<authorize_scopes>

=back

=item *

For Facebook:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<authorize_scopes>

=item *

C<api_version>

=back

=item *

For Sign in with Apple:

=over

=item *

C<client_id>

=item *

C<team_id>

=item *

C<key_id>

=item *

C<private_key>

=item *

C<authorize_scopes>

=back

=item *

For OIDC providers:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<attributes_request_method>

=item *

C<oidc_issuer>

=item *

C<authorize_scopes>

=item *

C<authorize_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<token_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<attributes_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<jwks_uri> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=back

=item *

For SAML providers:

=over

=item *

C<MetadataFile> OR C<MetadataURL>

=item *

C<IDPSignout> (boolean) I<optional>

=item *

C<IDPInit> (boolean) I<optional>

=item *

C<RequestSigningAlgorithm> (string) I<optional> - Only accepts
C<rsa-sha256>

=item *

C<EncryptedResponses> (boolean) I<optional>

=back

=back




=head2 IdentityProviderName => Str

The name of the identity provider.



=head2 IdentityProviderType => Str

The type of the identity provider.

Valid values are: C<"SAML">, C<"Facebook">, C<"Google">, C<"LoginWithAmazon">, C<"SignInWithApple">, C<"OIDC">


=head1 SEE ALSO

This class forms part of L<Paws>, documenting arguments for method UpdateIdentityProvider in L<Paws::WorkSpacesWeb>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

