
package Paws::WorkSpacesWeb::CreateIdentityProvider;
  use Moose;
  has ClientToken => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'clientToken');
  has IdentityProviderDetails => (is => 'ro', isa => 'Paws::WorkSpacesWeb::IdentityProviderDetails', traits => ['NameInRequest'], request_name => 'identityProviderDetails', required => 1);
  has IdentityProviderName => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'identityProviderName', required => 1);
  has IdentityProviderType => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'identityProviderType', required => 1);
  has PortalArn => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'portalArn', required => 1);
  has Tags => (is => 'ro', isa => 'ArrayRef[Paws::WorkSpacesWeb::Tag]', traits => ['NameInRequest'], request_name => 'tags');

  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => 'CreateIdentityProvider');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '/identityProviders');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => 'POST');
  class_has _returns => (isa => 'Str', is => 'ro', default => 'Paws::WorkSpacesWeb::CreateIdentityProviderResponse');
1;

### main pod documentation begin ###

=head1 NAME

Paws::WorkSpacesWeb::CreateIdentityProvider - Arguments for method CreateIdentityProvider on L<Paws::WorkSpacesWeb>

=head1 DESCRIPTION

This class represents the parameters used for calling the method CreateIdentityProvider on the
L<Amazon WorkSpaces Web|Paws::WorkSpacesWeb> service. Use the attributes of this class
as arguments to method CreateIdentityProvider.

You shouldn't make instances of this class. Each attribute should be used as a named argument in the call to CreateIdentityProvider.

=head1 SYNOPSIS

    my $workspaces-web = Paws->service('WorkSpacesWeb');
    my $CreateIdentityProviderResponse =
      $workspaces -web->CreateIdentityProvider(
      IdentityProviderDetails => {
        'MyStringType' => 'MyStringType', # key: max: 131072, value: max: 131072
      },
      IdentityProviderName => 'MyIdentityProviderName',
      IdentityProviderType => 'SAML',
      PortalArn            => 'MyARN',
      ClientToken          => 'MyClientToken',            # OPTIONAL
      Tags                 => [
        {
          Key   => 'MyTagKey',      # min: 1, max: 128
          Value => 'MyTagValue',    # max: 256

        },
        ...
      ],    # OPTIONAL
      );

    # Results:
    my $IdentityProviderArn =
      $CreateIdentityProviderResponse->IdentityProviderArn;

    # Returns a L<Paws::WorkSpacesWeb::CreateIdentityProviderResponse> object.

Values for attributes that are native types (Int, String, Float, etc) can passed as-is (scalar values). Values for complex Types (objects) can be passed as a HashRef. The keys and values of the hashref will be used to instance the underlying object.
For the AWS API documentation, see L<https://docs.aws.amazon.com/goto/WebAPI/workspaces-web/CreateIdentityProvider>

=head1 ATTRIBUTES


=head2 ClientToken => Str

A unique, case-sensitive identifier that you provide to ensure the
idempotency of the request. Idempotency ensures that an API request
completes only once. With an idempotent request, if the original
request completes successfully, subsequent retries with the same client
token returns the result from the original successful request.

If you do not specify a client token, one is automatically generated by
the Amazon Web Services SDK.



=head2 B<REQUIRED> IdentityProviderDetails => L<Paws::WorkSpacesWeb::IdentityProviderDetails>

The identity provider details. The following list describes the
provider detail keys for each identity provider type.

=over

=item *

For Google and Login with Amazon:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<authorize_scopes>

=back

=item *

For Facebook:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<authorize_scopes>

=item *

C<api_version>

=back

=item *

For Sign in with Apple:

=over

=item *

C<client_id>

=item *

C<team_id>

=item *

C<key_id>

=item *

C<private_key>

=item *

C<authorize_scopes>

=back

=item *

For OIDC providers:

=over

=item *

C<client_id>

=item *

C<client_secret>

=item *

C<attributes_request_method>

=item *

C<oidc_issuer>

=item *

C<authorize_scopes>

=item *

C<authorize_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<token_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<attributes_url> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=item *

C<jwks_uri> I<if not available from discovery URL specified by
C<oidc_issuer> key>

=back

=item *

For SAML providers:

=over

=item *

C<MetadataFile> OR C<MetadataURL>

=item *

C<IDPSignout> (boolean) I<optional>

=item *

C<IDPInit> (boolean) I<optional>

=item *

C<RequestSigningAlgorithm> (string) I<optional> - Only accepts
C<rsa-sha256>

=item *

C<EncryptedResponses> (boolean) I<optional>

=back

=back




=head2 B<REQUIRED> IdentityProviderName => Str

The identity provider name.



=head2 B<REQUIRED> IdentityProviderType => Str

The identity provider type.

Valid values are: C<"SAML">, C<"Facebook">, C<"Google">, C<"LoginWithAmazon">, C<"SignInWithApple">, C<"OIDC">

=head2 B<REQUIRED> PortalArn => Str

The ARN of the web portal.



=head2 Tags => ArrayRef[L<Paws::WorkSpacesWeb::Tag>]

The tags to add to the identity provider resource. A tag is a key-value
pair.




=head1 SEE ALSO

This class forms part of L<Paws>, documenting arguments for method CreateIdentityProvider in L<Paws::WorkSpacesWeb>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

