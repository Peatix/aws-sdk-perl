# Generated by default/object.tt
package Paws::EKS::KubernetesNetworkConfigResponse;
  use Moose;
  has ElasticLoadBalancing => (is => 'ro', isa => 'Paws::EKS::ElasticLoadBalancing', request_name => 'elasticLoadBalancing', traits => ['NameInRequest']);
  has IpFamily => (is => 'ro', isa => 'Str', request_name => 'ipFamily', traits => ['NameInRequest']);
  has ServiceIpv4Cidr => (is => 'ro', isa => 'Str', request_name => 'serviceIpv4Cidr', traits => ['NameInRequest']);
  has ServiceIpv6Cidr => (is => 'ro', isa => 'Str', request_name => 'serviceIpv6Cidr', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::KubernetesNetworkConfigResponse

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::KubernetesNetworkConfigResponse object:

  $service_obj->Method(Att1 => { ElasticLoadBalancing => $value, ..., ServiceIpv6Cidr => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::KubernetesNetworkConfigResponse object:

  $result = $service_obj->Method(...);
  $result->Att1->ElasticLoadBalancing

=head1 DESCRIPTION

The Kubernetes network configuration for the cluster. The response
contains a value for B<serviceIpv6Cidr> or B<serviceIpv4Cidr>, but not
both.

=head1 ATTRIBUTES


=head2 ElasticLoadBalancing => L<Paws::EKS::ElasticLoadBalancing>

Indicates the current configuration of the load balancing capability on
your EKS Auto Mode cluster. For example, if the capability is enabled
or disabled.


=head2 IpFamily => Str

The IP family used to assign Kubernetes C<Pod> and C<Service> objects
IP addresses. The IP family is always C<ipv4>, unless you have a
C<1.21> or later cluster running version C<1.10.1> or later of the
Amazon VPC CNI plugin for Kubernetes and specified C<ipv6> when you
created the cluster.


=head2 ServiceIpv4Cidr => Str

The CIDR block that Kubernetes C<Pod> and C<Service> object IP
addresses are assigned from. Kubernetes assigns addresses from an
C<IPv4> CIDR block assigned to a subnet that the node is in. If you
didn't specify a CIDR block when you created the cluster, then
Kubernetes assigns addresses from either the C<10.100.0.0/16> or
C<172.20.0.0/16> CIDR blocks. If this was specified, then it was
specified when the cluster was created and it can't be changed.


=head2 ServiceIpv6Cidr => Str

The CIDR block that Kubernetes pod and service IP addresses are
assigned from if you created a 1.21 or later cluster with version
1.10.1 or later of the Amazon VPC CNI add-on and specified C<ipv6> for
B<ipFamily> when you created the cluster. Kubernetes assigns service
addresses from the unique local address range (C<fc00::/7>) because you
can't specify a custom IPv6 CIDR block when you create the cluster.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

