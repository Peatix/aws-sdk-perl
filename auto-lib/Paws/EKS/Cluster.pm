# Generated by default/object.tt
package Paws::EKS::Cluster;
  use Moose;
  has AccessConfig => (is => 'ro', isa => 'Paws::EKS::AccessConfigResponse', request_name => 'accessConfig', traits => ['NameInRequest']);
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest']);
  has CertificateAuthority => (is => 'ro', isa => 'Paws::EKS::Certificate', request_name => 'certificateAuthority', traits => ['NameInRequest']);
  has ClientRequestToken => (is => 'ro', isa => 'Str', request_name => 'clientRequestToken', traits => ['NameInRequest']);
  has ComputeConfig => (is => 'ro', isa => 'Paws::EKS::ComputeConfigResponse', request_name => 'computeConfig', traits => ['NameInRequest']);
  has ConnectorConfig => (is => 'ro', isa => 'Paws::EKS::ConnectorConfigResponse', request_name => 'connectorConfig', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has EncryptionConfig => (is => 'ro', isa => 'ArrayRef[Paws::EKS::EncryptionConfig]', request_name => 'encryptionConfig', traits => ['NameInRequest']);
  has Endpoint => (is => 'ro', isa => 'Str', request_name => 'endpoint', traits => ['NameInRequest']);
  has Health => (is => 'ro', isa => 'Paws::EKS::ClusterHealth', request_name => 'health', traits => ['NameInRequest']);
  has Id => (is => 'ro', isa => 'Str', request_name => 'id', traits => ['NameInRequest']);
  has Identity => (is => 'ro', isa => 'Paws::EKS::Identity', request_name => 'identity', traits => ['NameInRequest']);
  has KubernetesNetworkConfig => (is => 'ro', isa => 'Paws::EKS::KubernetesNetworkConfigResponse', request_name => 'kubernetesNetworkConfig', traits => ['NameInRequest']);
  has Logging => (is => 'ro', isa => 'Paws::EKS::Logging', request_name => 'logging', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has OutpostConfig => (is => 'ro', isa => 'Paws::EKS::OutpostConfigResponse', request_name => 'outpostConfig', traits => ['NameInRequest']);
  has PlatformVersion => (is => 'ro', isa => 'Str', request_name => 'platformVersion', traits => ['NameInRequest']);
  has RemoteNetworkConfig => (is => 'ro', isa => 'Paws::EKS::RemoteNetworkConfigResponse', request_name => 'remoteNetworkConfig', traits => ['NameInRequest']);
  has ResourcesVpcConfig => (is => 'ro', isa => 'Paws::EKS::VpcConfigResponse', request_name => 'resourcesVpcConfig', traits => ['NameInRequest']);
  has RoleArn => (is => 'ro', isa => 'Str', request_name => 'roleArn', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has StorageConfig => (is => 'ro', isa => 'Paws::EKS::StorageConfigResponse', request_name => 'storageConfig', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::EKS::TagMap', request_name => 'tags', traits => ['NameInRequest']);
  has UpgradePolicy => (is => 'ro', isa => 'Paws::EKS::UpgradePolicyResponse', request_name => 'upgradePolicy', traits => ['NameInRequest']);
  has Version => (is => 'ro', isa => 'Str', request_name => 'version', traits => ['NameInRequest']);
  has ZonalShiftConfig => (is => 'ro', isa => 'Paws::EKS::ZonalShiftConfigResponse', request_name => 'zonalShiftConfig', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::Cluster

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::Cluster object:

  $service_obj->Method(Att1 => { AccessConfig => $value, ..., ZonalShiftConfig => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::Cluster object:

  $result = $service_obj->Method(...);
  $result->Att1->AccessConfig

=head1 DESCRIPTION

An object representing an Amazon EKS cluster.

=head1 ATTRIBUTES


=head2 AccessConfig => L<Paws::EKS::AccessConfigResponse>

The access configuration for the cluster.


=head2 Arn => Str

The Amazon Resource Name (ARN) of the cluster.


=head2 CertificateAuthority => L<Paws::EKS::Certificate>

The C<certificate-authority-data> for your cluster.


=head2 ClientRequestToken => Str

A unique, case-sensitive identifier that you provide to ensure the
idempotency of the request.


=head2 ComputeConfig => L<Paws::EKS::ComputeConfigResponse>

Indicates the current configuration of the compute capability on your
EKS Auto Mode cluster. For example, if the capability is enabled or
disabled. If the compute capability is enabled, EKS Auto Mode will
create and delete EC2 Managed Instances in your Amazon Web Services
account. For more information, see EKS Auto Mode compute capability in
the I<Amazon EKS User Guide>.


=head2 ConnectorConfig => L<Paws::EKS::ConnectorConfigResponse>

The configuration used to connect to a cluster for registration.


=head2 CreatedAt => Str

The Unix epoch timestamp at object creation.


=head2 EncryptionConfig => ArrayRef[L<Paws::EKS::EncryptionConfig>]

The encryption configuration for the cluster.


=head2 Endpoint => Str

The endpoint for your Kubernetes API server.


=head2 Health => L<Paws::EKS::ClusterHealth>

An object representing the health of your Amazon EKS cluster.


=head2 Id => Str

The ID of your local Amazon EKS cluster on an Amazon Web Services
Outpost. This property isn't available for an Amazon EKS cluster on the
Amazon Web Services cloud.


=head2 Identity => L<Paws::EKS::Identity>

The identity provider information for the cluster.


=head2 KubernetesNetworkConfig => L<Paws::EKS::KubernetesNetworkConfigResponse>

The Kubernetes network configuration for the cluster.


=head2 Logging => L<Paws::EKS::Logging>

The logging configuration for your cluster.


=head2 Name => Str

The name of your cluster.


=head2 OutpostConfig => L<Paws::EKS::OutpostConfigResponse>

An object representing the configuration of your local Amazon EKS
cluster on an Amazon Web Services Outpost. This object isn't available
for clusters on the Amazon Web Services cloud.


=head2 PlatformVersion => Str

The platform version of your Amazon EKS cluster. For more information
about clusters deployed on the Amazon Web Services Cloud, see Platform
versions
(https://docs.aws.amazon.com/eks/latest/userguide/platform-versions.html)
in the I< I<Amazon EKS User Guide> >. For more information about local
clusters deployed on an Outpost, see Amazon EKS local cluster platform
versions
(https://docs.aws.amazon.com/eks/latest/userguide/eks-outposts-platform-versions.html)
in the I< I<Amazon EKS User Guide> >.


=head2 RemoteNetworkConfig => L<Paws::EKS::RemoteNetworkConfigResponse>

The configuration in the cluster for EKS Hybrid Nodes. You can add,
change, or remove this configuration after the cluster is created.


=head2 ResourcesVpcConfig => L<Paws::EKS::VpcConfigResponse>

The VPC configuration used by the cluster control plane. Amazon EKS VPC
resources have specific requirements to work properly with Kubernetes.
For more information, see Cluster VPC considerations
(https://docs.aws.amazon.com/eks/latest/userguide/network_reqs.html)
and Cluster security group considerations
(https://docs.aws.amazon.com/eks/latest/userguide/sec-group-reqs.html)
in the I<Amazon EKS User Guide>.


=head2 RoleArn => Str

The Amazon Resource Name (ARN) of the IAM role that provides
permissions for the Kubernetes control plane to make calls to Amazon
Web Services API operations on your behalf.


=head2 Status => Str

The current status of the cluster.


=head2 StorageConfig => L<Paws::EKS::StorageConfigResponse>

Indicates the current configuration of the block storage capability on
your EKS Auto Mode cluster. For example, if the capability is enabled
or disabled. If the block storage capability is enabled, EKS Auto Mode
will create and delete EBS volumes in your Amazon Web Services account.
For more information, see EKS Auto Mode block storage capability in the
I<Amazon EKS User Guide>.


=head2 Tags => L<Paws::EKS::TagMap>

Metadata that assists with categorization and organization. Each tag
consists of a key and an optional value. You define both. Tags don't
propagate to any other cluster or Amazon Web Services resources.


=head2 UpgradePolicy => L<Paws::EKS::UpgradePolicyResponse>

This value indicates if extended support is enabled or disabled for the
cluster.

Learn more about EKS Extended Support in the I<Amazon EKS User Guide>.
(https://docs.aws.amazon.com/eks/latest/userguide/extended-support-control.html)


=head2 Version => Str

The Kubernetes server version for the cluster.


=head2 ZonalShiftConfig => L<Paws::EKS::ZonalShiftConfigResponse>

The configuration for zonal shift for the cluster.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

