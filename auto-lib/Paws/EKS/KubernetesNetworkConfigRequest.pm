# Generated by default/object.tt
package Paws::EKS::KubernetesNetworkConfigRequest;
  use Moose;
  has ElasticLoadBalancing => (is => 'ro', isa => 'Paws::EKS::ElasticLoadBalancing', request_name => 'elasticLoadBalancing', traits => ['NameInRequest']);
  has IpFamily => (is => 'ro', isa => 'Str', request_name => 'ipFamily', traits => ['NameInRequest']);
  has ServiceIpv4Cidr => (is => 'ro', isa => 'Str', request_name => 'serviceIpv4Cidr', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::KubernetesNetworkConfigRequest

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::KubernetesNetworkConfigRequest object:

  $service_obj->Method(Att1 => { ElasticLoadBalancing => $value, ..., ServiceIpv4Cidr => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::KubernetesNetworkConfigRequest object:

  $result = $service_obj->Method(...);
  $result->Att1->ElasticLoadBalancing

=head1 DESCRIPTION

The Kubernetes network configuration for the cluster.

=head1 ATTRIBUTES


=head2 ElasticLoadBalancing => L<Paws::EKS::ElasticLoadBalancing>

Request to enable or disable the load balancing capability on your EKS
Auto Mode cluster. For more information, see EKS Auto Mode load
balancing capability in the I<Amazon EKS User Guide>.


=head2 IpFamily => Str

Specify which IP family is used to assign Kubernetes pod and service IP
addresses. If you don't specify a value, C<ipv4> is used by default.
You can only specify an IP family when you create a cluster and can't
change this value once the cluster is created. If you specify C<ipv6>,
the VPC and subnets that you specify for cluster creation must have
both C<IPv4> and C<IPv6> CIDR blocks assigned to them. You can't
specify C<ipv6> for clusters in China Regions.

You can only specify C<ipv6> for C<1.21> and later clusters that use
version C<1.10.1> or later of the Amazon VPC CNI add-on. If you specify
C<ipv6>, then ensure that your VPC meets the requirements listed in the
considerations listed in Assigning IPv6 addresses to pods and services
(https://docs.aws.amazon.com/eks/latest/userguide/cni-ipv6.html) in the
I<Amazon EKS User Guide>. Kubernetes assigns services C<IPv6> addresses
from the unique local address range C<(fc00::/7)>. You can't specify a
custom C<IPv6> CIDR block. Pod addresses are assigned from the subnet's
C<IPv6> CIDR.


=head2 ServiceIpv4Cidr => Str

Don't specify a value if you select C<ipv6> for B<ipFamily>. The CIDR
block to assign Kubernetes service IP addresses from. If you don't
specify a block, Kubernetes assigns addresses from either the
C<10.100.0.0/16> or C<172.20.0.0/16> CIDR blocks. We recommend that you
specify a block that does not overlap with resources in other networks
that are peered or connected to your VPC. The block must meet the
following requirements:

=over

=item *

Within one of the following private IP address blocks: C<10.0.0.0/8>,
C<172.16.0.0/12>, or C<192.168.0.0/16>.

=item *

Doesn't overlap with any CIDR block assigned to the VPC that you
selected for VPC.

=item *

Between C</24> and C</12>.

=back

You can only specify a custom CIDR block when you create a cluster. You
can't change this value after the cluster is created.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

