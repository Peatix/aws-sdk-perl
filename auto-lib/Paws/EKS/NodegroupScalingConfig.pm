# Generated by default/object.tt
package Paws::EKS::NodegroupScalingConfig;
  use Moose;
  has DesiredSize => (is => 'ro', isa => 'Int', request_name => 'desiredSize', traits => ['NameInRequest']);
  has MaxSize => (is => 'ro', isa => 'Int', request_name => 'maxSize', traits => ['NameInRequest']);
  has MinSize => (is => 'ro', isa => 'Int', request_name => 'minSize', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::NodegroupScalingConfig

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::NodegroupScalingConfig object:

  $service_obj->Method(Att1 => { DesiredSize => $value, ..., MinSize => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::NodegroupScalingConfig object:

  $result = $service_obj->Method(...);
  $result->Att1->DesiredSize

=head1 DESCRIPTION

An object representing the scaling configuration details for the Auto
Scaling group that is associated with your node group. When creating a
node group, you must specify all or none of the properties. When
updating a node group, you can specify any or none of the properties.

=head1 ATTRIBUTES


=head2 DesiredSize => Int

The current number of nodes that the managed node group should
maintain.

If you use the Kubernetes Cluster Autoscaler
(https://github.com/kubernetes/autoscaler#kubernetes-autoscaler), you
shouldn't change the C<desiredSize> value directly, as this can cause
the Cluster Autoscaler to suddenly scale up or scale down.

Whenever this parameter changes, the number of worker nodes in the node
group is updated to the specified size. If this parameter is given a
value that is smaller than the current number of running worker nodes,
the necessary number of worker nodes are terminated to match the given
value. When using CloudFormation, no action occurs if you remove this
parameter from your CFN template.

This parameter can be different from C<minSize> in some cases, such as
when starting with extra hosts for testing. This parameter can also be
different when you want to start with an estimated number of needed
hosts, but let the Cluster Autoscaler reduce the number if there are
too many. When the Cluster Autoscaler is used, the C<desiredSize>
parameter is altered by the Cluster Autoscaler (but can be out-of-date
for short periods of time). the Cluster Autoscaler doesn't scale a
managed node group lower than C<minSize> or higher than C<maxSize>.


=head2 MaxSize => Int

The maximum number of nodes that the managed node group can scale out
to. For information about the maximum number that you can specify, see
Amazon EKS service quotas
(https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html)
in the I<Amazon EKS User Guide>.


=head2 MinSize => Int

The minimum number of nodes that the managed node group can scale in
to.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

