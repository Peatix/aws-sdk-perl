# Generated by default/object.tt
package Paws::EKS::PodIdentityAssociation;
  use Moose;
  has AssociationArn => (is => 'ro', isa => 'Str', request_name => 'associationArn', traits => ['NameInRequest']);
  has AssociationId => (is => 'ro', isa => 'Str', request_name => 'associationId', traits => ['NameInRequest']);
  has ClusterName => (is => 'ro', isa => 'Str', request_name => 'clusterName', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has ModifiedAt => (is => 'ro', isa => 'Str', request_name => 'modifiedAt', traits => ['NameInRequest']);
  has Namespace => (is => 'ro', isa => 'Str', request_name => 'namespace', traits => ['NameInRequest']);
  has OwnerArn => (is => 'ro', isa => 'Str', request_name => 'ownerArn', traits => ['NameInRequest']);
  has RoleArn => (is => 'ro', isa => 'Str', request_name => 'roleArn', traits => ['NameInRequest']);
  has ServiceAccount => (is => 'ro', isa => 'Str', request_name => 'serviceAccount', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::EKS::TagMap', request_name => 'tags', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::PodIdentityAssociation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::PodIdentityAssociation object:

  $service_obj->Method(Att1 => { AssociationArn => $value, ..., Tags => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::PodIdentityAssociation object:

  $result = $service_obj->Method(...);
  $result->Att1->AssociationArn

=head1 DESCRIPTION

Amazon EKS Pod Identity associations provide the ability to manage
credentials for your applications, similar to the way that Amazon EC2
instance profiles provide credentials to Amazon EC2 instances.

=head1 ATTRIBUTES


=head2 AssociationArn => Str

The Amazon Resource Name (ARN) of the association.


=head2 AssociationId => Str

The ID of the association.


=head2 ClusterName => Str

The name of the cluster that the association is in.


=head2 CreatedAt => Str

The timestamp that the association was created at.


=head2 ModifiedAt => Str

The most recent timestamp that the association was modified at


=head2 Namespace => Str

The name of the Kubernetes namespace inside the cluster to create the
association in. The service account and the pods that use the service
account must be in this namespace.


=head2 OwnerArn => Str

If defined, the Pod Identity Association is owned by an Amazon EKS
Addon.


=head2 RoleArn => Str

The Amazon Resource Name (ARN) of the IAM role to associate with the
service account. The EKS Pod Identity agent manages credentials to
assume this role for applications in the containers in the pods that
use this service account.


=head2 ServiceAccount => Str

The name of the Kubernetes service account inside the cluster to
associate the IAM credentials with.


=head2 Tags => L<Paws::EKS::TagMap>

Metadata that assists with categorization and organization. Each tag
consists of a key and an optional value. You define both. Tags don't
propagate to any other cluster or Amazon Web Services resources.

The following basic restrictions apply to tags:

=over

=item *

Maximum number of tags per resource E<ndash> 50

=item *

For each resource, each tag key must be unique, and each tag key can
have only one value.

=item *

Maximum key length E<ndash> 128 Unicode characters in UTF-8

=item *

Maximum value length E<ndash> 256 Unicode characters in UTF-8

=item *

If your tagging schema is used across multiple services and resources,
remember that other services may have restrictions on allowed
characters. Generally allowed characters are: letters, numbers, and
spaces representable in UTF-8, and the following characters: + - = . _
: / @.

=item *

Tag keys and values are case-sensitive.

=item *

Do not use C<aws:>, C<AWS:>, or any upper or lowercase combination of
such as a prefix for either keys or values as it is reserved for Amazon
Web Services use. You cannot edit or delete tag keys or values with
this prefix. Tags with this prefix do not count against your tags per
resource limit.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

