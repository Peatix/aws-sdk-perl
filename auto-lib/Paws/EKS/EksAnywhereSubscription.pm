# Generated by default/object.tt
package Paws::EKS::EksAnywhereSubscription;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest']);
  has AutoRenew => (is => 'ro', isa => 'Bool', request_name => 'autoRenew', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has EffectiveDate => (is => 'ro', isa => 'Str', request_name => 'effectiveDate', traits => ['NameInRequest']);
  has ExpirationDate => (is => 'ro', isa => 'Str', request_name => 'expirationDate', traits => ['NameInRequest']);
  has Id => (is => 'ro', isa => 'Str', request_name => 'id', traits => ['NameInRequest']);
  has LicenseArns => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'licenseArns', traits => ['NameInRequest']);
  has LicenseQuantity => (is => 'ro', isa => 'Int', request_name => 'licenseQuantity', traits => ['NameInRequest']);
  has Licenses => (is => 'ro', isa => 'ArrayRef[Paws::EKS::License]', request_name => 'licenses', traits => ['NameInRequest']);
  has LicenseType => (is => 'ro', isa => 'Str', request_name => 'licenseType', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::EKS::TagMap', request_name => 'tags', traits => ['NameInRequest']);
  has Term => (is => 'ro', isa => 'Paws::EKS::EksAnywhereSubscriptionTerm', request_name => 'term', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EKS::EksAnywhereSubscription

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EKS::EksAnywhereSubscription object:

  $service_obj->Method(Att1 => { Arn => $value, ..., Term => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EKS::EksAnywhereSubscription object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

An EKS Anywhere subscription authorizing the customer to support for
licensed clusters and access to EKS Anywhere Curated Packages.

=head1 ATTRIBUTES


=head2 Arn => Str

The Amazon Resource Name (ARN) for the subscription.


=head2 AutoRenew => Bool

A boolean indicating whether or not a subscription will auto renew when
it expires.


=head2 CreatedAt => Str

The Unix timestamp in seconds for when the subscription was created.


=head2 EffectiveDate => Str

The Unix timestamp in seconds for when the subscription is effective.


=head2 ExpirationDate => Str

The Unix timestamp in seconds for when the subscription will expire or
auto renew, depending on the auto renew configuration of the
subscription object.


=head2 Id => Str

UUID identifying a subscription.


=head2 LicenseArns => ArrayRef[Str|Undef]

Amazon Web Services License Manager ARN associated with the
subscription.


=head2 LicenseQuantity => Int

The number of licenses included in a subscription. Valid values are
between 1 and 100.


=head2 Licenses => ArrayRef[L<Paws::EKS::License>]

Includes all of the claims in the license token necessary to validate
the license for extended support.


=head2 LicenseType => Str

The type of licenses included in the subscription. Valid value is
CLUSTER. With the CLUSTER license type, each license covers support for
a single EKS Anywhere cluster.


=head2 Status => Str

The status of a subscription.


=head2 Tags => L<Paws::EKS::TagMap>

The metadata for a subscription to assist with categorization and
organization. Each tag consists of a key and an optional value.
Subscription tags do not propagate to any other resources associated
with the subscription.


=head2 Term => L<Paws::EKS::EksAnywhereSubscriptionTerm>

An EksAnywhereSubscriptionTerm object.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EKS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

