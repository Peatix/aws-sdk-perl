# Generated by default/object.tt
package Paws::QConnect::TagFilter;
  use Moose;
  has AndConditions => (is => 'ro', isa => 'ArrayRef[Paws::QConnect::TagCondition]', request_name => 'andConditions', traits => ['NameInRequest']);
  has OrConditions => (is => 'ro', isa => 'ArrayRef[Paws::QConnect::OrCondition]', request_name => 'orConditions', traits => ['NameInRequest']);
  has TagCondition => (is => 'ro', isa => 'Paws::QConnect::TagCondition', request_name => 'tagCondition', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::QConnect::TagFilter

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::QConnect::TagFilter object:

  $service_obj->Method(Att1 => { AndConditions => $value, ..., TagCondition => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::QConnect::TagFilter object:

  $result = $service_obj->Method(...);
  $result->Att1->AndConditions

=head1 DESCRIPTION

An object that can be used to specify Tag conditions.

=head1 ATTRIBUTES


=head2 AndConditions => ArrayRef[L<Paws::QConnect::TagCondition>]

A list of conditions which would be applied together with an C<AND>
condition.


=head2 OrConditions => ArrayRef[L<Paws::QConnect::OrCondition>]

A list of conditions which would be applied together with an C<OR>
condition.


=head2 TagCondition => L<Paws::QConnect::TagCondition>

A leaf node condition which can be used to specify a tag condition.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::QConnect>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

