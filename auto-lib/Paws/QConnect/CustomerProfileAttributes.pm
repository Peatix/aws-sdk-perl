# Generated by default/object.tt
package Paws::QConnect::CustomerProfileAttributes;
  use Moose;
  has AccountNumber => (is => 'ro', isa => 'Str', request_name => 'accountNumber', traits => ['NameInRequest']);
  has AdditionalInformation => (is => 'ro', isa => 'Str', request_name => 'additionalInformation', traits => ['NameInRequest']);
  has Address1 => (is => 'ro', isa => 'Str', request_name => 'address1', traits => ['NameInRequest']);
  has Address2 => (is => 'ro', isa => 'Str', request_name => 'address2', traits => ['NameInRequest']);
  has Address3 => (is => 'ro', isa => 'Str', request_name => 'address3', traits => ['NameInRequest']);
  has Address4 => (is => 'ro', isa => 'Str', request_name => 'address4', traits => ['NameInRequest']);
  has BillingAddress1 => (is => 'ro', isa => 'Str', request_name => 'billingAddress1', traits => ['NameInRequest']);
  has BillingAddress2 => (is => 'ro', isa => 'Str', request_name => 'billingAddress2', traits => ['NameInRequest']);
  has BillingAddress3 => (is => 'ro', isa => 'Str', request_name => 'billingAddress3', traits => ['NameInRequest']);
  has BillingAddress4 => (is => 'ro', isa => 'Str', request_name => 'billingAddress4', traits => ['NameInRequest']);
  has BillingCity => (is => 'ro', isa => 'Str', request_name => 'billingCity', traits => ['NameInRequest']);
  has BillingCountry => (is => 'ro', isa => 'Str', request_name => 'billingCountry', traits => ['NameInRequest']);
  has BillingCounty => (is => 'ro', isa => 'Str', request_name => 'billingCounty', traits => ['NameInRequest']);
  has BillingPostalCode => (is => 'ro', isa => 'Str', request_name => 'billingPostalCode', traits => ['NameInRequest']);
  has BillingProvince => (is => 'ro', isa => 'Str', request_name => 'billingProvince', traits => ['NameInRequest']);
  has BillingState => (is => 'ro', isa => 'Str', request_name => 'billingState', traits => ['NameInRequest']);
  has BirthDate => (is => 'ro', isa => 'Str', request_name => 'birthDate', traits => ['NameInRequest']);
  has BusinessEmailAddress => (is => 'ro', isa => 'Str', request_name => 'businessEmailAddress', traits => ['NameInRequest']);
  has BusinessName => (is => 'ro', isa => 'Str', request_name => 'businessName', traits => ['NameInRequest']);
  has BusinessPhoneNumber => (is => 'ro', isa => 'Str', request_name => 'businessPhoneNumber', traits => ['NameInRequest']);
  has City => (is => 'ro', isa => 'Str', request_name => 'city', traits => ['NameInRequest']);
  has Country => (is => 'ro', isa => 'Str', request_name => 'country', traits => ['NameInRequest']);
  has County => (is => 'ro', isa => 'Str', request_name => 'county', traits => ['NameInRequest']);
  has Custom => (is => 'ro', isa => 'Paws::QConnect::CustomAttributes', request_name => 'custom', traits => ['NameInRequest']);
  has EmailAddress => (is => 'ro', isa => 'Str', request_name => 'emailAddress', traits => ['NameInRequest']);
  has FirstName => (is => 'ro', isa => 'Str', request_name => 'firstName', traits => ['NameInRequest']);
  has Gender => (is => 'ro', isa => 'Str', request_name => 'gender', traits => ['NameInRequest']);
  has HomePhoneNumber => (is => 'ro', isa => 'Str', request_name => 'homePhoneNumber', traits => ['NameInRequest']);
  has LastName => (is => 'ro', isa => 'Str', request_name => 'lastName', traits => ['NameInRequest']);
  has MailingAddress1 => (is => 'ro', isa => 'Str', request_name => 'mailingAddress1', traits => ['NameInRequest']);
  has MailingAddress2 => (is => 'ro', isa => 'Str', request_name => 'mailingAddress2', traits => ['NameInRequest']);
  has MailingAddress3 => (is => 'ro', isa => 'Str', request_name => 'mailingAddress3', traits => ['NameInRequest']);
  has MailingAddress4 => (is => 'ro', isa => 'Str', request_name => 'mailingAddress4', traits => ['NameInRequest']);
  has MailingCity => (is => 'ro', isa => 'Str', request_name => 'mailingCity', traits => ['NameInRequest']);
  has MailingCountry => (is => 'ro', isa => 'Str', request_name => 'mailingCountry', traits => ['NameInRequest']);
  has MailingCounty => (is => 'ro', isa => 'Str', request_name => 'mailingCounty', traits => ['NameInRequest']);
  has MailingPostalCode => (is => 'ro', isa => 'Str', request_name => 'mailingPostalCode', traits => ['NameInRequest']);
  has MailingProvince => (is => 'ro', isa => 'Str', request_name => 'mailingProvince', traits => ['NameInRequest']);
  has MailingState => (is => 'ro', isa => 'Str', request_name => 'mailingState', traits => ['NameInRequest']);
  has MiddleName => (is => 'ro', isa => 'Str', request_name => 'middleName', traits => ['NameInRequest']);
  has MobilePhoneNumber => (is => 'ro', isa => 'Str', request_name => 'mobilePhoneNumber', traits => ['NameInRequest']);
  has PartyType => (is => 'ro', isa => 'Str', request_name => 'partyType', traits => ['NameInRequest']);
  has PhoneNumber => (is => 'ro', isa => 'Str', request_name => 'phoneNumber', traits => ['NameInRequest']);
  has PostalCode => (is => 'ro', isa => 'Str', request_name => 'postalCode', traits => ['NameInRequest']);
  has ProfileARN => (is => 'ro', isa => 'Str', request_name => 'profileARN', traits => ['NameInRequest']);
  has ProfileId => (is => 'ro', isa => 'Str', request_name => 'profileId', traits => ['NameInRequest']);
  has Province => (is => 'ro', isa => 'Str', request_name => 'province', traits => ['NameInRequest']);
  has ShippingAddress1 => (is => 'ro', isa => 'Str', request_name => 'shippingAddress1', traits => ['NameInRequest']);
  has ShippingAddress2 => (is => 'ro', isa => 'Str', request_name => 'shippingAddress2', traits => ['NameInRequest']);
  has ShippingAddress3 => (is => 'ro', isa => 'Str', request_name => 'shippingAddress3', traits => ['NameInRequest']);
  has ShippingAddress4 => (is => 'ro', isa => 'Str', request_name => 'shippingAddress4', traits => ['NameInRequest']);
  has ShippingCity => (is => 'ro', isa => 'Str', request_name => 'shippingCity', traits => ['NameInRequest']);
  has ShippingCountry => (is => 'ro', isa => 'Str', request_name => 'shippingCountry', traits => ['NameInRequest']);
  has ShippingCounty => (is => 'ro', isa => 'Str', request_name => 'shippingCounty', traits => ['NameInRequest']);
  has ShippingPostalCode => (is => 'ro', isa => 'Str', request_name => 'shippingPostalCode', traits => ['NameInRequest']);
  has ShippingProvince => (is => 'ro', isa => 'Str', request_name => 'shippingProvince', traits => ['NameInRequest']);
  has ShippingState => (is => 'ro', isa => 'Str', request_name => 'shippingState', traits => ['NameInRequest']);
  has State => (is => 'ro', isa => 'Str', request_name => 'state', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::QConnect::CustomerProfileAttributes

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::QConnect::CustomerProfileAttributes object:

  $service_obj->Method(Att1 => { AccountNumber => $value, ..., State => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::QConnect::CustomerProfileAttributes object:

  $result = $service_obj->Method(...);
  $result->Att1->AccountNumber

=head1 DESCRIPTION

The customer profile attributes that are used with the message
template.

=head1 ATTRIBUTES


=head2 AccountNumber => Str

A unique account number that you have given to the customer.


=head2 AdditionalInformation => Str

Any additional information relevant to the customer's profile.


=head2 Address1 => Str

The first line of a customer address.


=head2 Address2 => Str

The second line of a customer address.


=head2 Address3 => Str

The third line of a customer address.


=head2 Address4 => Str

The fourth line of a customer address.


=head2 BillingAddress1 => Str

The first line of a customerE<rsquo>s billing address.


=head2 BillingAddress2 => Str

The second line of a customerE<rsquo>s billing address.


=head2 BillingAddress3 => Str

The third line of a customerE<rsquo>s billing address.


=head2 BillingAddress4 => Str

The fourth line of a customerE<rsquo>s billing address.


=head2 BillingCity => Str

The city of a customerE<rsquo>s billing address.


=head2 BillingCountry => Str

The country of a customerE<rsquo>s billing address.


=head2 BillingCounty => Str

The county of a customerE<rsquo>s billing address.


=head2 BillingPostalCode => Str

The postal code of a customerE<rsquo>s billing address.


=head2 BillingProvince => Str

The province of a customerE<rsquo>s billing address.


=head2 BillingState => Str

The state of a customerE<rsquo>s billing address.


=head2 BirthDate => Str

The customer's birth date.


=head2 BusinessEmailAddress => Str

The customer's business email address.


=head2 BusinessName => Str

The name of the customer's business.


=head2 BusinessPhoneNumber => Str

The customer's business phone number.


=head2 City => Str

The city in which a customer lives.


=head2 Country => Str

The country in which a customer lives.


=head2 County => Str

The county in which a customer lives.


=head2 Custom => L<Paws::QConnect::CustomAttributes>

The custom attributes in customer profile attributes.


=head2 EmailAddress => Str

The customer's email address, which has not been specified as a
personal or business address.


=head2 FirstName => Str

The customer's first name.


=head2 Gender => Str

The customer's gender.


=head2 HomePhoneNumber => Str

The customer's mobile phone number.


=head2 LastName => Str

The customer's last name.


=head2 MailingAddress1 => Str

The first line of a customerE<rsquo>s mailing address.


=head2 MailingAddress2 => Str

The second line of a customerE<rsquo>s mailing address.


=head2 MailingAddress3 => Str

The third line of a customerE<rsquo>s mailing address.


=head2 MailingAddress4 => Str

The fourth line of a customerE<rsquo>s mailing address.


=head2 MailingCity => Str

The city of a customerE<rsquo>s mailing address.


=head2 MailingCountry => Str

The country of a customerE<rsquo>s mailing address.


=head2 MailingCounty => Str

The county of a customerE<rsquo>s mailing address.


=head2 MailingPostalCode => Str

The postal code of a customerE<rsquo>s mailing address.


=head2 MailingProvince => Str

The province of a customerE<rsquo>s mailing address.


=head2 MailingState => Str

The state of a customerE<rsquo>s mailing address.


=head2 MiddleName => Str

The customer's middle name.


=head2 MobilePhoneNumber => Str

The customer's mobile phone number.


=head2 PartyType => Str

The customer's party type.


=head2 PhoneNumber => Str

The customer's phone number, which has not been specified as a mobile,
home, or business number.


=head2 PostalCode => Str

The postal code of a customer address.


=head2 ProfileARN => Str

The ARN of a customer profile.


=head2 ProfileId => Str

The unique identifier of a customer profile.


=head2 Province => Str

The province in which a customer lives.


=head2 ShippingAddress1 => Str

The first line of a customerE<rsquo>s shipping address.


=head2 ShippingAddress2 => Str

The second line of a customerE<rsquo>s shipping address.


=head2 ShippingAddress3 => Str

The third line of a customerE<rsquo>s shipping address.


=head2 ShippingAddress4 => Str

The fourth line of a customerE<rsquo>s shipping address.


=head2 ShippingCity => Str

The city of a customerE<rsquo>s shipping address.


=head2 ShippingCountry => Str

The country of a customerE<rsquo>s shipping address.


=head2 ShippingCounty => Str

The county of a customerE<rsquo>s shipping address.


=head2 ShippingPostalCode => Str

The postal code of a customerE<rsquo>s shipping address.


=head2 ShippingProvince => Str

The province of a customerE<rsquo>s shipping address.


=head2 ShippingState => Str

The state of a customerE<rsquo>s shipping address.


=head2 State => Str

The state in which a customer lives.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::QConnect>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

