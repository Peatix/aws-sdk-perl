# Generated by default/object.tt
package Paws::SNS::PublishBatchRequestEntry;
  use Moose;
  has Id => (is => 'ro', isa => 'Str', required => 1);
  has Message => (is => 'ro', isa => 'Str', required => 1);
  has MessageAttributes => (is => 'ro', isa => 'Paws::SNS::MessageAttributeMap');
  has MessageDeduplicationId => (is => 'ro', isa => 'Str');
  has MessageGroupId => (is => 'ro', isa => 'Str');
  has MessageStructure => (is => 'ro', isa => 'Str');
  has Subject => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::SNS::PublishBatchRequestEntry

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SNS::PublishBatchRequestEntry object:

  $service_obj->Method(Att1 => { Id => $value, ..., Subject => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SNS::PublishBatchRequestEntry object:

  $result = $service_obj->Method(...);
  $result->Att1->Id

=head1 DESCRIPTION

Contains the details of a single Amazon SNS message along with an C<Id>
that identifies a message within the batch.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Id => Str

An identifier for the message in this batch.

The C<Ids> of a batch request must be unique within a request.

This identifier can have up to 80 characters. The following characters
are accepted: alphanumeric characters, hyphens(-), and underscores (_).


=head2 B<REQUIRED> Message => Str

The body of the message.


=head2 MessageAttributes => L<Paws::SNS::MessageAttributeMap>

Each message attribute consists of a C<Name>, C<Type>, and C<Value>.
For more information, see Amazon SNS message attributes
(https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html)
in the Amazon SNS Developer Guide.


=head2 MessageDeduplicationId => Str

This parameter applies only to FIFO (first-in-first-out) topics.

=over

=item *

This parameter applies only to FIFO (first-in-first-out) topics. The
C<MessageDeduplicationId> can contain up to 128 alphanumeric characters
C<(a-z, A-Z, 0-9)> and punctuation
C<(!"#$%&'()*+,-./:;E<lt>=E<gt>?@[\]^_`{|}~)>.

=item *

Every message must have a unique C<MessageDeduplicationId>, which is a
token used for deduplication of sent messages within the 5 minute
minimum deduplication interval.

=item *

The scope of deduplication depends on the C<FifoThroughputScope>
attribute, when set to C<Topic> the message deduplication scope is
across the entire topic, when set to C<MessageGroup> the message
deduplication scope is within each individual message group.

=item *

If a message with a particular C<MessageDeduplicationId> is sent
successfully, subsequent messages within the deduplication scope and
interval, with the same C<MessageDeduplicationId>, are accepted
successfully but aren't delivered.

=item *

Every message must have a unique C<MessageDeduplicationId>.

=over

=item *

You may provide a C<MessageDeduplicationId> explicitly.

=item *

If you aren't able to provide a C<MessageDeduplicationId> and you
enable C<ContentBasedDeduplication> for your topic, Amazon SNS uses a
SHA-256 hash to generate the C<MessageDeduplicationId> using the body
of the message (but not the attributes of the message).

=item *

If you don't provide a C<MessageDeduplicationId> and the topic doesn't
have C<ContentBasedDeduplication> set, the action fails with an error.

=item *

If the topic has a C<ContentBasedDeduplication> set, your
C<MessageDeduplicationId> overrides the generated one.

=back

=item *

When C<ContentBasedDeduplication> is in effect, messages with identical
content sent within the deduplication scope and interval are treated as
duplicates and only one copy of the message is delivered.

=item *

If you send one message with C<ContentBasedDeduplication> enabled, and
then another message with a C<MessageDeduplicationId> that is the same
as the one generated for the first C<MessageDeduplicationId>, the two
messages are treated as duplicates, within the deduplication scope and
interval, and only one copy of the message is delivered.

=back

The C<MessageDeduplicationId> is available to the consumer of the
message (this can be useful for troubleshooting delivery issues).

If a message is sent successfully but the acknowledgement is lost and
the message is resent with the same C<MessageDeduplicationId> after the
deduplication interval, Amazon SNS can't detect duplicate messages.

Amazon SNS continues to keep track of the message deduplication ID even
after the message is received and deleted.


=head2 MessageGroupId => Str

This parameter applies only to FIFO (first-in-first-out) topics.

The tag that specifies that a message belongs to a specific message
group. Messages that belong to the same message group are processed in
a FIFO manner (however, messages in different message groups might be
processed out of order). To interleave multiple ordered streams within
a single topic, use C<MessageGroupId> values (for example, session data
for multiple users). In this scenario, multiple consumers can process
the topic, but the session data of each user is processed in a FIFO
fashion.

You must associate a non-empty C<MessageGroupId> with a message. If you
don't provide a C<MessageGroupId>, the action fails.

The length of C<MessageGroupId> is 128 characters.

C<MessageGroupId> can contain alphanumeric characters C<(a-z, A-Z,
0-9)> and punctuation C<(!"#$%&'()*+,-./:;E<lt>=E<gt>?@[\]^_`{|}~)>.

C<MessageGroupId> is required for FIFO topics. You can't use it for
standard topics.


=head2 MessageStructure => Str

Set C<MessageStructure> to C<json> if you want to send a different
message for each protocol. For example, using one publish action, you
can send a short message to your SMS subscribers and a longer message
to your email subscribers. If you set C<MessageStructure> to C<json>,
the value of the C<Message> parameter must:

=over

=item *

be a syntactically valid JSON object; and

=item *

contain at least a top-level JSON key of "default" with a value that is
a string.

=back

You can define other top-level keys that define the message you want to
send to a specific transport protocol (e.g. http).


=head2 Subject => Str

The subject of the batch message.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SNS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

