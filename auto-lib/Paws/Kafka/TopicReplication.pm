# Generated by default/object.tt
package Paws::Kafka::TopicReplication;
  use Moose;
  has CopyAccessControlListsForTopics => (is => 'ro', isa => 'Bool', request_name => 'copyAccessControlListsForTopics', traits => ['NameInRequest']);
  has CopyTopicConfigurations => (is => 'ro', isa => 'Bool', request_name => 'copyTopicConfigurations', traits => ['NameInRequest']);
  has DetectAndCopyNewTopics => (is => 'ro', isa => 'Bool', request_name => 'detectAndCopyNewTopics', traits => ['NameInRequest']);
  has StartingPosition => (is => 'ro', isa => 'Paws::Kafka::ReplicationStartingPosition', request_name => 'startingPosition', traits => ['NameInRequest']);
  has TopicNameConfiguration => (is => 'ro', isa => 'Paws::Kafka::ReplicationTopicNameConfiguration', request_name => 'topicNameConfiguration', traits => ['NameInRequest']);
  has TopicsToExclude => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'topicsToExclude', traits => ['NameInRequest']);
  has TopicsToReplicate => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'topicsToReplicate', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Kafka::TopicReplication

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Kafka::TopicReplication object:

  $service_obj->Method(Att1 => { CopyAccessControlListsForTopics => $value, ..., TopicsToReplicate => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Kafka::TopicReplication object:

  $result = $service_obj->Method(...);
  $result->Att1->CopyAccessControlListsForTopics

=head1 DESCRIPTION

Details about topic replication.

=head1 ATTRIBUTES


=head2 CopyAccessControlListsForTopics => Bool

Whether to periodically configure remote topic ACLs to match their
corresponding upstream topics.


=head2 CopyTopicConfigurations => Bool

Whether to periodically configure remote topics to match their
corresponding upstream topics.


=head2 DetectAndCopyNewTopics => Bool

Whether to periodically check for new topics and partitions.


=head2 StartingPosition => L<Paws::Kafka::ReplicationStartingPosition>

Configuration for specifying the position in the topics to start
replicating from.


=head2 TopicNameConfiguration => L<Paws::Kafka::ReplicationTopicNameConfiguration>

Configuration for specifying replicated topic names should be the same
as their corresponding upstream topics or prefixed with source cluster
alias.


=head2 TopicsToExclude => ArrayRef[Str|Undef]

List of regular expression patterns indicating the topics that should
not be replicated.


=head2 B<REQUIRED> TopicsToReplicate => ArrayRef[Str|Undef]

List of regular expression patterns indicating the topics to copy.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Kafka>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

