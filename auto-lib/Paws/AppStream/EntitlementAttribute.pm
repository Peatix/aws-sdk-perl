# Generated by default/object.tt
package Paws::AppStream::EntitlementAttribute;
  use Moose;
  has Name => (is => 'ro', isa => 'Str', required => 1);
  has Value => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::AppStream::EntitlementAttribute

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::AppStream::EntitlementAttribute object:

  $service_obj->Method(Att1 => { Name => $value, ..., Value => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::AppStream::EntitlementAttribute object:

  $result = $service_obj->Method(...);
  $result->Att1->Name

=head1 DESCRIPTION

An attribute associated with an entitlement. Application entitlements
work by matching a supported SAML 2.0 attribute name to a value when a
user identity federates to an Amazon AppStream 2.0 SAML application.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Name => Str

A supported AWS IAM SAML C<PrincipalTag> attribute that is matched to
the associated value when a user identity federates into an Amazon
AppStream 2.0 SAML application.

The following are valid values:

=over

=item *

roles

=item *

department

=item *

organization

=item *

groups

=item *

title

=item *

costCenter

=item *

userType

=back



=head2 B<REQUIRED> Value => Str

A value that is matched to a supported SAML attribute name when a user
identity federates into an Amazon AppStream 2.0 SAML application.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::AppStream>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

