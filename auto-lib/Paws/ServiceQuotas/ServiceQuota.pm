# Generated by default/object.tt
package Paws::ServiceQuotas::ServiceQuota;
  use Moose;
  has Adjustable => (is => 'ro', isa => 'Bool');
  has Description => (is => 'ro', isa => 'Str');
  has ErrorReason => (is => 'ro', isa => 'Paws::ServiceQuotas::ErrorReason');
  has GlobalQuota => (is => 'ro', isa => 'Bool');
  has Period => (is => 'ro', isa => 'Paws::ServiceQuotas::QuotaPeriod');
  has QuotaAppliedAtLevel => (is => 'ro', isa => 'Str');
  has QuotaArn => (is => 'ro', isa => 'Str');
  has QuotaCode => (is => 'ro', isa => 'Str');
  has QuotaContext => (is => 'ro', isa => 'Paws::ServiceQuotas::QuotaContextInfo');
  has QuotaName => (is => 'ro', isa => 'Str');
  has ServiceCode => (is => 'ro', isa => 'Str');
  has ServiceName => (is => 'ro', isa => 'Str');
  has Unit => (is => 'ro', isa => 'Str');
  has UsageMetric => (is => 'ro', isa => 'Paws::ServiceQuotas::MetricInfo');
  has Value => (is => 'ro', isa => 'Num');

1;

### main pod documentation begin ###

=head1 NAME

Paws::ServiceQuotas::ServiceQuota

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ServiceQuotas::ServiceQuota object:

  $service_obj->Method(Att1 => { Adjustable => $value, ..., Value => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ServiceQuotas::ServiceQuota object:

  $result = $service_obj->Method(...);
  $result->Att1->Adjustable

=head1 DESCRIPTION

Information about a quota.

=head1 ATTRIBUTES


=head2 Adjustable => Bool

Indicates whether the quota value can be increased.


=head2 Description => Str

The quota description.


=head2 ErrorReason => L<Paws::ServiceQuotas::ErrorReason>

The error code and error reason.


=head2 GlobalQuota => Bool

Indicates whether the quota is global.


=head2 Period => L<Paws::ServiceQuotas::QuotaPeriod>

The period of time.


=head2 QuotaAppliedAtLevel => Str

Filters the response to return applied quota values for the C<ACCOUNT>,
C<RESOURCE>, or C<ALL> levels. C<ACCOUNT> is the default.


=head2 QuotaArn => Str

The Amazon Resource Name (ARN) of the quota.


=head2 QuotaCode => Str

Specifies the quota identifier. To find the quota code for a specific
quota, use the ListServiceQuotas operation, and look for the
C<QuotaCode> response in the output for the quota you want.


=head2 QuotaContext => L<Paws::ServiceQuotas::QuotaContextInfo>

The context for this service quota.


=head2 QuotaName => Str

Specifies the quota name.


=head2 ServiceCode => Str

Specifies the service identifier. To find the service code value for an
Amazon Web Services service, use the ListServices operation.


=head2 ServiceName => Str

Specifies the service name.


=head2 Unit => Str

The unit of measurement.


=head2 UsageMetric => L<Paws::ServiceQuotas::MetricInfo>

Information about the measurement.


=head2 Value => Num

The quota value.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ServiceQuotas>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

