# Generated by default/object.tt
package Paws::IVSRealTime::Composition;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest'], required => 1);
  has Destinations => (is => 'ro', isa => 'ArrayRef[Paws::IVSRealTime::Destination]', request_name => 'destinations', traits => ['NameInRequest'], required => 1);
  has EndTime => (is => 'ro', isa => 'Str', request_name => 'endTime', traits => ['NameInRequest']);
  has Layout => (is => 'ro', isa => 'Paws::IVSRealTime::LayoutConfiguration', request_name => 'layout', traits => ['NameInRequest'], required => 1);
  has StageArn => (is => 'ro', isa => 'Str', request_name => 'stageArn', traits => ['NameInRequest'], required => 1);
  has StartTime => (is => 'ro', isa => 'Str', request_name => 'startTime', traits => ['NameInRequest']);
  has State => (is => 'ro', isa => 'Str', request_name => 'state', traits => ['NameInRequest'], required => 1);
  has Tags => (is => 'ro', isa => 'Paws::IVSRealTime::Tags', request_name => 'tags', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::IVSRealTime::Composition

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::IVSRealTime::Composition object:

  $service_obj->Method(Att1 => { Arn => $value, ..., Tags => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::IVSRealTime::Composition object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

Object specifying a Composition resource.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Arn => Str

ARN of the Composition resource.


=head2 B<REQUIRED> Destinations => ArrayRef[L<Paws::IVSRealTime::Destination>]

Array of Destination objects. A Composition can contain either one
destination (C<channel> or C<s3>) or two (one C<channel> and one
C<s3>).


=head2 EndTime => Str

UTC time of the Composition end. This is an ISO 8601 timestamp; I<note
that this is returned as a string>.


=head2 B<REQUIRED> Layout => L<Paws::IVSRealTime::LayoutConfiguration>

Layout object to configure composition parameters.


=head2 B<REQUIRED> StageArn => Str

ARN of the stage used as input


=head2 StartTime => Str

UTC time of the Composition start. This is an ISO 8601 timestamp;
I<note that this is returned as a string>.


=head2 B<REQUIRED> State => Str

State of the Composition.


=head2 Tags => L<Paws::IVSRealTime::Tags>

Tags attached to the resource. Array of maps, each of the form
C<string:string (key:value)>. See Best practices and strategies
(https://docs.aws.amazon.com/tag-editor/latest/userguide/best-practices-and-strats.html)
in I<Tagging AWS Resources and Tag Editor> for details, including
restrictions that apply to tags and "Tag naming limits and
requirements"; Amazon IVS has no constraints on tags beyond what is
documented there.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::IVSRealTime>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

