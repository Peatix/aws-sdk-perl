# Generated by default/object.tt
package Paws::Wisdom::ContentSummary;
  use Moose;
  has ContentArn => (is => 'ro', isa => 'Str', request_name => 'contentArn', traits => ['NameInRequest'], required => 1);
  has ContentId => (is => 'ro', isa => 'Str', request_name => 'contentId', traits => ['NameInRequest'], required => 1);
  has ContentType => (is => 'ro', isa => 'Str', request_name => 'contentType', traits => ['NameInRequest'], required => 1);
  has KnowledgeBaseArn => (is => 'ro', isa => 'Str', request_name => 'knowledgeBaseArn', traits => ['NameInRequest'], required => 1);
  has KnowledgeBaseId => (is => 'ro', isa => 'Str', request_name => 'knowledgeBaseId', traits => ['NameInRequest'], required => 1);
  has Metadata => (is => 'ro', isa => 'Paws::Wisdom::ContentMetadata', request_name => 'metadata', traits => ['NameInRequest'], required => 1);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest'], required => 1);
  has RevisionId => (is => 'ro', isa => 'Str', request_name => 'revisionId', traits => ['NameInRequest'], required => 1);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest'], required => 1);
  has Tags => (is => 'ro', isa => 'Paws::Wisdom::Tags', request_name => 'tags', traits => ['NameInRequest']);
  has Title => (is => 'ro', isa => 'Str', request_name => 'title', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Wisdom::ContentSummary

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Wisdom::ContentSummary object:

  $service_obj->Method(Att1 => { ContentArn => $value, ..., Title => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Wisdom::ContentSummary object:

  $result = $service_obj->Method(...);
  $result->Att1->ContentArn

=head1 DESCRIPTION

Summary information about the content.

=head1 ATTRIBUTES


=head2 B<REQUIRED> ContentArn => Str

The Amazon Resource Name (ARN) of the content.


=head2 B<REQUIRED> ContentId => Str

The identifier of the content.


=head2 B<REQUIRED> ContentType => Str

The media type of the content.


=head2 B<REQUIRED> KnowledgeBaseArn => Str

The Amazon Resource Name (ARN) of the knowledge base.


=head2 B<REQUIRED> KnowledgeBaseId => Str

The identifier of the knowledge base. This should not be a
QUICK_RESPONSES type knowledge base if you're storing Wisdom Content
resource to it.


=head2 B<REQUIRED> Metadata => L<Paws::Wisdom::ContentMetadata>

A key/value map to store attributes without affecting tagging or
recommendations. For example, when synchronizing data between an
external system and Wisdom, you can store an external version
identifier as metadata to utilize for determining drift.


=head2 B<REQUIRED> Name => Str

The name of the content.


=head2 B<REQUIRED> RevisionId => Str

The identifier of the revision of the content.


=head2 B<REQUIRED> Status => Str

The status of the content.


=head2 Tags => L<Paws::Wisdom::Tags>

The tags used to organize, track, or control access for this resource.


=head2 B<REQUIRED> Title => Str

The title of the content.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Wisdom>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

