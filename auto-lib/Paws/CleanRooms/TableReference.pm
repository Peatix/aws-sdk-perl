# Generated by default/object.tt
package Paws::CleanRooms::TableReference;
  use Moose;
  has Athena => (is => 'ro', isa => 'Paws::CleanRooms::AthenaTableReference', request_name => 'athena', traits => ['NameInRequest']);
  has Glue => (is => 'ro', isa => 'Paws::CleanRooms::GlueTableReference', request_name => 'glue', traits => ['NameInRequest']);
  has Snowflake => (is => 'ro', isa => 'Paws::CleanRooms::SnowflakeTableReference', request_name => 'snowflake', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::CleanRooms::TableReference

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CleanRooms::TableReference object:

  $service_obj->Method(Att1 => { Athena => $value, ..., Snowflake => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CleanRooms::TableReference object:

  $result = $service_obj->Method(...);
  $result->Att1->Athena

=head1 DESCRIPTION

A pointer to the dataset that underlies this table.

=head1 ATTRIBUTES


=head2 Athena => L<Paws::CleanRooms::AthenaTableReference>

If present, a reference to the Athena table referred to by this table
reference.


=head2 Glue => L<Paws::CleanRooms::GlueTableReference>

If present, a reference to the Glue table referred to by this table
reference.


=head2 Snowflake => L<Paws::CleanRooms::SnowflakeTableReference>

If present, a reference to the Snowflake table referred to by this
table reference.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CleanRooms>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

