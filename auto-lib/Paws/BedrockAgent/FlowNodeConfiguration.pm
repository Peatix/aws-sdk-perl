# Generated by default/object.tt
package Paws::BedrockAgent::FlowNodeConfiguration;
  use Moose;
  has Agent => (is => 'ro', isa => 'Paws::BedrockAgent::AgentFlowNodeConfiguration', request_name => 'agent', traits => ['NameInRequest']);
  has Collector => (is => 'ro', isa => 'Paws::BedrockAgent::CollectorFlowNodeConfiguration', request_name => 'collector', traits => ['NameInRequest']);
  has Condition => (is => 'ro', isa => 'Paws::BedrockAgent::ConditionFlowNodeConfiguration', request_name => 'condition', traits => ['NameInRequest']);
  has InlineCode => (is => 'ro', isa => 'Paws::BedrockAgent::InlineCodeFlowNodeConfiguration', request_name => 'inlineCode', traits => ['NameInRequest']);
  has Input => (is => 'ro', isa => 'Paws::BedrockAgent::InputFlowNodeConfiguration', request_name => 'input', traits => ['NameInRequest']);
  has Iterator => (is => 'ro', isa => 'Paws::BedrockAgent::IteratorFlowNodeConfiguration', request_name => 'iterator', traits => ['NameInRequest']);
  has KnowledgeBase => (is => 'ro', isa => 'Paws::BedrockAgent::KnowledgeBaseFlowNodeConfiguration', request_name => 'knowledgeBase', traits => ['NameInRequest']);
  has LambdaFunction => (is => 'ro', isa => 'Paws::BedrockAgent::LambdaFunctionFlowNodeConfiguration', request_name => 'lambdaFunction', traits => ['NameInRequest']);
  has Lex => (is => 'ro', isa => 'Paws::BedrockAgent::LexFlowNodeConfiguration', request_name => 'lex', traits => ['NameInRequest']);
  has Loop => (is => 'ro', isa => 'Paws::BedrockAgent::LoopFlowNodeConfiguration', request_name => 'loop', traits => ['NameInRequest']);
  has LoopController => (is => 'ro', isa => 'Paws::BedrockAgent::LoopControllerFlowNodeConfiguration', request_name => 'loopController', traits => ['NameInRequest']);
  has LoopInput => (is => 'ro', isa => 'Paws::BedrockAgent::LoopInputFlowNodeConfiguration', request_name => 'loopInput', traits => ['NameInRequest']);
  has Output => (is => 'ro', isa => 'Paws::BedrockAgent::OutputFlowNodeConfiguration', request_name => 'output', traits => ['NameInRequest']);
  has Prompt => (is => 'ro', isa => 'Paws::BedrockAgent::PromptFlowNodeConfiguration', request_name => 'prompt', traits => ['NameInRequest']);
  has Retrieval => (is => 'ro', isa => 'Paws::BedrockAgent::RetrievalFlowNodeConfiguration', request_name => 'retrieval', traits => ['NameInRequest']);
  has Storage => (is => 'ro', isa => 'Paws::BedrockAgent::StorageFlowNodeConfiguration', request_name => 'storage', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::BedrockAgent::FlowNodeConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::BedrockAgent::FlowNodeConfiguration object:

  $service_obj->Method(Att1 => { Agent => $value, ..., Storage => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::BedrockAgent::FlowNodeConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->Agent

=head1 DESCRIPTION

Contains configurations for a node in your flow. For more information,
see Node types in a flow
(https://docs.aws.amazon.com/bedrock/latest/userguide/flows-nodes.html)
in the Amazon Bedrock User Guide.

=head1 ATTRIBUTES


=head2 Agent => L<Paws::BedrockAgent::AgentFlowNodeConfiguration>

Contains configurations for an agent node in your flow. Invokes an
alias of an agent and returns the response.


=head2 Collector => L<Paws::BedrockAgent::CollectorFlowNodeConfiguration>

Contains configurations for a collector node in your flow. Collects an
iteration of inputs and consolidates them into an array of outputs.


=head2 Condition => L<Paws::BedrockAgent::ConditionFlowNodeConfiguration>

Contains configurations for a condition node in your flow. Defines
conditions that lead to different branches of the flow.


=head2 InlineCode => L<Paws::BedrockAgent::InlineCodeFlowNodeConfiguration>

Contains configurations for an inline code node in your flow. Inline
code nodes let you write and execute code directly within your flow,
enabling data transformations, custom logic, and integrations without
needing an external Lambda function.


=head2 Input => L<Paws::BedrockAgent::InputFlowNodeConfiguration>

Contains configurations for an input flow node in your flow. The first
node in the flow. C<inputs> can't be specified for this node.


=head2 Iterator => L<Paws::BedrockAgent::IteratorFlowNodeConfiguration>

Contains configurations for an iterator node in your flow. Takes an
input that is an array and iteratively sends each item of the array as
an output to the following node. The size of the array is also returned
in the output.

The output flow node at the end of the flow iteration will return a
response for each member of the array. To return only one response, you
can include a collector node downstream from the iterator node.


=head2 KnowledgeBase => L<Paws::BedrockAgent::KnowledgeBaseFlowNodeConfiguration>

Contains configurations for a knowledge base node in your flow. Queries
a knowledge base and returns the retrieved results or generated
response.


=head2 LambdaFunction => L<Paws::BedrockAgent::LambdaFunctionFlowNodeConfiguration>

Contains configurations for a Lambda function node in your flow.
Invokes an Lambda function.


=head2 Lex => L<Paws::BedrockAgent::LexFlowNodeConfiguration>

Contains configurations for a Lex node in your flow. Invokes an Amazon
Lex bot to identify the intent of the input and return the intent as
the output.


=head2 Loop => L<Paws::BedrockAgent::LoopFlowNodeConfiguration>

Contains configurations for a DoWhile loop in your flow.


=head2 LoopController => L<Paws::BedrockAgent::LoopControllerFlowNodeConfiguration>

Contains controller node configurations for a DoWhile loop in your
flow.


=head2 LoopInput => L<Paws::BedrockAgent::LoopInputFlowNodeConfiguration>

Contains input node configurations for a DoWhile loop in your flow.


=head2 Output => L<Paws::BedrockAgent::OutputFlowNodeConfiguration>

Contains configurations for an output flow node in your flow. The last
node in the flow. C<outputs> can't be specified for this node.


=head2 Prompt => L<Paws::BedrockAgent::PromptFlowNodeConfiguration>

Contains configurations for a prompt node in your flow. Runs a prompt
and generates the model response as the output. You can use a prompt
from Prompt management or you can configure one in this node.


=head2 Retrieval => L<Paws::BedrockAgent::RetrievalFlowNodeConfiguration>

Contains configurations for a retrieval node in your flow. Retrieves
data from an Amazon S3 location and returns it as the output.


=head2 Storage => L<Paws::BedrockAgent::StorageFlowNodeConfiguration>

Contains configurations for a storage node in your flow. Stores an
input in an Amazon S3 location.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::BedrockAgent>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

