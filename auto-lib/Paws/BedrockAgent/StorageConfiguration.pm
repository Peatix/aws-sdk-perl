# Generated by default/object.tt
package Paws::BedrockAgent::StorageConfiguration;
  use Moose;
  has MongoDbAtlasConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::MongoDbAtlasConfiguration', request_name => 'mongoDbAtlasConfiguration', traits => ['NameInRequest']);
  has NeptuneAnalyticsConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::NeptuneAnalyticsConfiguration', request_name => 'neptuneAnalyticsConfiguration', traits => ['NameInRequest']);
  has OpensearchManagedClusterConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::OpenSearchManagedClusterConfiguration', request_name => 'opensearchManagedClusterConfiguration', traits => ['NameInRequest']);
  has OpensearchServerlessConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::OpenSearchServerlessConfiguration', request_name => 'opensearchServerlessConfiguration', traits => ['NameInRequest']);
  has PineconeConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::PineconeConfiguration', request_name => 'pineconeConfiguration', traits => ['NameInRequest']);
  has RdsConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::RdsConfiguration', request_name => 'rdsConfiguration', traits => ['NameInRequest']);
  has RedisEnterpriseCloudConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::RedisEnterpriseCloudConfiguration', request_name => 'redisEnterpriseCloudConfiguration', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::BedrockAgent::StorageConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::BedrockAgent::StorageConfiguration object:

  $service_obj->Method(Att1 => { MongoDbAtlasConfiguration => $value, ..., Type => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::BedrockAgent::StorageConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->MongoDbAtlasConfiguration

=head1 DESCRIPTION

Contains the storage configuration of the knowledge base.

=head1 ATTRIBUTES


=head2 MongoDbAtlasConfiguration => L<Paws::BedrockAgent::MongoDbAtlasConfiguration>

Contains the storage configuration of the knowledge base in MongoDB
Atlas.


=head2 NeptuneAnalyticsConfiguration => L<Paws::BedrockAgent::NeptuneAnalyticsConfiguration>

Contains details about the Neptune Analytics configuration of the
knowledge base in Amazon Neptune. For more information, see Create a
vector index in Amazon Neptune Analytics.
(https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-neptune.html).


=head2 OpensearchManagedClusterConfiguration => L<Paws::BedrockAgent::OpenSearchManagedClusterConfiguration>

Contains details about the storage configuration of the knowledge base
in OpenSearch Managed Cluster. For more information, see Create a
vector index in Amazon OpenSearch Service
(https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-osm.html).


=head2 OpensearchServerlessConfiguration => L<Paws::BedrockAgent::OpenSearchServerlessConfiguration>

Contains the storage configuration of the knowledge base in Amazon
OpenSearch Service.


=head2 PineconeConfiguration => L<Paws::BedrockAgent::PineconeConfiguration>

Contains the storage configuration of the knowledge base in Pinecone.


=head2 RdsConfiguration => L<Paws::BedrockAgent::RdsConfiguration>

Contains details about the storage configuration of the knowledge base
in Amazon RDS. For more information, see Create a vector index in
Amazon RDS
(https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html).


=head2 RedisEnterpriseCloudConfiguration => L<Paws::BedrockAgent::RedisEnterpriseCloudConfiguration>

Contains the storage configuration of the knowledge base in Redis
Enterprise Cloud.


=head2 B<REQUIRED> Type => Str

The vector store service in which the knowledge base is stored.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::BedrockAgent>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

