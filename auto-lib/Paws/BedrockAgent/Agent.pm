# Generated by default/object.tt
package Paws::BedrockAgent::Agent;
  use Moose;
  has AgentArn => (is => 'ro', isa => 'Str', request_name => 'agentArn', traits => ['NameInRequest'], required => 1);
  has AgentCollaboration => (is => 'ro', isa => 'Str', request_name => 'agentCollaboration', traits => ['NameInRequest']);
  has AgentId => (is => 'ro', isa => 'Str', request_name => 'agentId', traits => ['NameInRequest'], required => 1);
  has AgentName => (is => 'ro', isa => 'Str', request_name => 'agentName', traits => ['NameInRequest'], required => 1);
  has AgentResourceRoleArn => (is => 'ro', isa => 'Str', request_name => 'agentResourceRoleArn', traits => ['NameInRequest'], required => 1);
  has AgentStatus => (is => 'ro', isa => 'Str', request_name => 'agentStatus', traits => ['NameInRequest'], required => 1);
  has AgentVersion => (is => 'ro', isa => 'Str', request_name => 'agentVersion', traits => ['NameInRequest'], required => 1);
  has ClientToken => (is => 'ro', isa => 'Str', request_name => 'clientToken', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest'], required => 1);
  has CustomerEncryptionKeyArn => (is => 'ro', isa => 'Str', request_name => 'customerEncryptionKeyArn', traits => ['NameInRequest']);
  has CustomOrchestration => (is => 'ro', isa => 'Paws::BedrockAgent::CustomOrchestration', request_name => 'customOrchestration', traits => ['NameInRequest']);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest']);
  has FailureReasons => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'failureReasons', traits => ['NameInRequest']);
  has FoundationModel => (is => 'ro', isa => 'Str', request_name => 'foundationModel', traits => ['NameInRequest']);
  has GuardrailConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::GuardrailConfiguration', request_name => 'guardrailConfiguration', traits => ['NameInRequest']);
  has IdleSessionTTLInSeconds => (is => 'ro', isa => 'Int', request_name => 'idleSessionTTLInSeconds', traits => ['NameInRequest'], required => 1);
  has Instruction => (is => 'ro', isa => 'Str', request_name => 'instruction', traits => ['NameInRequest']);
  has MemoryConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::MemoryConfiguration', request_name => 'memoryConfiguration', traits => ['NameInRequest']);
  has OrchestrationType => (is => 'ro', isa => 'Str', request_name => 'orchestrationType', traits => ['NameInRequest']);
  has PreparedAt => (is => 'ro', isa => 'Str', request_name => 'preparedAt', traits => ['NameInRequest']);
  has PromptOverrideConfiguration => (is => 'ro', isa => 'Paws::BedrockAgent::PromptOverrideConfiguration', request_name => 'promptOverrideConfiguration', traits => ['NameInRequest']);
  has RecommendedActions => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'recommendedActions', traits => ['NameInRequest']);
  has UpdatedAt => (is => 'ro', isa => 'Str', request_name => 'updatedAt', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::BedrockAgent::Agent

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::BedrockAgent::Agent object:

  $service_obj->Method(Att1 => { AgentArn => $value, ..., UpdatedAt => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::BedrockAgent::Agent object:

  $result = $service_obj->Method(...);
  $result->Att1->AgentArn

=head1 DESCRIPTION

Contains details about an agent.

=head1 ATTRIBUTES


=head2 B<REQUIRED> AgentArn => Str

The Amazon Resource Name (ARN) of the agent.


=head2 AgentCollaboration => Str

The agent's collaboration settings.


=head2 B<REQUIRED> AgentId => Str

The unique identifier of the agent.


=head2 B<REQUIRED> AgentName => Str

The name of the agent.


=head2 B<REQUIRED> AgentResourceRoleArn => Str

The Amazon Resource Name (ARN) of the IAM role with permissions to
invoke API operations on the agent.


=head2 B<REQUIRED> AgentStatus => Str

The status of the agent and whether it is ready for use. The following
statuses are possible:

=over

=item *

CREATING E<ndash> The agent is being created.

=item *

PREPARING E<ndash> The agent is being prepared.

=item *

PREPARED E<ndash> The agent is prepared and ready to be invoked.

=item *

NOT_PREPARED E<ndash> The agent has been created but not yet prepared.

=item *

FAILED E<ndash> The agent API operation failed.

=item *

UPDATING E<ndash> The agent is being updated.

=item *

DELETING E<ndash> The agent is being deleted.

=back



=head2 B<REQUIRED> AgentVersion => Str

The version of the agent.


=head2 ClientToken => Str

A unique, case-sensitive identifier to ensure that the API request
completes no more than one time. If this token matches a previous
request, Amazon Bedrock ignores the request, but does not return an
error. For more information, see Ensuring idempotency
(https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).


=head2 B<REQUIRED> CreatedAt => Str

The time at which the agent was created.


=head2 CustomerEncryptionKeyArn => Str

The Amazon Resource Name (ARN) of the KMS key that encrypts the agent.


=head2 CustomOrchestration => L<Paws::BedrockAgent::CustomOrchestration>

Contains custom orchestration configurations for the agent.


=head2 Description => Str

The description of the agent.


=head2 FailureReasons => ArrayRef[Str|Undef]

Contains reasons that the agent-related API that you invoked failed.


=head2 FoundationModel => Str

The foundation model used for orchestration by the agent.


=head2 GuardrailConfiguration => L<Paws::BedrockAgent::GuardrailConfiguration>

Details about the guardrail associated with the agent.


=head2 B<REQUIRED> IdleSessionTTLInSeconds => Int

The number of seconds for which Amazon Bedrock keeps information about
a user's conversation with the agent.

A user interaction remains active for the amount of time specified. If
no conversation occurs during this time, the session expires and Amazon
Bedrock deletes any data provided before the timeout.


=head2 Instruction => Str

Instructions that tell the agent what it should do and how it should
interact with users.


=head2 MemoryConfiguration => L<Paws::BedrockAgent::MemoryConfiguration>

Contains memory configuration for the agent.


=head2 OrchestrationType => Str

Specifies the orchestration strategy for the agent.


=head2 PreparedAt => Str

The time at which the agent was last prepared.


=head2 PromptOverrideConfiguration => L<Paws::BedrockAgent::PromptOverrideConfiguration>

Contains configurations to override prompt templates in different parts
of an agent sequence. For more information, see Advanced prompts
(https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).


=head2 RecommendedActions => ArrayRef[Str|Undef]

Contains recommended actions to take for the agent-related API that you
invoked to succeed.


=head2 B<REQUIRED> UpdatedAt => Str

The time at which the agent was last updated.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::BedrockAgent>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

