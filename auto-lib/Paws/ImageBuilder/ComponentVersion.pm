# Generated by default/object.tt
package Paws::ImageBuilder::ComponentVersion;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest']);
  has DateCreated => (is => 'ro', isa => 'Str', request_name => 'dateCreated', traits => ['NameInRequest']);
  has Description => (is => 'ro', isa => 'Str', request_name => 'description', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has Owner => (is => 'ro', isa => 'Str', request_name => 'owner', traits => ['NameInRequest']);
  has Platform => (is => 'ro', isa => 'Str', request_name => 'platform', traits => ['NameInRequest']);
  has ProductCodes => (is => 'ro', isa => 'ArrayRef[Paws::ImageBuilder::ProductCodeListItem]', request_name => 'productCodes', traits => ['NameInRequest']);
  has Status => (is => 'ro', isa => 'Str', request_name => 'status', traits => ['NameInRequest']);
  has SupportedOsVersions => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'supportedOsVersions', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest']);
  has Version => (is => 'ro', isa => 'Str', request_name => 'version', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ImageBuilder::ComponentVersion

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ImageBuilder::ComponentVersion object:

  $service_obj->Method(Att1 => { Arn => $value, ..., Version => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ImageBuilder::ComponentVersion object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

The defining characteristics of a specific version of an Amazon Web
Services TOE component.

=head1 ATTRIBUTES


=head2 Arn => Str

The Amazon Resource Name (ARN) of the component.

Semantic versioning is included in each object's Amazon Resource Name
(ARN), at the level that applies to that object as follows:

=over

=item 1.

Versionless ARNs and Name ARNs do not include specific values in any of
the nodes. The nodes are either left off entirely, or they are
specified as wildcards, for example: x.x.x.

=item 2.

Version ARNs have only the first three nodes:
E<lt>majorE<gt>.E<lt>minorE<gt>.E<lt>patchE<gt>

=item 3.

Build version ARNs have all four nodes, and point to a specific build
for a specific version of an object.

=back



=head2 DateCreated => Str

The date that the component was created.


=head2 Description => Str

The description of the component.


=head2 Name => Str

The name of the component.


=head2 Owner => Str

The owner of the component.


=head2 Platform => Str

The platform of the component.


=head2 ProductCodes => ArrayRef[L<Paws::ImageBuilder::ProductCodeListItem>]

Contains product codes that are used for billing purposes for Amazon
Web Services Marketplace components.


=head2 Status => Str

Describes the current status of the component version.


=head2 SupportedOsVersions => ArrayRef[Str|Undef]

he operating system (OS) version supported by the component. If the OS
information is available, a prefix match is performed against the base
image OS version during image recipe creation.


=head2 Type => Str

The type of the component denotes whether the component is used to
build the image or only to test it.


=head2 Version => Str

The semantic version of the component.

The semantic version has four nodes:
E<lt>majorE<gt>.E<lt>minorE<gt>.E<lt>patchE<gt>/E<lt>buildE<gt>. You
can assign values for the first three, and can filter on all of them.

B<Assignment:> For the first three nodes you can assign any positive
integer value, including zero, with an upper limit of 2^30-1, or
1073741823 for each node. Image Builder automatically assigns the build
number to the fourth node.

B<Patterns:> You can use any numeric pattern that adheres to the
assignment requirements for the nodes that you can assign. For example,
you might choose a software version pattern, such as 1.0.0, or a date,
such as 2021.01.01.

B<Filtering:> With semantic versioning, you have the flexibility to use
wildcards (x) to specify the most recent versions or nodes when
selecting the base image or components for your recipe. When you use a
wildcard in any node, all nodes to the right of the first wildcard must
also be wildcards.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ImageBuilder>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

