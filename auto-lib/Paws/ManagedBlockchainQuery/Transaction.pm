# Generated by default/object.tt
package Paws::ManagedBlockchainQuery::Transaction;
  use Moose;
  has BlockHash => (is => 'ro', isa => 'Str', request_name => 'blockHash', traits => ['NameInRequest']);
  has BlockNumber => (is => 'ro', isa => 'Str', request_name => 'blockNumber', traits => ['NameInRequest']);
  has ConfirmationStatus => (is => 'ro', isa => 'Str', request_name => 'confirmationStatus', traits => ['NameInRequest']);
  has ContractAddress => (is => 'ro', isa => 'Str', request_name => 'contractAddress', traits => ['NameInRequest']);
  has CumulativeGasUsed => (is => 'ro', isa => 'Str', request_name => 'cumulativeGasUsed', traits => ['NameInRequest']);
  has EffectiveGasPrice => (is => 'ro', isa => 'Str', request_name => 'effectiveGasPrice', traits => ['NameInRequest']);
  has ExecutionStatus => (is => 'ro', isa => 'Str', request_name => 'executionStatus', traits => ['NameInRequest']);
  has From => (is => 'ro', isa => 'Str', request_name => 'from', traits => ['NameInRequest']);
  has GasUsed => (is => 'ro', isa => 'Str', request_name => 'gasUsed', traits => ['NameInRequest']);
  has Network => (is => 'ro', isa => 'Str', request_name => 'network', traits => ['NameInRequest'], required => 1);
  has NumberOfTransactions => (is => 'ro', isa => 'Int', request_name => 'numberOfTransactions', traits => ['NameInRequest'], required => 1);
  has SignatureR => (is => 'ro', isa => 'Str', request_name => 'signatureR', traits => ['NameInRequest']);
  has SignatureS => (is => 'ro', isa => 'Str', request_name => 'signatureS', traits => ['NameInRequest']);
  has SignatureV => (is => 'ro', isa => 'Int', request_name => 'signatureV', traits => ['NameInRequest']);
  has To => (is => 'ro', isa => 'Str', request_name => 'to', traits => ['NameInRequest'], required => 1);
  has TransactionFee => (is => 'ro', isa => 'Str', request_name => 'transactionFee', traits => ['NameInRequest']);
  has TransactionHash => (is => 'ro', isa => 'Str', request_name => 'transactionHash', traits => ['NameInRequest'], required => 1);
  has TransactionId => (is => 'ro', isa => 'Str', request_name => 'transactionId', traits => ['NameInRequest']);
  has TransactionIndex => (is => 'ro', isa => 'Int', request_name => 'transactionIndex', traits => ['NameInRequest'], required => 1);
  has TransactionTimestamp => (is => 'ro', isa => 'Str', request_name => 'transactionTimestamp', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ManagedBlockchainQuery::Transaction

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ManagedBlockchainQuery::Transaction object:

  $service_obj->Method(Att1 => { BlockHash => $value, ..., TransactionTimestamp => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ManagedBlockchainQuery::Transaction object:

  $result = $service_obj->Method(...);
  $result->Att1->BlockHash

=head1 DESCRIPTION

There are two possible types of transactions used for this data type:

=over

=item *

A Bitcoin transaction is a movement of BTC from one address to another.

=item *

An Ethereum transaction refers to an action initiated by an externally
owned account, which is an account managed by a human, not a contract.
For example, if Bob sends Alice 1 ETH, Bob's account must be debited
and Alice's must be credited. This state-changing action occurs within
a transaction.

=back


=head1 ATTRIBUTES


=head2 BlockHash => Str

The block hash is a unique identifier for a block. It is a fixed-size
string that is calculated by using the information in the block. The
block hash is used to verify the integrity of the data in the block.


=head2 BlockNumber => Str

The block number in which the transaction is recorded.


=head2 ConfirmationStatus => Str

Specifies whether the transaction has reached Finality.


=head2 ContractAddress => Str

The blockchain address for the contract.


=head2 CumulativeGasUsed => Str

The amount of gas used up to the specified point in the block.


=head2 EffectiveGasPrice => Str

The effective gas price.


=head2 ExecutionStatus => Str

Identifies whether the transaction has succeeded or failed.


=head2 From => Str

The initiator of the transaction. It is either in the form a public key
or a contract address.


=head2 GasUsed => Str

The amount of gas used for the transaction.


=head2 B<REQUIRED> Network => Str

The blockchain network where the transaction occurred.


=head2 B<REQUIRED> NumberOfTransactions => Int

The number of transactions in the block.


=head2 SignatureR => Str

The signature of the transaction. The X coordinate of a point R.


=head2 SignatureS => Str

The signature of the transaction. The Y coordinate of a point S.


=head2 SignatureV => Int

The signature of the transaction. The Z coordinate of a point V.


=head2 B<REQUIRED> To => Str

The identifier of the transaction. It is generated whenever a
transaction is verified and added to the blockchain.


=head2 TransactionFee => Str

The transaction fee.


=head2 B<REQUIRED> TransactionHash => Str

The hash of a transaction. It is generated when a transaction is
created.


=head2 TransactionId => Str

The identifier of a Bitcoin transaction. It is generated when a
transaction is created.


=head2 B<REQUIRED> TransactionIndex => Int

The index of the transaction within a blockchain.


=head2 B<REQUIRED> TransactionTimestamp => Str

The C<Timestamp> of the transaction.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ManagedBlockchainQuery>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

