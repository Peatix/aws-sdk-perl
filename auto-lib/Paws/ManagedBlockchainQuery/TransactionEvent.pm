# Generated by default/object.tt
package Paws::ManagedBlockchainQuery::TransactionEvent;
  use Moose;
  has BlockchainInstant => (is => 'ro', isa => 'Paws::ManagedBlockchainQuery::BlockchainInstant', request_name => 'blockchainInstant', traits => ['NameInRequest']);
  has ConfirmationStatus => (is => 'ro', isa => 'Str', request_name => 'confirmationStatus', traits => ['NameInRequest']);
  has ContractAddress => (is => 'ro', isa => 'Str', request_name => 'contractAddress', traits => ['NameInRequest']);
  has EventType => (is => 'ro', isa => 'Str', request_name => 'eventType', traits => ['NameInRequest'], required => 1);
  has From => (is => 'ro', isa => 'Str', request_name => 'from', traits => ['NameInRequest']);
  has Network => (is => 'ro', isa => 'Str', request_name => 'network', traits => ['NameInRequest'], required => 1);
  has SpentVoutIndex => (is => 'ro', isa => 'Int', request_name => 'spentVoutIndex', traits => ['NameInRequest']);
  has SpentVoutTransactionHash => (is => 'ro', isa => 'Str', request_name => 'spentVoutTransactionHash', traits => ['NameInRequest']);
  has SpentVoutTransactionId => (is => 'ro', isa => 'Str', request_name => 'spentVoutTransactionId', traits => ['NameInRequest']);
  has To => (is => 'ro', isa => 'Str', request_name => 'to', traits => ['NameInRequest']);
  has TokenId => (is => 'ro', isa => 'Str', request_name => 'tokenId', traits => ['NameInRequest']);
  has TransactionHash => (is => 'ro', isa => 'Str', request_name => 'transactionHash', traits => ['NameInRequest'], required => 1);
  has TransactionId => (is => 'ro', isa => 'Str', request_name => 'transactionId', traits => ['NameInRequest']);
  has Value => (is => 'ro', isa => 'Str', request_name => 'value', traits => ['NameInRequest']);
  has VoutIndex => (is => 'ro', isa => 'Int', request_name => 'voutIndex', traits => ['NameInRequest']);
  has VoutSpent => (is => 'ro', isa => 'Bool', request_name => 'voutSpent', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ManagedBlockchainQuery::TransactionEvent

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ManagedBlockchainQuery::TransactionEvent object:

  $service_obj->Method(Att1 => { BlockchainInstant => $value, ..., VoutSpent => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ManagedBlockchainQuery::TransactionEvent object:

  $result = $service_obj->Method(...);
  $result->Att1->BlockchainInstant

=head1 DESCRIPTION

The container for the properties of a transaction event.

=head1 ATTRIBUTES


=head2 BlockchainInstant => L<Paws::ManagedBlockchainQuery::BlockchainInstant>




=head2 ConfirmationStatus => Str

This container specifies whether the transaction has reached Finality.


=head2 ContractAddress => Str

The blockchain address for the contract


=head2 B<REQUIRED> EventType => Str

The type of transaction event.


=head2 From => Str

The wallet address initiating the transaction. It can either be a
public key or a contract.


=head2 B<REQUIRED> Network => Str

The blockchain network where the transaction occurred.


=head2 SpentVoutIndex => Int

The position of the spent transaction output in the output list of the
I<creating transaction>.

This is only returned for C<BITCOIN_VIN> event types.


=head2 SpentVoutTransactionHash => Str

The transactionHash that I<created> the spent transaction output.

This is only returned for C<BITCOIN_VIN> event types.


=head2 SpentVoutTransactionId => Str

The transactionId that I<created> the spent transaction output.

This is only returned for C<BITCOIN_VIN> event types.


=head2 To => Str

The wallet address receiving the transaction. It can either be a public
key or a contract.


=head2 TokenId => Str

The unique identifier for the token involved in the transaction.


=head2 B<REQUIRED> TransactionHash => Str

The hash of a transaction. It is generated when a transaction is
created.


=head2 TransactionId => Str

The identifier of a Bitcoin transaction. It is generated when a
transaction is created.


=head2 Value => Str

The value that was transacted.


=head2 VoutIndex => Int

The position of the transaction output in the transaction output list.


=head2 VoutSpent => Bool

Specifies if the transaction output is spent or unspent. This is only
returned for BITCOIN_VOUT event types.

This is only returned for C<BITCOIN_VOUT> event types.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ManagedBlockchainQuery>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

