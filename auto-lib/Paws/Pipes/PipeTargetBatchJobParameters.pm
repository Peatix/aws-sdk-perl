# Generated by default/object.tt
package Paws::Pipes::PipeTargetBatchJobParameters;
  use Moose;
  has ArrayProperties => (is => 'ro', isa => 'Paws::Pipes::BatchArrayProperties');
  has ContainerOverrides => (is => 'ro', isa => 'Paws::Pipes::BatchContainerOverrides');
  has DependsOn => (is => 'ro', isa => 'ArrayRef[Paws::Pipes::BatchJobDependency]');
  has JobDefinition => (is => 'ro', isa => 'Str', required => 1);
  has JobName => (is => 'ro', isa => 'Str', required => 1);
  has Parameters => (is => 'ro', isa => 'Paws::Pipes::BatchParametersMap');
  has RetryStrategy => (is => 'ro', isa => 'Paws::Pipes::BatchRetryStrategy');

1;

### main pod documentation begin ###

=head1 NAME

Paws::Pipes::PipeTargetBatchJobParameters

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Pipes::PipeTargetBatchJobParameters object:

  $service_obj->Method(Att1 => { ArrayProperties => $value, ..., RetryStrategy => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Pipes::PipeTargetBatchJobParameters object:

  $result = $service_obj->Method(...);
  $result->Att1->ArrayProperties

=head1 DESCRIPTION

The parameters for using an Batch job as a target.

=head1 ATTRIBUTES


=head2 ArrayProperties => L<Paws::Pipes::BatchArrayProperties>

The array properties for the submitted job, such as the size of the
array. The array size can be between 2 and 10,000. If you specify array
properties for a job, it becomes an array job. This parameter is used
only if the target is an Batch job.


=head2 ContainerOverrides => L<Paws::Pipes::BatchContainerOverrides>

The overrides that are sent to a container.


=head2 DependsOn => ArrayRef[L<Paws::Pipes::BatchJobDependency>]

A list of dependencies for the job. A job can depend upon a maximum of
20 jobs. You can specify a C<SEQUENTIAL> type dependency without
specifying a job ID for array jobs so that each child array job
completes sequentially, starting at index 0. You can also specify an
C<N_TO_N> type dependency with a job ID for array jobs. In that case,
each index child of this job must wait for the corresponding index
child of each dependency to complete before it can begin.


=head2 B<REQUIRED> JobDefinition => Str

The job definition used by this job. This value can be one of C<name>,
C<name:revision>, or the Amazon Resource Name (ARN) for the job
definition. If name is specified without a revision then the latest
active revision is used.


=head2 B<REQUIRED> JobName => Str

The name of the job. It can be up to 128 letters long. The first
character must be alphanumeric, can contain uppercase and lowercase
letters, numbers, hyphens (-), and underscores (_).


=head2 Parameters => L<Paws::Pipes::BatchParametersMap>

Additional parameters passed to the job that replace parameter
substitution placeholders that are set in the job definition.
Parameters are specified as a key and value pair mapping. Parameters
included here override any corresponding parameter defaults from the
job definition.


=head2 RetryStrategy => L<Paws::Pipes::BatchRetryStrategy>

The retry strategy to use for failed jobs. When a retry strategy is
specified here, it overrides the retry strategy defined in the job
definition.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Pipes>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

