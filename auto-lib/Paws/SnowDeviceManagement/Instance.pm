# Generated by default/object.tt
package Paws::SnowDeviceManagement::Instance;
  use Moose;
  has AmiLaunchIndex => (is => 'ro', isa => 'Int', request_name => 'amiLaunchIndex', traits => ['NameInRequest']);
  has BlockDeviceMappings => (is => 'ro', isa => 'ArrayRef[Paws::SnowDeviceManagement::InstanceBlockDeviceMapping]', request_name => 'blockDeviceMappings', traits => ['NameInRequest']);
  has CpuOptions => (is => 'ro', isa => 'Paws::SnowDeviceManagement::CpuOptions', request_name => 'cpuOptions', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest']);
  has ImageId => (is => 'ro', isa => 'Str', request_name => 'imageId', traits => ['NameInRequest']);
  has InstanceId => (is => 'ro', isa => 'Str', request_name => 'instanceId', traits => ['NameInRequest']);
  has InstanceType => (is => 'ro', isa => 'Str', request_name => 'instanceType', traits => ['NameInRequest']);
  has PrivateIpAddress => (is => 'ro', isa => 'Str', request_name => 'privateIpAddress', traits => ['NameInRequest']);
  has PublicIpAddress => (is => 'ro', isa => 'Str', request_name => 'publicIpAddress', traits => ['NameInRequest']);
  has RootDeviceName => (is => 'ro', isa => 'Str', request_name => 'rootDeviceName', traits => ['NameInRequest']);
  has SecurityGroups => (is => 'ro', isa => 'ArrayRef[Paws::SnowDeviceManagement::SecurityGroupIdentifier]', request_name => 'securityGroups', traits => ['NameInRequest']);
  has State => (is => 'ro', isa => 'Paws::SnowDeviceManagement::InstanceState', request_name => 'state', traits => ['NameInRequest']);
  has UpdatedAt => (is => 'ro', isa => 'Str', request_name => 'updatedAt', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::SnowDeviceManagement::Instance

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::SnowDeviceManagement::Instance object:

  $service_obj->Method(Att1 => { AmiLaunchIndex => $value, ..., UpdatedAt => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::SnowDeviceManagement::Instance object:

  $result = $service_obj->Method(...);
  $result->Att1->AmiLaunchIndex

=head1 DESCRIPTION

The description of an instance. Currently, Amazon EC2 instances are the
only supported instance type.

=head1 ATTRIBUTES


=head2 AmiLaunchIndex => Int

The Amazon Machine Image (AMI) launch index, which you can use to find
this instance in the launch group.


=head2 BlockDeviceMappings => ArrayRef[L<Paws::SnowDeviceManagement::InstanceBlockDeviceMapping>]

Any block device mapping entries for the instance.


=head2 CpuOptions => L<Paws::SnowDeviceManagement::CpuOptions>

The CPU options for the instance.


=head2 CreatedAt => Str

When the instance was created.


=head2 ImageId => Str

The ID of the AMI used to launch the instance.


=head2 InstanceId => Str

The ID of the instance.


=head2 InstanceType => Str

The instance type.


=head2 PrivateIpAddress => Str

The private IPv4 address assigned to the instance.


=head2 PublicIpAddress => Str

The public IPv4 address assigned to the instance.


=head2 RootDeviceName => Str

The device name of the root device volume (for example, C</dev/sda1>).


=head2 SecurityGroups => ArrayRef[L<Paws::SnowDeviceManagement::SecurityGroupIdentifier>]

The security groups for the instance.


=head2 State => L<Paws::SnowDeviceManagement::InstanceState>




=head2 UpdatedAt => Str

When the instance was last updated.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::SnowDeviceManagement>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

