# Generated by default/object.tt
package Paws::Tnb::ListSolFunctionPackageInfo;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest'], required => 1);
  has Id => (is => 'ro', isa => 'Str', request_name => 'id', traits => ['NameInRequest'], required => 1);
  has Metadata => (is => 'ro', isa => 'Paws::Tnb::ListSolFunctionPackageMetadata', request_name => 'metadata', traits => ['NameInRequest']);
  has OnboardingState => (is => 'ro', isa => 'Str', request_name => 'onboardingState', traits => ['NameInRequest'], required => 1);
  has OperationalState => (is => 'ro', isa => 'Str', request_name => 'operationalState', traits => ['NameInRequest'], required => 1);
  has UsageState => (is => 'ro', isa => 'Str', request_name => 'usageState', traits => ['NameInRequest'], required => 1);
  has VnfdId => (is => 'ro', isa => 'Str', request_name => 'vnfdId', traits => ['NameInRequest']);
  has VnfdVersion => (is => 'ro', isa => 'Str', request_name => 'vnfdVersion', traits => ['NameInRequest']);
  has VnfProductName => (is => 'ro', isa => 'Str', request_name => 'vnfProductName', traits => ['NameInRequest']);
  has VnfProvider => (is => 'ro', isa => 'Str', request_name => 'vnfProvider', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Tnb::ListSolFunctionPackageInfo

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Tnb::ListSolFunctionPackageInfo object:

  $service_obj->Method(Att1 => { Arn => $value, ..., VnfProvider => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Tnb::ListSolFunctionPackageInfo object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

Information about a function package.

A function package is a .zip file in CSAR (Cloud Service Archive)
format that contains a network function (an ETSI standard
telecommunication application) and function package descriptor that
uses the TOSCA standard to describe how the network functions should
run on your network.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Arn => Str

Function package ARN.


=head2 B<REQUIRED> Id => Str

ID of the function package.


=head2 Metadata => L<Paws::Tnb::ListSolFunctionPackageMetadata>

The metadata of the function package.


=head2 B<REQUIRED> OnboardingState => Str

Onboarding state of the function package.


=head2 B<REQUIRED> OperationalState => Str

Operational state of the function package.


=head2 B<REQUIRED> UsageState => Str

Usage state of the function package.


=head2 VnfdId => Str

Identifies the function package and the function package descriptor.


=head2 VnfdVersion => Str

Identifies the version of the function package descriptor.


=head2 VnfProductName => Str

The product name for the network function.


=head2 VnfProvider => Str

Provider of the function package and the function package descriptor.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Tnb>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

