# Generated by default/object.tt
package Paws::InternetMonitor::ImpactedLocation;
  use Moose;
  has ASName => (is => 'ro', isa => 'Str', required => 1);
  has ASNumber => (is => 'ro', isa => 'Int', required => 1);
  has CausedBy => (is => 'ro', isa => 'Paws::InternetMonitor::NetworkImpairment');
  has City => (is => 'ro', isa => 'Str');
  has Country => (is => 'ro', isa => 'Str', required => 1);
  has CountryCode => (is => 'ro', isa => 'Str');
  has InternetHealth => (is => 'ro', isa => 'Paws::InternetMonitor::InternetHealth');
  has Ipv4Prefixes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has Latitude => (is => 'ro', isa => 'Num');
  has Longitude => (is => 'ro', isa => 'Num');
  has Metro => (is => 'ro', isa => 'Str');
  has ServiceLocation => (is => 'ro', isa => 'Str');
  has Status => (is => 'ro', isa => 'Str', required => 1);
  has Subdivision => (is => 'ro', isa => 'Str');
  has SubdivisionCode => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::InternetMonitor::ImpactedLocation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::InternetMonitor::ImpactedLocation object:

  $service_obj->Method(Att1 => { ASName => $value, ..., SubdivisionCode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::InternetMonitor::ImpactedLocation object:

  $result = $service_obj->Method(...);
  $result->Att1->ASName

=head1 DESCRIPTION

Information about a location impacted by a health event in Amazon
CloudWatch Internet Monitor.

Geographic regions are hierarchically categorized into country,
subdivision, metro and city geographic granularities. The geographic
region is identified based on the IP address used at the client
locations.

=head1 ATTRIBUTES


=head2 B<REQUIRED> ASName => Str

The name of the internet service provider (ISP) or network (ASN).


=head2 B<REQUIRED> ASNumber => Int

The Autonomous System Number (ASN) of the network at an impacted
location.


=head2 CausedBy => L<Paws::InternetMonitor::NetworkImpairment>

The cause of the impairment. There are two types of network
impairments: Amazon Web Services network issues or internet issues.
Internet issues are typically a problem with a network provider, like
an internet service provider (ISP).


=head2 City => Str

The name of the city where the health event is located.


=head2 B<REQUIRED> Country => Str

The name of the country where the health event is located.


=head2 CountryCode => Str

The country code where the health event is located. The ISO 3166-2
codes for the country is provided, when available.


=head2 InternetHealth => L<Paws::InternetMonitor::InternetHealth>

The calculated health at a specific location.


=head2 Ipv4Prefixes => ArrayRef[Str|Undef]

The IPv4 prefixes at the client location that was impacted by the
health event.


=head2 Latitude => Num

The latitude where the health event is located.


=head2 Longitude => Num

The longitude where the health event is located.


=head2 Metro => Str

The metro area where the health event is located.

Metro indicates a metropolitan region in the United States, such as the
region around New York City. In non-US countries, this is a
second-level subdivision. For example, in the United Kingdom, it could
be a county, a London borough, a unitary authority, council area, and
so on.


=head2 ServiceLocation => Str

The service location where the health event is located.


=head2 B<REQUIRED> Status => Str

The status of the health event at an impacted location.


=head2 Subdivision => Str

The subdivision location where the health event is located. The
subdivision usually maps to states in most countries (including the
United States). For United Kingdom, it maps to a country (England,
Scotland, Wales) or province (Northern Ireland).


=head2 SubdivisionCode => Str

The subdivision code where the health event is located. The ISO 3166-2
codes for country subdivisions is provided, when available.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::InternetMonitor>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

