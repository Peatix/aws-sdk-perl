
package Paws::Neptunedata::CreateMLEndpoint;
  use Moose;
  has Id => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'id');
  has InstanceCount => (is => 'ro', isa => 'Int', traits => ['NameInRequest'], request_name => 'instanceCount');
  has InstanceType => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'instanceType');
  has MlModelTrainingJobId => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'mlModelTrainingJobId');
  has MlModelTransformJobId => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'mlModelTransformJobId');
  has ModelName => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'modelName');
  has NeptuneIamRoleArn => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'neptuneIamRoleArn');
  has Update => (is => 'ro', isa => 'Bool', traits => ['NameInRequest'], request_name => 'update');
  has VolumeEncryptionKMSKey => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'volumeEncryptionKMSKey');

  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => 'CreateMLEndpoint');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '/ml/endpoints');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => 'POST');
  class_has _returns => (isa => 'Str', is => 'ro', default => 'Paws::Neptunedata::CreateMLEndpointOutput');
1;

### main pod documentation begin ###

=head1 NAME

Paws::Neptunedata::CreateMLEndpoint - Arguments for method CreateMLEndpoint on L<Paws::Neptunedata>

=head1 DESCRIPTION

This class represents the parameters used for calling the method CreateMLEndpoint on the
L<Amazon NeptuneData|Paws::Neptunedata> service. Use the attributes of this class
as arguments to method CreateMLEndpoint.

You shouldn't make instances of this class. Each attribute should be used as a named argument in the call to CreateMLEndpoint.

=head1 SYNOPSIS

    my $neptune-db = Paws->service('Neptunedata');
    my $CreateMLEndpointOutput = $neptune -db->CreateMLEndpoint(
      Id                     => 'MyString',    # OPTIONAL
      InstanceCount          => 1,             # OPTIONAL
      InstanceType           => 'MyString',    # OPTIONAL
      MlModelTrainingJobId   => 'MyString',    # OPTIONAL
      MlModelTransformJobId  => 'MyString',    # OPTIONAL
      ModelName              => 'MyString',    # OPTIONAL
      NeptuneIamRoleArn      => 'MyString',    # OPTIONAL
      Update                 => 1,             # OPTIONAL
      VolumeEncryptionKMSKey => 'MyString',    # OPTIONAL
    );

    # Results:
    my $Arn                  = $CreateMLEndpointOutput->Arn;
    my $CreationTimeInMillis = $CreateMLEndpointOutput->CreationTimeInMillis;
    my $Id                   = $CreateMLEndpointOutput->Id;

    # Returns a L<Paws::Neptunedata::CreateMLEndpointOutput> object.

Values for attributes that are native types (Int, String, Float, etc) can passed as-is (scalar values). Values for complex Types (objects) can be passed as a HashRef. The keys and values of the hashref will be used to instance the underlying object.
For the AWS API documentation, see L<https://docs.aws.amazon.com/goto/WebAPI/neptune-db/CreateMLEndpoint>

=head1 ATTRIBUTES


=head2 Id => Str

A unique identifier for the new inference endpoint. The default is an
autogenerated timestamped name.



=head2 InstanceCount => Int

The minimum number of Amazon EC2 instances to deploy to an endpoint for
prediction. The default is 1



=head2 InstanceType => Str

The type of Neptune ML instance to use for online servicing. The
default is C<ml.m5.xlarge>. Choosing the ML instance for an inference
endpoint depends on the task type, the graph size, and your budget.



=head2 MlModelTrainingJobId => Str

The job Id of the completed model-training job that has created the
model that the inference endpoint will point to. You must supply either
the C<mlModelTrainingJobId> or the C<mlModelTransformJobId>.



=head2 MlModelTransformJobId => Str

The job Id of the completed model-transform job. You must supply either
the C<mlModelTrainingJobId> or the C<mlModelTransformJobId>.



=head2 ModelName => Str

Model type for training. By default the Neptune ML model is
automatically based on the C<modelType> used in data processing, but
you can specify a different model type here. The default is C<rgcn> for
heterogeneous graphs and C<kge> for knowledge graphs. The only valid
value for heterogeneous graphs is C<rgcn>. Valid values for knowledge
graphs are: C<kge>, C<transe>, C<distmult>, and C<rotate>.



=head2 NeptuneIamRoleArn => Str

The ARN of an IAM role providing Neptune access to SageMaker and Amazon
S3 resources. This must be listed in your DB cluster parameter group or
an error will be thrown.



=head2 Update => Bool

If set to C<true>, C<update> indicates that this is an update request.
The default is C<false>. You must supply either the
C<mlModelTrainingJobId> or the C<mlModelTransformJobId>.



=head2 VolumeEncryptionKMSKey => Str

The Amazon Key Management Service (Amazon KMS) key that SageMaker uses
to encrypt data on the storage volume attached to the ML compute
instances that run the training job. The default is None.




=head1 SEE ALSO

This class forms part of L<Paws>, documenting arguments for method CreateMLEndpoint in L<Paws::Neptunedata>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

