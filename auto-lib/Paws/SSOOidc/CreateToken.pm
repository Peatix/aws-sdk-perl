
package Paws::SSOOidc::CreateToken;
  use Moose;
  has ClientId => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'clientId', required => 1);
  has ClientSecret => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'clientSecret', required => 1);
  has Code => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'code');
  has CodeVerifier => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'codeVerifier');
  has DeviceCode => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'deviceCode');
  has GrantType => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'grantType', required => 1);
  has RedirectUri => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'redirectUri');
  has RefreshToken => (is => 'ro', isa => 'Str', traits => ['NameInRequest'], request_name => 'refreshToken');
  has Scope => (is => 'ro', isa => 'ArrayRef[Str|Undef]', traits => ['NameInRequest'], request_name => 'scope');

  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => 'CreateToken');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '/token');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => 'POST');
  class_has _returns => (isa => 'Str', is => 'ro', default => 'Paws::SSOOidc::CreateTokenResponse');
1;

### main pod documentation begin ###

=head1 NAME

Paws::SSOOidc::CreateToken - Arguments for method CreateToken on L<Paws::SSOOidc>

=head1 DESCRIPTION

This class represents the parameters used for calling the method CreateToken on the
L<AWS SSO OIDC|Paws::SSOOidc> service. Use the attributes of this class
as arguments to method CreateToken.

You shouldn't make instances of this class. Each attribute should be used as a named argument in the call to CreateToken.

=head1 SYNOPSIS

    my $oidc = Paws->service('SSOOidc');
    my $CreateTokenResponse = $oidc->CreateToken(
      ClientId     => 'MyClientId',
      ClientSecret => 'MyClientSecret',
      GrantType    => 'MyGrantType',
      Code         => 'MyAuthCode',          # OPTIONAL
      CodeVerifier => 'MyCodeVerifier',      # OPTIONAL
      DeviceCode   => 'MyDeviceCode',        # OPTIONAL
      RedirectUri  => 'MyURI',               # OPTIONAL
      RefreshToken => 'MyRefreshToken',      # OPTIONAL
      Scope        => [ 'MyScope', ... ],    # OPTIONAL
    );

    # Results:
    my $AccessToken  = $CreateTokenResponse->AccessToken;
    my $ExpiresIn    = $CreateTokenResponse->ExpiresIn;
    my $IdToken      = $CreateTokenResponse->IdToken;
    my $RefreshToken = $CreateTokenResponse->RefreshToken;
    my $TokenType    = $CreateTokenResponse->TokenType;

    # Returns a L<Paws::SSOOidc::CreateTokenResponse> object.

Values for attributes that are native types (Int, String, Float, etc) can passed as-is (scalar values). Values for complex Types (objects) can be passed as a HashRef. The keys and values of the hashref will be used to instance the underlying object.
For the AWS API documentation, see L<https://docs.aws.amazon.com/goto/WebAPI/oidc/CreateToken>

=head1 ATTRIBUTES


=head2 B<REQUIRED> ClientId => Str

The unique identifier string for the client or application. This value
comes from the result of the RegisterClient API.



=head2 B<REQUIRED> ClientSecret => Str

A secret string generated for the client. This value should come from
the persisted result of the RegisterClient API.



=head2 Code => Str

Used only when calling this API for the Authorization Code grant type.
The short-lived code is used to identify this authorization request.



=head2 CodeVerifier => Str

Used only when calling this API for the Authorization Code grant type.
This value is generated by the client and presented to validate the
original code challenge value the client passed at authorization time.



=head2 DeviceCode => Str

Used only when calling this API for the Device Code grant type. This
short-lived code is used to identify this authorization request. This
comes from the result of the StartDeviceAuthorization API.



=head2 B<REQUIRED> GrantType => Str

Supports the following OAuth grant types: Authorization Code, Device
Code, and Refresh Token. Specify one of the following values, depending
on the grant type that you want:

* Authorization Code - C<authorization_code>

* Device Code - C<urn:ietf:params:oauth:grant-type:device_code>

* Refresh Token - C<refresh_token>



=head2 RedirectUri => Str

Used only when calling this API for the Authorization Code grant type.
This value specifies the location of the client or application that has
registered to receive the authorization code.



=head2 RefreshToken => Str

Used only when calling this API for the Refresh Token grant type. This
token is used to refresh short-lived tokens, such as the access token,
that might expire.

For more information about the features and limitations of the current
IAM Identity Center OIDC implementation, see I<Considerations for Using
this Guide> in the IAM Identity Center OIDC API Reference
(https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/Welcome.html).



=head2 Scope => ArrayRef[Str|Undef]

The list of scopes for which authorization is requested. The access
token that is issued is limited to the scopes that are granted. If this
value is not specified, IAM Identity Center authorizes all scopes that
are configured for the client during the call to RegisterClient.




=head1 SEE ALSO

This class forms part of L<Paws>, documenting arguments for method CreateToken in L<Paws::SSOOidc>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

