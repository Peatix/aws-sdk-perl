# Generated by default/object.tt
package Paws::DMS::MongoDbSettings;
  use Moose;
  has AuthMechanism => (is => 'ro', isa => 'Str');
  has AuthSource => (is => 'ro', isa => 'Str');
  has AuthType => (is => 'ro', isa => 'Str');
  has DatabaseName => (is => 'ro', isa => 'Str');
  has DocsToInvestigate => (is => 'ro', isa => 'Str');
  has ExtractDocId => (is => 'ro', isa => 'Str');
  has KmsKeyId => (is => 'ro', isa => 'Str');
  has NestingLevel => (is => 'ro', isa => 'Str');
  has Password => (is => 'ro', isa => 'Str');
  has Port => (is => 'ro', isa => 'Int');
  has ReplicateShardCollections => (is => 'ro', isa => 'Bool');
  has SecretsManagerAccessRoleArn => (is => 'ro', isa => 'Str');
  has SecretsManagerSecretId => (is => 'ro', isa => 'Str');
  has ServerName => (is => 'ro', isa => 'Str');
  has Username => (is => 'ro', isa => 'Str');
  has UseUpdateLookUp => (is => 'ro', isa => 'Bool');

1;

### main pod documentation begin ###

=head1 NAME

Paws::DMS::MongoDbSettings

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::DMS::MongoDbSettings object:

  $service_obj->Method(Att1 => { AuthMechanism => $value, ..., UseUpdateLookUp => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::DMS::MongoDbSettings object:

  $result = $service_obj->Method(...);
  $result->Att1->AuthMechanism

=head1 DESCRIPTION

Provides information that defines a MongoDB endpoint.

=head1 ATTRIBUTES


=head2 AuthMechanism => Str

The authentication mechanism you use to access the MongoDB source
endpoint.

For the default value, in MongoDB version 2.x, C<"default"> is
C<"mongodb_cr">. For MongoDB version 3.x or later, C<"default"> is
C<"scram_sha_1">. This setting isn't used when C<AuthType> is set to
C<"no">.


=head2 AuthSource => Str

The MongoDB database name. This setting isn't used when C<AuthType> is
set to C<"no">.

The default is C<"admin">.


=head2 AuthType => Str

The authentication type you use to access the MongoDB source endpoint.

When when set to C<"no">, user name and password parameters are not
used and can be empty.


=head2 DatabaseName => Str

The database name on the MongoDB source endpoint.


=head2 DocsToInvestigate => Str

Indicates the number of documents to preview to determine the document
organization. Use this setting when C<NestingLevel> is set to C<"one">.

Must be a positive value greater than C<0>. Default value is C<1000>.


=head2 ExtractDocId => Str

Specifies the document ID. Use this setting when C<NestingLevel> is set
to C<"none">.

Default value is C<"false">.


=head2 KmsKeyId => Str

The KMS key identifier that is used to encrypt the content on the
replication instance. If you don't specify a value for the C<KmsKeyId>
parameter, then DMS uses your default encryption key. KMS creates the
default encryption key for your Amazon Web Services account. Your
Amazon Web Services account has a different default encryption key for
each Amazon Web Services Region.


=head2 NestingLevel => Str

Specifies either document or table mode.

Default value is C<"none">. Specify C<"none"> to use document mode.
Specify C<"one"> to use table mode.


=head2 Password => Str

The password for the user account you use to access the MongoDB source
endpoint.


=head2 Port => Int

The port value for the MongoDB source endpoint.


=head2 ReplicateShardCollections => Bool

If C<true>, DMS replicates data to shard collections. DMS only uses
this setting if the target endpoint is a DocumentDB elastic cluster.

When this setting is C<true>, note the following:

=over

=item *

You must set C<TargetTablePrepMode> to C<nothing>.

=item *

DMS automatically sets C<useUpdateLookup> to C<false>.

=back



=head2 SecretsManagerAccessRoleArn => Str

The full Amazon Resource Name (ARN) of the IAM role that specifies DMS
as the trusted entity and grants the required permissions to access the
value in C<SecretsManagerSecret>. The role must allow the
C<iam:PassRole> action. C<SecretsManagerSecret> has the value of the
Amazon Web Services Secrets Manager secret that allows access to the
MongoDB endpoint.

You can specify one of two sets of values for these permissions. You
can specify the values for this setting and C<SecretsManagerSecretId>.
Or you can specify clear-text values for C<UserName>, C<Password>,
C<ServerName>, and C<Port>. You can't specify both. For more
information on creating this C<SecretsManagerSecret> and the
C<SecretsManagerAccessRoleArn> and C<SecretsManagerSecretId> required
to access it, see Using secrets to access Database Migration Service
resources
(https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager)
in the I<Database Migration Service User Guide>.


=head2 SecretsManagerSecretId => Str

The full ARN, partial ARN, or friendly name of the
C<SecretsManagerSecret> that contains the MongoDB endpoint connection
details.


=head2 ServerName => Str

The name of the server on the MongoDB source endpoint. For MongoDB
Atlas, provide the server name for any of the servers in the
replication set.


=head2 Username => Str

The user name you use to access the MongoDB source endpoint.


=head2 UseUpdateLookUp => Bool

If C<true>, DMS retrieves the entire document from the MongoDB source
during migration. This may cause a migration failure if the server
response exceeds bandwidth limits. To fetch only updates and deletes
during migration, set this parameter to C<false>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::DMS>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

