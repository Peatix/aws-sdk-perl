# Generated by default/object.tt
package Paws::B2bi::X12InterchangeControlHeaders;
  use Moose;
  has AcknowledgmentRequestedCode => (is => 'ro', isa => 'Str', request_name => 'acknowledgmentRequestedCode', traits => ['NameInRequest']);
  has ReceiverId => (is => 'ro', isa => 'Str', request_name => 'receiverId', traits => ['NameInRequest']);
  has ReceiverIdQualifier => (is => 'ro', isa => 'Str', request_name => 'receiverIdQualifier', traits => ['NameInRequest']);
  has RepetitionSeparator => (is => 'ro', isa => 'Str', request_name => 'repetitionSeparator', traits => ['NameInRequest']);
  has SenderId => (is => 'ro', isa => 'Str', request_name => 'senderId', traits => ['NameInRequest']);
  has SenderIdQualifier => (is => 'ro', isa => 'Str', request_name => 'senderIdQualifier', traits => ['NameInRequest']);
  has UsageIndicatorCode => (is => 'ro', isa => 'Str', request_name => 'usageIndicatorCode', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::B2bi::X12InterchangeControlHeaders

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::B2bi::X12InterchangeControlHeaders object:

  $service_obj->Method(Att1 => { AcknowledgmentRequestedCode => $value, ..., UsageIndicatorCode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::B2bi::X12InterchangeControlHeaders object:

  $result = $service_obj->Method(...);
  $result->Att1->AcknowledgmentRequestedCode

=head1 DESCRIPTION

In X12, the Interchange Control Header is the first segment of an EDI
document and is part of the Interchange Envelope. It contains
information about the sender and receiver, the date and time of
transmission, and the X12 version being used. It also includes delivery
information, such as the sender and receiver IDs.

=head1 ATTRIBUTES


=head2 AcknowledgmentRequestedCode => Str

Located at position ISA-14 in the header. The value "1" indicates that
the sender is requesting an interchange acknowledgment at receipt of
the interchange. The value "0" is used otherwise.


=head2 ReceiverId => Str

Located at position ISA-08 in the header. This value (along with the
C<receiverIdQualifier>) identifies the intended recipient of the
interchange.


=head2 ReceiverIdQualifier => Str

Located at position ISA-07 in the header. Qualifier for the receiver
ID. Together, the ID and qualifier uniquely identify the receiving
trading partner.


=head2 RepetitionSeparator => Str

Located at position ISA-11 in the header. This string makes it easier
when you need to group similar adjacent element values together without
using extra segments.

This parameter is only honored for version greater than 401
(C<VERSION_4010> and higher).

For versions less than 401, this field is called StandardsId
(https://www.stedi.com/edi/x12-004010/segment/ISA#ISA-11), in which
case our service sets the value to C<U>.


=head2 SenderId => Str

Located at position ISA-06 in the header. This value (along with the
C<senderIdQualifier>) identifies the sender of the interchange.


=head2 SenderIdQualifier => Str

Located at position ISA-05 in the header. Qualifier for the sender ID.
Together, the ID and qualifier uniquely identify the sending trading
partner.


=head2 UsageIndicatorCode => Str

Located at position ISA-15 in the header. Specifies how this
interchange is being used:

=over

=item *

C<T> indicates this interchange is for testing.

=item *

C<P> indicates this interchange is for production.

=item *

C<I> indicates this interchange is informational.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::B2bi>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

