# Generated by default/object.tt
package Paws::LexModelsV2::IntentConfirmationSetting;
  use Moose;
  has Active => (is => 'ro', isa => 'Bool', request_name => 'active', traits => ['NameInRequest']);
  has CodeHook => (is => 'ro', isa => 'Paws::LexModelsV2::DialogCodeHookInvocationSetting', request_name => 'codeHook', traits => ['NameInRequest']);
  has ConfirmationConditional => (is => 'ro', isa => 'Paws::LexModelsV2::ConditionalSpecification', request_name => 'confirmationConditional', traits => ['NameInRequest']);
  has ConfirmationNextStep => (is => 'ro', isa => 'Paws::LexModelsV2::DialogState', request_name => 'confirmationNextStep', traits => ['NameInRequest']);
  has ConfirmationResponse => (is => 'ro', isa => 'Paws::LexModelsV2::ResponseSpecification', request_name => 'confirmationResponse', traits => ['NameInRequest']);
  has DeclinationConditional => (is => 'ro', isa => 'Paws::LexModelsV2::ConditionalSpecification', request_name => 'declinationConditional', traits => ['NameInRequest']);
  has DeclinationNextStep => (is => 'ro', isa => 'Paws::LexModelsV2::DialogState', request_name => 'declinationNextStep', traits => ['NameInRequest']);
  has DeclinationResponse => (is => 'ro', isa => 'Paws::LexModelsV2::ResponseSpecification', request_name => 'declinationResponse', traits => ['NameInRequest']);
  has ElicitationCodeHook => (is => 'ro', isa => 'Paws::LexModelsV2::ElicitationCodeHookInvocationSetting', request_name => 'elicitationCodeHook', traits => ['NameInRequest']);
  has FailureConditional => (is => 'ro', isa => 'Paws::LexModelsV2::ConditionalSpecification', request_name => 'failureConditional', traits => ['NameInRequest']);
  has FailureNextStep => (is => 'ro', isa => 'Paws::LexModelsV2::DialogState', request_name => 'failureNextStep', traits => ['NameInRequest']);
  has FailureResponse => (is => 'ro', isa => 'Paws::LexModelsV2::ResponseSpecification', request_name => 'failureResponse', traits => ['NameInRequest']);
  has PromptSpecification => (is => 'ro', isa => 'Paws::LexModelsV2::PromptSpecification', request_name => 'promptSpecification', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::LexModelsV2::IntentConfirmationSetting

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::LexModelsV2::IntentConfirmationSetting object:

  $service_obj->Method(Att1 => { Active => $value, ..., PromptSpecification => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::LexModelsV2::IntentConfirmationSetting object:

  $result = $service_obj->Method(...);
  $result->Att1->Active

=head1 DESCRIPTION

Provides a prompt for making sure that the user is ready for the intent
to be fulfilled.

=head1 ATTRIBUTES


=head2 Active => Bool

Specifies whether the intent's confirmation is sent to the user. When
this field is false, confirmation and declination responses aren't
sent. If the C<active> field isn't specified, the default is true.


=head2 CodeHook => L<Paws::LexModelsV2::DialogCodeHookInvocationSetting>

The C<DialogCodeHookInvocationSetting> object associated with intent's
confirmation step. The dialog code hook is triggered based on these
invocation settings when the confirmation next step or declination next
step or failure next step is C<InvokeDialogCodeHook>.


=head2 ConfirmationConditional => L<Paws::LexModelsV2::ConditionalSpecification>

A list of conditional branches to evaluate after the intent is closed.


=head2 ConfirmationNextStep => L<Paws::LexModelsV2::DialogState>

Specifies the next step that the bot executes when the customer
confirms the intent.


=head2 ConfirmationResponse => L<Paws::LexModelsV2::ResponseSpecification>




=head2 DeclinationConditional => L<Paws::LexModelsV2::ConditionalSpecification>

A list of conditional branches to evaluate after the intent is
declined.


=head2 DeclinationNextStep => L<Paws::LexModelsV2::DialogState>

Specifies the next step that the bot executes when the customer
declines the intent.


=head2 DeclinationResponse => L<Paws::LexModelsV2::ResponseSpecification>

When the user answers "no" to the question defined in
C<promptSpecification>, Amazon Lex responds with this response to
acknowledge that the intent was canceled.


=head2 ElicitationCodeHook => L<Paws::LexModelsV2::ElicitationCodeHookInvocationSetting>

The C<DialogCodeHookInvocationSetting> used when the code hook is
invoked during confirmation prompt retries.


=head2 FailureConditional => L<Paws::LexModelsV2::ConditionalSpecification>




=head2 FailureNextStep => L<Paws::LexModelsV2::DialogState>

The next step to take in the conversation if the confirmation step
fails.


=head2 FailureResponse => L<Paws::LexModelsV2::ResponseSpecification>




=head2 B<REQUIRED> PromptSpecification => L<Paws::LexModelsV2::PromptSpecification>

Prompts the user to confirm the intent. This question should have a yes
or no answer.

Amazon Lex uses this prompt to ensure that the user acknowledges that
the intent is ready for fulfillment. For example, with the
C<OrderPizza> intent, you might want to confirm that the order is
correct before placing it. For other intents, such as intents that
simply respond to user questions, you might not need to ask the user
for confirmation before providing the information.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::LexModelsV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

