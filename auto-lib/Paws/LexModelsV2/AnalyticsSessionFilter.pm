# Generated by default/object.tt
package Paws::LexModelsV2::AnalyticsSessionFilter;
  use Moose;
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest'], required => 1);
  has Operator => (is => 'ro', isa => 'Str', request_name => 'operator', traits => ['NameInRequest'], required => 1);
  has Values => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'values', traits => ['NameInRequest'], required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::LexModelsV2::AnalyticsSessionFilter

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::LexModelsV2::AnalyticsSessionFilter object:

  $service_obj->Method(Att1 => { Name => $value, ..., Values => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::LexModelsV2::AnalyticsSessionFilter object:

  $result = $service_obj->Method(...);
  $result->Att1->Name

=head1 DESCRIPTION

Contains fields describing a condition by which to filter the sessions.
The expression may be understood as C<name> C<operator> C<values>. For
example:

=over

=item *

C<LocaleId EQ en> E<ndash> The locale is "en".

=item *

C<Duration GT 200> E<ndash> The duration is greater than 200 seconds.

=back

The operators that each filter supports are listed below:

=over

=item *

C<BotAlias> E<ndash> C<EQ>.

=item *

C<BotVersion> E<ndash> C<EQ>.

=item *

C<LocaleId> E<ndash> C<EQ>.

=item *

C<Modality> E<ndash> C<EQ>.

=item *

C<Channel> E<ndash> C<EQ>.

=item *

C<Duration> E<ndash> C<EQ>, C<GT>, C<LT>.

=item *

C<conversationEndState> E<ndash> C<EQ>, C<CO>.

=item *

C<SessionId> E<ndash> C<EQ>.

=item *

C<OriginatingRequestId> E<ndash> C<EQ>.

=item *

C<IntentPath> E<ndash> C<EQ>.

=back


=head1 ATTRIBUTES


=head2 B<REQUIRED> Name => Str

The category by which to filter the sessions. The descriptions for each
option are as follows:

=over

=item *

C<BotAlias> E<ndash> The name of the bot alias.

=item *

C<BotVersion> E<ndash> The version of the bot.

=item *

C<LocaleId> E<ndash> The locale of the bot.

=item *

C<Modality> E<ndash> The modality of the session with the bot (audio,
DTMF, or text).

=item *

C<Channel> E<ndash> The channel that the bot is integrated with.

=item *

C<Duration> E<ndash> The duration of the session.

=item *

C<conversationEndState> E<ndash> The final state of the session.

=item *

C<SessionId> E<ndash> The identifier of the session with the bot.

=item *

C<OriginatingRequestId> E<ndash> The identifier of the first request in
a session.

=item *

C<IntentPath> E<ndash> The order of intents taken in a session.

=back



=head2 B<REQUIRED> Operator => Str

The operation by which to filter the category. The following operations
are possible:

=over

=item *

C<CO> E<ndash> Contains

=item *

C<EQ> E<ndash> Equals

=item *

C<GT> E<ndash> Greater than

=item *

C<LT> E<ndash> Less than

=back

The operators that each filter supports are listed below:

=over

=item *

C<BotAlias> E<ndash> C<EQ>.

=item *

C<BotVersion> E<ndash> C<EQ>.

=item *

C<LocaleId> E<ndash> C<EQ>.

=item *

C<Modality> E<ndash> C<EQ>.

=item *

C<Channel> E<ndash> C<EQ>.

=item *

C<Duration> E<ndash> C<EQ>, C<GT>, C<LT>.

=item *

C<conversationEndState> E<ndash> C<EQ>, C<CO>.

=item *

C<SessionId> E<ndash> C<EQ>.

=item *

C<OriginatingRequestId> E<ndash> C<EQ>.

=item *

C<IntentPath> E<ndash> C<EQ>.

=back



=head2 B<REQUIRED> Values => ArrayRef[Str|Undef]

An array containing the values of the category by which to apply the
operator to filter the results. You can provide multiple values if the
operator is C<EQ> or C<CO>. If you provide multiple values, you filter
for results that equal/contain any of the values. For example, if the
C<name>, C<operator>, and C<values> fields are C<Modality>, C<EQ>, and
C<[Speech, Text]>, the operation filters for results where the modality
was either C<Speech> or C<Text>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::LexModelsV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

