# Generated by default/object.tt
package Paws::LexModelsV2::UtteranceSpecification;
  use Moose;
  has AssociatedIntentName => (is => 'ro', isa => 'Str', request_name => 'associatedIntentName', traits => ['NameInRequest']);
  has AssociatedSlotName => (is => 'ro', isa => 'Str', request_name => 'associatedSlotName', traits => ['NameInRequest']);
  has AudioVoiceDurationMillis => (is => 'ro', isa => 'Int', request_name => 'audioVoiceDurationMillis', traits => ['NameInRequest']);
  has BotAliasId => (is => 'ro', isa => 'Str', request_name => 'botAliasId', traits => ['NameInRequest']);
  has BotResponseAudioVoiceId => (is => 'ro', isa => 'Str', request_name => 'botResponseAudioVoiceId', traits => ['NameInRequest']);
  has BotResponses => (is => 'ro', isa => 'ArrayRef[Paws::LexModelsV2::UtteranceBotResponse]', request_name => 'botResponses', traits => ['NameInRequest']);
  has BotVersion => (is => 'ro', isa => 'Str', request_name => 'botVersion', traits => ['NameInRequest']);
  has Channel => (is => 'ro', isa => 'Str', request_name => 'channel', traits => ['NameInRequest']);
  has ConversationEndTime => (is => 'ro', isa => 'Str', request_name => 'conversationEndTime', traits => ['NameInRequest']);
  has ConversationStartTime => (is => 'ro', isa => 'Str', request_name => 'conversationStartTime', traits => ['NameInRequest']);
  has DialogActionType => (is => 'ro', isa => 'Str', request_name => 'dialogActionType', traits => ['NameInRequest']);
  has InputType => (is => 'ro', isa => 'Str', request_name => 'inputType', traits => ['NameInRequest']);
  has IntentState => (is => 'ro', isa => 'Str', request_name => 'intentState', traits => ['NameInRequest']);
  has LocaleId => (is => 'ro', isa => 'Str', request_name => 'localeId', traits => ['NameInRequest']);
  has Mode => (is => 'ro', isa => 'Str', request_name => 'mode', traits => ['NameInRequest']);
  has OutputType => (is => 'ro', isa => 'Str', request_name => 'outputType', traits => ['NameInRequest']);
  has SessionId => (is => 'ro', isa => 'Str', request_name => 'sessionId', traits => ['NameInRequest']);
  has SlotsFilledInSession => (is => 'ro', isa => 'Str', request_name => 'slotsFilledInSession', traits => ['NameInRequest']);
  has Utterance => (is => 'ro', isa => 'Str', request_name => 'utterance', traits => ['NameInRequest']);
  has UtteranceRequestId => (is => 'ro', isa => 'Str', request_name => 'utteranceRequestId', traits => ['NameInRequest']);
  has UtteranceTimestamp => (is => 'ro', isa => 'Str', request_name => 'utteranceTimestamp', traits => ['NameInRequest']);
  has UtteranceUnderstood => (is => 'ro', isa => 'Bool', request_name => 'utteranceUnderstood', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::LexModelsV2::UtteranceSpecification

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::LexModelsV2::UtteranceSpecification object:

  $service_obj->Method(Att1 => { AssociatedIntentName => $value, ..., UtteranceUnderstood => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::LexModelsV2::UtteranceSpecification object:

  $result = $service_obj->Method(...);
  $result->Att1->AssociatedIntentName

=head1 DESCRIPTION

An object containing information about a specific utterance.

=head1 ATTRIBUTES


=head2 AssociatedIntentName => Str

The name of the intent that the utterance is associated to.


=head2 AssociatedSlotName => Str

The name of the slot that the utterance is associated to.


=head2 AudioVoiceDurationMillis => Int

The duration in milliseconds of the audio associated with the
utterance.


=head2 BotAliasId => Str

The identifier of the alias of the bot that the utterance was made to.


=head2 BotResponseAudioVoiceId => Str

The identifier for the audio of the bot response.


=head2 BotResponses => ArrayRef[L<Paws::LexModelsV2::UtteranceBotResponse>]

A list of objects containing information about the bot response to the
utterance.


=head2 BotVersion => Str

The version of the bot that the utterance was made to.


=head2 Channel => Str

The channel that is integrated with the bot that the utterance was made
to.


=head2 ConversationEndTime => Str

The date and time when the conversation in which the utterance took
place ended. A conversation is defined as a unique combination of a
C<sessionId> and an C<originatingRequestId>.


=head2 ConversationStartTime => Str

The date and time when the conversation in which the utterance took
place began. A conversation is defined as a unique combination of a
C<sessionId> and an C<originatingRequestId>.


=head2 DialogActionType => Str

The type of dialog action that the utterance is associated to. See the
C<type> field in DialogAction
(https://docs.aws.amazon.com/lexv2/latest/APIReference/API_runtime_DialogAction.html)
for more information.


=head2 InputType => Str

The input type of the utterance. The possible values are as follows:

=over

=item *

PCM format: audio data must be in little-endian byte order.

=over

=item *

C<audio/l16; rate=16000; channels=1>

=item *

C<audio/x-l16; sample-rate=16000; channel-count=1>

=item *

C<audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1;
is-big-endian=false>

=back

=item *

Opus format

=over

=item *

C<audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4>

=back

=item *

Text format

=over

=item *

C<text/plain; charset=utf-8>

=back

=back



=head2 IntentState => Str

The state of the intent that the utterance is associated to.


=head2 LocaleId => Str

The locale of the bot that the utterance was made to.


=head2 Mode => Str

The mode of the session. The possible values are as follows:

=over

=item *

C<Speech> E<ndash> The session consisted of spoken dialogue.

=item *

C<Text> E<ndash> The session consisted of written dialogue.

=item *

C<DTMF> E<ndash> The session consisted of touch-tone keypad (Dual Tone
Multi-Frequency) key presses.

=item *

C<MultiMode> E<ndash> The session consisted of multiple modes.

=back



=head2 OutputType => Str

The output type of the utterance. The possible values are as follows:

=over

=item *

C<audio/mpeg>

=item *

C<audio/ogg>

=item *

C<audio/pcm (16 KHz)>

=item *

C<audio/> (defaults to C<mpeg>)

=item *

C<text/plain; charset=utf-8>

=back



=head2 SessionId => Str

The identifier of the session that the utterance was made in.


=head2 SlotsFilledInSession => Str

The slots that have been filled in the session by the time of the
utterance.


=head2 Utterance => Str

The text of the utterance.


=head2 UtteranceRequestId => Str

The identifier of the request associated with the utterance.


=head2 UtteranceTimestamp => Str

The date and time when the utterance took place.


=head2 UtteranceUnderstood => Bool

Specifies whether the bot understood the utterance or not.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::LexModelsV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

