# Generated by default/object.tt
package Paws::LexModelsV2::SlotCaptureSetting;
  use Moose;
  has CaptureConditional => (is => 'ro', isa => 'Paws::LexModelsV2::ConditionalSpecification', request_name => 'captureConditional', traits => ['NameInRequest']);
  has CaptureNextStep => (is => 'ro', isa => 'Paws::LexModelsV2::DialogState', request_name => 'captureNextStep', traits => ['NameInRequest']);
  has CaptureResponse => (is => 'ro', isa => 'Paws::LexModelsV2::ResponseSpecification', request_name => 'captureResponse', traits => ['NameInRequest']);
  has CodeHook => (is => 'ro', isa => 'Paws::LexModelsV2::DialogCodeHookInvocationSetting', request_name => 'codeHook', traits => ['NameInRequest']);
  has ElicitationCodeHook => (is => 'ro', isa => 'Paws::LexModelsV2::ElicitationCodeHookInvocationSetting', request_name => 'elicitationCodeHook', traits => ['NameInRequest']);
  has FailureConditional => (is => 'ro', isa => 'Paws::LexModelsV2::ConditionalSpecification', request_name => 'failureConditional', traits => ['NameInRequest']);
  has FailureNextStep => (is => 'ro', isa => 'Paws::LexModelsV2::DialogState', request_name => 'failureNextStep', traits => ['NameInRequest']);
  has FailureResponse => (is => 'ro', isa => 'Paws::LexModelsV2::ResponseSpecification', request_name => 'failureResponse', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::LexModelsV2::SlotCaptureSetting

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::LexModelsV2::SlotCaptureSetting object:

  $service_obj->Method(Att1 => { CaptureConditional => $value, ..., FailureResponse => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::LexModelsV2::SlotCaptureSetting object:

  $result = $service_obj->Method(...);
  $result->Att1->CaptureConditional

=head1 DESCRIPTION

Settings used when Amazon Lex successfully captures a slot value from a
user.

=head1 ATTRIBUTES


=head2 CaptureConditional => L<Paws::LexModelsV2::ConditionalSpecification>

A list of conditional branches to evaluate after the slot value is
captured.


=head2 CaptureNextStep => L<Paws::LexModelsV2::DialogState>

Specifies the next step that the bot runs when the slot value is
captured before the code hook times out.


=head2 CaptureResponse => L<Paws::LexModelsV2::ResponseSpecification>




=head2 CodeHook => L<Paws::LexModelsV2::DialogCodeHookInvocationSetting>

Code hook called after Amazon Lex successfully captures a slot value.


=head2 ElicitationCodeHook => L<Paws::LexModelsV2::ElicitationCodeHookInvocationSetting>

Code hook called when Amazon Lex doesn't capture a slot value.


=head2 FailureConditional => L<Paws::LexModelsV2::ConditionalSpecification>

A list of conditional branches to evaluate when the slot value isn't
captured.


=head2 FailureNextStep => L<Paws::LexModelsV2::DialogState>

Specifies the next step that the bot runs when the slot value code is
not recognized.


=head2 FailureResponse => L<Paws::LexModelsV2::ResponseSpecification>





=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::LexModelsV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

