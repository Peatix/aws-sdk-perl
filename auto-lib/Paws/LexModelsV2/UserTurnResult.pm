# Generated by default/object.tt
package Paws::LexModelsV2::UserTurnResult;
  use Moose;
  has ActualOutput => (is => 'ro', isa => 'Paws::LexModelsV2::UserTurnOutputSpecification', request_name => 'actualOutput', traits => ['NameInRequest']);
  has ConversationLevelResult => (is => 'ro', isa => 'Paws::LexModelsV2::ConversationLevelResultDetail', request_name => 'conversationLevelResult', traits => ['NameInRequest']);
  has EndToEndResult => (is => 'ro', isa => 'Str', request_name => 'endToEndResult', traits => ['NameInRequest']);
  has ErrorDetails => (is => 'ro', isa => 'Paws::LexModelsV2::ExecutionErrorDetails', request_name => 'errorDetails', traits => ['NameInRequest']);
  has ExpectedOutput => (is => 'ro', isa => 'Paws::LexModelsV2::UserTurnOutputSpecification', request_name => 'expectedOutput', traits => ['NameInRequest'], required => 1);
  has Input => (is => 'ro', isa => 'Paws::LexModelsV2::UserTurnInputSpecification', request_name => 'input', traits => ['NameInRequest'], required => 1);
  has IntentMatchResult => (is => 'ro', isa => 'Str', request_name => 'intentMatchResult', traits => ['NameInRequest']);
  has SlotMatchResult => (is => 'ro', isa => 'Str', request_name => 'slotMatchResult', traits => ['NameInRequest']);
  has SpeechTranscriptionResult => (is => 'ro', isa => 'Str', request_name => 'speechTranscriptionResult', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::LexModelsV2::UserTurnResult

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::LexModelsV2::UserTurnResult object:

  $service_obj->Method(Att1 => { ActualOutput => $value, ..., SpeechTranscriptionResult => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::LexModelsV2::UserTurnResult object:

  $result = $service_obj->Method(...);
  $result->Att1->ActualOutput

=head1 DESCRIPTION

Contains the results for the user turn by the test execution.

=head1 ATTRIBUTES


=head2 ActualOutput => L<Paws::LexModelsV2::UserTurnOutputSpecification>

Contains information about the actual output for the user turn.


=head2 ConversationLevelResult => L<Paws::LexModelsV2::ConversationLevelResultDetail>

Contains information about the results related to the conversation
associated with the user turn.


=head2 EndToEndResult => Str

Specifies whether the expected and actual outputs match or not, or if
there is an error in execution.


=head2 ErrorDetails => L<Paws::LexModelsV2::ExecutionErrorDetails>




=head2 B<REQUIRED> ExpectedOutput => L<Paws::LexModelsV2::UserTurnOutputSpecification>

Contains information about the expected output for the user turn.


=head2 B<REQUIRED> Input => L<Paws::LexModelsV2::UserTurnInputSpecification>

Contains information about the user messages in the turn in the input.


=head2 IntentMatchResult => Str

Specifies whether the expected and actual intents match or not.


=head2 SlotMatchResult => Str

Specifies whether the expected and actual slots match or not.


=head2 SpeechTranscriptionResult => Str

Specifies whether the expected and actual speech transcriptions match
or not, or if there is an error in execution.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::LexModelsV2>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

