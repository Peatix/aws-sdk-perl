# Generated by default/object.tt
package Paws::TimestreamQuery::QueryInsights;
  use Moose;
  has Mode => (is => 'ro', isa => 'Str', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::TimestreamQuery::QueryInsights

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::TimestreamQuery::QueryInsights object:

  $service_obj->Method(Att1 => { Mode => $value, ..., Mode => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::TimestreamQuery::QueryInsights object:

  $result = $service_obj->Method(...);
  $result->Att1->Mode

=head1 DESCRIPTION

C<QueryInsights> is a performance tuning feature that helps you
optimize your queries, reducing costs and improving performance. With
C<QueryInsights>, you can assess the pruning efficiency of your queries
and identify areas for improvement to enhance query performance. With
C<QueryInsights>, you can also analyze the effectiveness of your
queries in terms of temporal and spatial pruning, and identify
opportunities to improve performance. Specifically, you can evaluate
how well your queries use time-based and partition key-based indexing
strategies to optimize data retrieval. To optimize query performance,
it's essential that you fine-tune both the temporal and spatial
parameters that govern query execution.

The key metrics provided by C<QueryInsights> are
C<QuerySpatialCoverage> and C<QueryTemporalRange>.
C<QuerySpatialCoverage> indicates how much of the spatial axis the
query scans, with lower values being more efficient.
C<QueryTemporalRange> shows the time range scanned, with narrower
ranges being more performant.

B<Benefits of QueryInsights>

The following are the key benefits of using C<QueryInsights>:

=over

=item *

B<Identifying inefficient queries> E<ndash> C<QueryInsights> provides
information on the time-based and attribute-based pruning of the tables
accessed by the query. This information helps you identify the tables
that are sub-optimally accessed.

=item *

B<Optimizing your data model and partitioning> E<ndash> You can use the
C<QueryInsights> information to access and fine-tune your data model
and partitioning strategy.

=item *

B<Tuning queries> E<ndash> C<QueryInsights> highlights opportunities to
use indexes more effectively.

=back

The maximum number of C<Query> API requests you're allowed to make with
C<QueryInsights> enabled is 1 query per second (QPS). If you exceed
this query rate, it might result in throttling.

=head1 ATTRIBUTES


=head2 B<REQUIRED> Mode => Str

Provides the following modes to enable C<QueryInsights>:

=over

=item *

C<ENABLED_WITH_RATE_CONTROL> E<ndash> Enables C<QueryInsights> for the
queries being processed. This mode also includes a rate control
mechanism, which limits the C<QueryInsights> feature to 1 query per
second (QPS).

=item *

C<DISABLED> E<ndash> Disables C<QueryInsights>.

=back




=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::TimestreamQuery>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

