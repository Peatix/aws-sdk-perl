# Generated by default/object.tt
package Paws::AutoScaling::InstancesDistribution;
  use Moose;
  has OnDemandAllocationStrategy => (is => 'ro', isa => 'Str');
  has OnDemandBaseCapacity => (is => 'ro', isa => 'Int');
  has OnDemandPercentageAboveBaseCapacity => (is => 'ro', isa => 'Int');
  has SpotAllocationStrategy => (is => 'ro', isa => 'Str');
  has SpotInstancePools => (is => 'ro', isa => 'Int');
  has SpotMaxPrice => (is => 'ro', isa => 'Str');

1;

### main pod documentation begin ###

=head1 NAME

Paws::AutoScaling::InstancesDistribution

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::AutoScaling::InstancesDistribution object:

  $service_obj->Method(Att1 => { OnDemandAllocationStrategy => $value, ..., SpotMaxPrice => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::AutoScaling::InstancesDistribution object:

  $result = $service_obj->Method(...);
  $result->Att1->OnDemandAllocationStrategy

=head1 DESCRIPTION

Use this structure to specify the distribution of On-Demand Instances
and Spot Instances and the allocation strategies used to fulfill
On-Demand and Spot capacities for a mixed instances policy.

=head1 ATTRIBUTES


=head2 OnDemandAllocationStrategy => Str

The allocation strategy to apply to your On-Demand Instances when they
are launched. Possible instance types are determined by the launch
template overrides that you specify.

The following lists the valid values:

=over

=item lowest-price

Uses price to determine which instance types are the highest priority,
launching the lowest priced instance types within an Availability Zone
first. This is the default value for Auto Scaling groups that specify
InstanceRequirements
(https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_InstanceRequirements.html).

=item prioritized

You set the order of instance types for the launch template overrides
from highest to lowest priority (from first to last in the list).
Amazon EC2 Auto Scaling launches your highest priority instance types
first. If all your On-Demand capacity cannot be fulfilled using your
highest priority instance type, then Amazon EC2 Auto Scaling launches
the remaining capacity using the second priority instance type, and so
on. This is the default value for Auto Scaling groups that don't
specify InstanceRequirements
(https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_InstanceRequirements.html)
and cannot be used for groups that do.

=back



=head2 OnDemandBaseCapacity => Int

The minimum amount of the Auto Scaling group's capacity that must be
fulfilled by On-Demand Instances. This base portion is launched first
as your group scales.

This number has the same unit of measurement as the group's desired
capacity. If you change the default unit of measurement (number of
instances) by specifying weighted capacity values in your launch
template overrides list, or by changing the default desired capacity
type setting of the group, you must specify this number using the same
unit of measurement.

Default: 0


=head2 OnDemandPercentageAboveBaseCapacity => Int

Controls the percentages of On-Demand Instances and Spot Instances for
your additional capacity beyond C<OnDemandBaseCapacity>. Expressed as a
number (for example, 20 specifies 20% On-Demand Instances, 80% Spot
Instances). If set to 100, only On-Demand Instances are used.

Default: 100


=head2 SpotAllocationStrategy => Str

The allocation strategy to apply to your Spot Instances when they are
launched. Possible instance types are determined by the launch template
overrides that you specify.

The following lists the valid values:

=over

=item capacity-optimized

Requests Spot Instances using pools that are optimally chosen based on
the available Spot capacity. This strategy has the lowest risk of
interruption. To give certain instance types a higher chance of
launching first, use C<capacity-optimized-prioritized>.

=item capacity-optimized-prioritized

You set the order of instance types for the launch template overrides
from highest to lowest priority (from first to last in the list).
Amazon EC2 Auto Scaling honors the instance type priorities on a best
effort basis but optimizes for capacity first. Note that if the
On-Demand allocation strategy is set to C<prioritized>, the same
priority is applied when fulfilling On-Demand capacity. This is not a
valid value for Auto Scaling groups that specify InstanceRequirements
(https://docs.aws.amazon.com/autoscaling/ec2/APIReference/API_InstanceRequirements.html).

=item lowest-price

Requests Spot Instances using the lowest priced pools within an
Availability Zone, across the number of Spot pools that you specify for
the C<SpotInstancePools> property. To ensure that your desired capacity
is met, you might receive Spot Instances from several pools. This is
the default value, but it might lead to high interruption rates because
this strategy only considers instance price and not available capacity.

=item price-capacity-optimized (recommended)

The price and capacity optimized allocation strategy looks at both
price and capacity to select the Spot Instance pools that are the least
likely to be interrupted and have the lowest possible price.

=back



=head2 SpotInstancePools => Int

The number of Spot Instance pools across which to allocate your Spot
Instances. The Spot pools are determined from the different instance
types in the overrides. Valid only when the C<SpotAllocationStrategy>
is C<lowest-price>. Value must be in the range of 1E<ndash>20.

Default: 2


=head2 SpotMaxPrice => Str

The maximum price per unit hour that you are willing to pay for a Spot
Instance. If your maximum price is lower than the Spot price for the
instance types that you selected, your Spot Instances are not launched.
We do not recommend specifying a maximum price because it can lead to
increased interruptions. When Spot Instances launch, you pay the
current Spot price. To remove a maximum price that you previously set,
include the property but specify an empty string ("") for the value.

If you specify a maximum price, your instances will be interrupted more
frequently than if you do not specify one.

Valid Range: Minimum value of 0.001



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::AutoScaling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

