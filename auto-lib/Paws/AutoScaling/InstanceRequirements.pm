# Generated by default/object.tt
package Paws::AutoScaling::InstanceRequirements;
  use Moose;
  has AcceleratorCount => (is => 'ro', isa => 'Paws::AutoScaling::AcceleratorCountRequest');
  has AcceleratorManufacturers => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has AcceleratorNames => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has AcceleratorTotalMemoryMiB => (is => 'ro', isa => 'Paws::AutoScaling::AcceleratorTotalMemoryMiBRequest');
  has AcceleratorTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has AllowedInstanceTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has BareMetal => (is => 'ro', isa => 'Str');
  has BaselineEbsBandwidthMbps => (is => 'ro', isa => 'Paws::AutoScaling::BaselineEbsBandwidthMbpsRequest');
  has BaselinePerformanceFactors => (is => 'ro', isa => 'Paws::AutoScaling::BaselinePerformanceFactorsRequest');
  has BurstablePerformance => (is => 'ro', isa => 'Str');
  has CpuManufacturers => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has ExcludedInstanceTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has InstanceGenerations => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has LocalStorage => (is => 'ro', isa => 'Str');
  has LocalStorageTypes => (is => 'ro', isa => 'ArrayRef[Str|Undef]');
  has MaxSpotPriceAsPercentageOfOptimalOnDemandPrice => (is => 'ro', isa => 'Int');
  has MemoryGiBPerVCpu => (is => 'ro', isa => 'Paws::AutoScaling::MemoryGiBPerVCpuRequest');
  has MemoryMiB => (is => 'ro', isa => 'Paws::AutoScaling::MemoryMiBRequest', required => 1);
  has NetworkBandwidthGbps => (is => 'ro', isa => 'Paws::AutoScaling::NetworkBandwidthGbpsRequest');
  has NetworkInterfaceCount => (is => 'ro', isa => 'Paws::AutoScaling::NetworkInterfaceCountRequest');
  has OnDemandMaxPricePercentageOverLowestPrice => (is => 'ro', isa => 'Int');
  has RequireHibernateSupport => (is => 'ro', isa => 'Bool');
  has SpotMaxPricePercentageOverLowestPrice => (is => 'ro', isa => 'Int');
  has TotalLocalStorageGB => (is => 'ro', isa => 'Paws::AutoScaling::TotalLocalStorageGBRequest');
  has VCpuCount => (is => 'ro', isa => 'Paws::AutoScaling::VCpuCountRequest', required => 1);

1;

### main pod documentation begin ###

=head1 NAME

Paws::AutoScaling::InstanceRequirements

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::AutoScaling::InstanceRequirements object:

  $service_obj->Method(Att1 => { AcceleratorCount => $value, ..., VCpuCount => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::AutoScaling::InstanceRequirements object:

  $result = $service_obj->Method(...);
  $result->Att1->AcceleratorCount

=head1 DESCRIPTION

The attributes for the instance types for a mixed instances policy.
Amazon EC2 Auto Scaling uses your specified requirements to identify
instance types. Then, it uses your On-Demand and Spot allocation
strategies to launch instances from these instance types.

When you specify multiple attributes, you get instance types that
satisfy all of the specified attributes. If you specify multiple values
for an attribute, you get instance types that satisfy any of the
specified values.

To limit the list of instance types from which Amazon EC2 Auto Scaling
can identify matching instance types, you can use one of the following
parameters, but not both in the same request:

=over

=item *

C<AllowedInstanceTypes> - The instance types to include in the list.
All other instance types are ignored, even if they match your specified
attributes.

=item *

C<ExcludedInstanceTypes> - The instance types to exclude from the list,
even if they match your specified attributes.

=back

You must specify C<VCpuCount> and C<MemoryMiB>. All other attributes
are optional. Any unspecified optional attribute is set to its default.

For more information, see Create a mixed instances group using
attribute-based instance type selection
(https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-mixed-instances-group-attribute-based-instance-type-selection.html)
in the I<Amazon EC2 Auto Scaling User Guide>. For help determining
which instance types match your attributes before you apply them to
your Auto Scaling group, see Preview instance types with specified
attributes
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements)
in the I<Amazon EC2 User Guide for Linux Instances>.

=head1 ATTRIBUTES


=head2 AcceleratorCount => L<Paws::AutoScaling::AcceleratorCountRequest>

The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon
Web Services Inferentia chips) for an instance type.

To exclude accelerator-enabled instance types, set C<Max> to C<0>.

Default: No minimum or maximum limits


=head2 AcceleratorManufacturers => ArrayRef[Str|Undef]

Indicates whether instance types must have accelerators by specific
manufacturers.

=over

=item *

For instance types with NVIDIA devices, specify C<nvidia>.

=item *

For instance types with AMD devices, specify C<amd>.

=item *

For instance types with Amazon Web Services devices, specify
C<amazon-web-services>.

=item *

For instance types with Xilinx devices, specify C<xilinx>.

=back

Default: Any manufacturer


=head2 AcceleratorNames => ArrayRef[Str|Undef]

Lists the accelerators that must be on an instance type.

=over

=item *

For instance types with NVIDIA A100 GPUs, specify C<a100>.

=item *

For instance types with NVIDIA V100 GPUs, specify C<v100>.

=item *

For instance types with NVIDIA K80 GPUs, specify C<k80>.

=item *

For instance types with NVIDIA T4 GPUs, specify C<t4>.

=item *

For instance types with NVIDIA M60 GPUs, specify C<m60>.

=item *

For instance types with AMD Radeon Pro V520 GPUs, specify
C<radeon-pro-v520>.

=item *

For instance types with Xilinx VU9P FPGAs, specify C<vu9p>.

=back

Default: Any accelerator


=head2 AcceleratorTotalMemoryMiB => L<Paws::AutoScaling::AcceleratorTotalMemoryMiBRequest>

The minimum and maximum total memory size for the accelerators on an
instance type, in MiB.

Default: No minimum or maximum limits


=head2 AcceleratorTypes => ArrayRef[Str|Undef]

Lists the accelerator types that must be on an instance type.

=over

=item *

For instance types with GPU accelerators, specify C<gpu>.

=item *

For instance types with FPGA accelerators, specify C<fpga>.

=item *

For instance types with inference accelerators, specify C<inference>.

=back

Default: Any accelerator type


=head2 AllowedInstanceTypes => ArrayRef[Str|Undef]

The instance types to apply your specified attributes against. All
other instance types are ignored, even if they match your specified
attributes.

You can use strings with one or more wild cards, represented by an
asterisk (C<*>), to allow an instance type, size, or generation. The
following are examples: C<m5.8xlarge>, C<c5*.*>, C<m5a.*>, C<r*>,
C<*3*>.

For example, if you specify C<c5*>, Amazon EC2 Auto Scaling will allow
the entire C5 instance family, which includes all C5a and C5n instance
types. If you specify C<m5a.*>, Amazon EC2 Auto Scaling will allow all
the M5a instance types, but not the M5n instance types.

If you specify C<AllowedInstanceTypes>, you can't specify
C<ExcludedInstanceTypes>.

Default: All instance types


=head2 BareMetal => Str

Indicates whether bare metal instance types are included, excluded, or
required.

Default: C<excluded>


=head2 BaselineEbsBandwidthMbps => L<Paws::AutoScaling::BaselineEbsBandwidthMbpsRequest>

The minimum and maximum baseline bandwidth performance for an instance
type, in Mbps. For more information, see Amazon EBSE<ndash>optimized
instances
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html)
in the I<Amazon EC2 User Guide for Linux Instances>.

Default: No minimum or maximum limits


=head2 BaselinePerformanceFactors => L<Paws::AutoScaling::BaselinePerformanceFactorsRequest>

The baseline performance factors for the instance requirements.


=head2 BurstablePerformance => Str

Indicates whether burstable performance instance types are included,
excluded, or required. For more information, see Burstable performance
instances
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html)
in the I<Amazon EC2 User Guide for Linux Instances>.

Default: C<excluded>


=head2 CpuManufacturers => ArrayRef[Str|Undef]

Lists which specific CPU manufacturers to include.

=over

=item *

For instance types with Intel CPUs, specify C<intel>.

=item *

For instance types with AMD CPUs, specify C<amd>.

=item *

For instance types with Amazon Web Services CPUs, specify
C<amazon-web-services>.

=back

Don't confuse the CPU hardware manufacturer with the CPU hardware
architecture. Instances will be launched with a compatible CPU
architecture based on the Amazon Machine Image (AMI) that you specify
in your launch template.

Default: Any manufacturer


=head2 ExcludedInstanceTypes => ArrayRef[Str|Undef]

The instance types to exclude. You can use strings with one or more
wild cards, represented by an asterisk (C<*>), to exclude an instance
family, type, size, or generation. The following are examples:
C<m5.8xlarge>, C<c5*.*>, C<m5a.*>, C<r*>, C<*3*>.

For example, if you specify C<c5*>, you are excluding the entire C5
instance family, which includes all C5a and C5n instance types. If you
specify C<m5a.*>, Amazon EC2 Auto Scaling will exclude all the M5a
instance types, but not the M5n instance types.

If you specify C<ExcludedInstanceTypes>, you can't specify
C<AllowedInstanceTypes>.

Default: No excluded instance types


=head2 InstanceGenerations => ArrayRef[Str|Undef]

Indicates whether current or previous generation instance types are
included.

=over

=item *

For current generation instance types, specify C<current>. The current
generation includes EC2 instance types currently recommended for use.
This typically includes the latest two to three generations in each
instance family. For more information, see Instance types
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)
in the I<Amazon EC2 User Guide for Linux Instances>.

=item *

For previous generation instance types, specify C<previous>.

=back

Default: Any current or previous generation


=head2 LocalStorage => Str

Indicates whether instance types with instance store volumes are
included, excluded, or required. For more information, see Amazon EC2
instance store
(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html)
in the I<Amazon EC2 User Guide for Linux Instances>.

Default: C<included>


=head2 LocalStorageTypes => ArrayRef[Str|Undef]

Indicates the type of local storage that is required.

=over

=item *

For instance types with hard disk drive (HDD) storage, specify C<hdd>.

=item *

For instance types with solid state drive (SSD) storage, specify
C<ssd>.

=back

Default: Any local storage type


=head2 MaxSpotPriceAsPercentageOfOptimalOnDemandPrice => Int

[Price protection] The price protection threshold for Spot Instances,
as a percentage of an identified On-Demand price. The identified
On-Demand price is the price of the lowest priced current generation C,
M, or R instance type with your specified attributes. If no current
generation C, M, or R instance type matches your attributes, then the
identified price is from either the lowest priced current generation
instance types or, failing that, the lowest priced previous generation
instance types that match your attributes. When Amazon EC2 Auto Scaling
selects instance types with your attributes, we will exclude instance
types whose price exceeds your specified threshold.

The parameter accepts an integer, which Amazon EC2 Auto Scaling
interprets as a percentage.

If you set C<DesiredCapacityType> to C<vcpu> or C<memory-mib>, the
price protection threshold is based on the per-vCPU or per-memory price
instead of the per instance price.

Only one of C<SpotMaxPricePercentageOverLowestPrice> or
C<MaxSpotPriceAsPercentageOfOptimalOnDemandPrice> can be specified. If
you don't specify either, Amazon EC2 Auto Scaling will automatically
apply optimal price protection to consistently select from a wide range
of instance types. To indicate no price protection threshold for Spot
Instances, meaning you want to consider all instance types that match
your attributes, include one of these parameters and specify a high
value, such as C<999999>.


=head2 MemoryGiBPerVCpu => L<Paws::AutoScaling::MemoryGiBPerVCpuRequest>

The minimum and maximum amount of memory per vCPU for an instance type,
in GiB.

Default: No minimum or maximum limits


=head2 B<REQUIRED> MemoryMiB => L<Paws::AutoScaling::MemoryMiBRequest>

The minimum and maximum instance memory size for an instance type, in
MiB.


=head2 NetworkBandwidthGbps => L<Paws::AutoScaling::NetworkBandwidthGbpsRequest>

The minimum and maximum amount of network bandwidth, in gigabits per
second (Gbps).

Default: No minimum or maximum limits


=head2 NetworkInterfaceCount => L<Paws::AutoScaling::NetworkInterfaceCountRequest>

The minimum and maximum number of network interfaces for an instance
type.

Default: No minimum or maximum limits


=head2 OnDemandMaxPricePercentageOverLowestPrice => Int

[Price protection] The price protection threshold for On-Demand
Instances, as a percentage higher than an identified On-Demand price.
The identified On-Demand price is the price of the lowest priced
current generation C, M, or R instance type with your specified
attributes. If no current generation C, M, or R instance type matches
your attributes, then the identified price is from either the lowest
priced current generation instance types or, failing that, the lowest
priced previous generation instance types that match your attributes.
When Amazon EC2 Auto Scaling selects instance types with your
attributes, we will exclude instance types whose price exceeds your
specified threshold.

The parameter accepts an integer, which Amazon EC2 Auto Scaling
interprets as a percentage.

To turn off price protection, specify a high value, such as C<999999>.

If you set C<DesiredCapacityType> to C<vcpu> or C<memory-mib>, the
price protection threshold is applied based on the per-vCPU or
per-memory price instead of the per instance price.

Default: C<20>


=head2 RequireHibernateSupport => Bool

Indicates whether instance types must provide On-Demand Instance
hibernation support.

Default: C<false>


=head2 SpotMaxPricePercentageOverLowestPrice => Int

[Price protection] The price protection threshold for Spot Instances,
as a percentage higher than an identified Spot price. The identified
Spot price is the price of the lowest priced current generation C, M,
or R instance type with your specified attributes. If no current
generation C, M, or R instance type matches your attributes, then the
identified price is from either the lowest priced current generation
instance types or, failing that, the lowest priced previous generation
instance types that match your attributes. When Amazon EC2 Auto Scaling
selects instance types with your attributes, we will exclude instance
types whose price exceeds your specified threshold.

The parameter accepts an integer, which Amazon EC2 Auto Scaling
interprets as a percentage.

If you set C<DesiredCapacityType> to C<vcpu> or C<memory-mib>, the
price protection threshold is based on the per-vCPU or per-memory price
instead of the per instance price.

Only one of C<SpotMaxPricePercentageOverLowestPrice> or
C<MaxSpotPriceAsPercentageOfOptimalOnDemandPrice> can be specified. If
you don't specify either, Amazon EC2 Auto Scaling will automatically
apply optimal price protection to consistently select from a wide range
of instance types. To indicate no price protection threshold for Spot
Instances, meaning you want to consider all instance types that match
your attributes, include one of these parameters and specify a high
value, such as C<999999>.


=head2 TotalLocalStorageGB => L<Paws::AutoScaling::TotalLocalStorageGBRequest>

The minimum and maximum total local storage size for an instance type,
in GB.

Default: No minimum or maximum limits


=head2 B<REQUIRED> VCpuCount => L<Paws::AutoScaling::VCpuCountRequest>

The minimum and maximum number of vCPUs for an instance type.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::AutoScaling>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

