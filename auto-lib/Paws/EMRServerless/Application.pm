# Generated by default/object.tt
package Paws::EMRServerless::Application;
  use Moose;
  has ApplicationId => (is => 'ro', isa => 'Str', request_name => 'applicationId', traits => ['NameInRequest'], required => 1);
  has Architecture => (is => 'ro', isa => 'Str', request_name => 'architecture', traits => ['NameInRequest']);
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest'], required => 1);
  has AutoStartConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::AutoStartConfig', request_name => 'autoStartConfiguration', traits => ['NameInRequest']);
  has AutoStopConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::AutoStopConfig', request_name => 'autoStopConfiguration', traits => ['NameInRequest']);
  has CreatedAt => (is => 'ro', isa => 'Str', request_name => 'createdAt', traits => ['NameInRequest'], required => 1);
  has ImageConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::ImageConfiguration', request_name => 'imageConfiguration', traits => ['NameInRequest']);
  has InitialCapacity => (is => 'ro', isa => 'Paws::EMRServerless::InitialCapacityConfigMap', request_name => 'initialCapacity', traits => ['NameInRequest']);
  has InteractiveConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::InteractiveConfiguration', request_name => 'interactiveConfiguration', traits => ['NameInRequest']);
  has MaximumCapacity => (is => 'ro', isa => 'Paws::EMRServerless::MaximumAllowedResources', request_name => 'maximumCapacity', traits => ['NameInRequest']);
  has MonitoringConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::MonitoringConfiguration', request_name => 'monitoringConfiguration', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has NetworkConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::NetworkConfiguration', request_name => 'networkConfiguration', traits => ['NameInRequest']);
  has ReleaseLabel => (is => 'ro', isa => 'Str', request_name => 'releaseLabel', traits => ['NameInRequest'], required => 1);
  has RuntimeConfiguration => (is => 'ro', isa => 'ArrayRef[Paws::EMRServerless::Configuration]', request_name => 'runtimeConfiguration', traits => ['NameInRequest']);
  has SchedulerConfiguration => (is => 'ro', isa => 'Paws::EMRServerless::SchedulerConfiguration', request_name => 'schedulerConfiguration', traits => ['NameInRequest']);
  has State => (is => 'ro', isa => 'Str', request_name => 'state', traits => ['NameInRequest'], required => 1);
  has StateDetails => (is => 'ro', isa => 'Str', request_name => 'stateDetails', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::EMRServerless::TagMap', request_name => 'tags', traits => ['NameInRequest']);
  has Type => (is => 'ro', isa => 'Str', request_name => 'type', traits => ['NameInRequest'], required => 1);
  has UpdatedAt => (is => 'ro', isa => 'Str', request_name => 'updatedAt', traits => ['NameInRequest'], required => 1);
  has WorkerTypeSpecifications => (is => 'ro', isa => 'Paws::EMRServerless::WorkerTypeSpecificationMap', request_name => 'workerTypeSpecifications', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::EMRServerless::Application

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::EMRServerless::Application object:

  $service_obj->Method(Att1 => { ApplicationId => $value, ..., WorkerTypeSpecifications => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::EMRServerless::Application object:

  $result = $service_obj->Method(...);
  $result->Att1->ApplicationId

=head1 DESCRIPTION

Information about an application. Amazon EMR Serverless uses
applications to run jobs.

=head1 ATTRIBUTES


=head2 B<REQUIRED> ApplicationId => Str

The ID of the application.


=head2 Architecture => Str

The CPU architecture of an application.


=head2 B<REQUIRED> Arn => Str

The ARN of the application.


=head2 AutoStartConfiguration => L<Paws::EMRServerless::AutoStartConfig>

The configuration for an application to automatically start on job
submission.


=head2 AutoStopConfiguration => L<Paws::EMRServerless::AutoStopConfig>

The configuration for an application to automatically stop after a
certain amount of time being idle.


=head2 B<REQUIRED> CreatedAt => Str

The date and time when the application run was created.


=head2 ImageConfiguration => L<Paws::EMRServerless::ImageConfiguration>

The image configuration applied to all worker types.


=head2 InitialCapacity => L<Paws::EMRServerless::InitialCapacityConfigMap>

The initial capacity of the application.


=head2 InteractiveConfiguration => L<Paws::EMRServerless::InteractiveConfiguration>

The interactive configuration object that enables the interactive use
cases for an application.


=head2 MaximumCapacity => L<Paws::EMRServerless::MaximumAllowedResources>

The maximum capacity of the application. This is cumulative across all
workers at any given point in time during the lifespan of the
application is created. No new resources will be created once any one
of the defined limits is hit.


=head2 MonitoringConfiguration => L<Paws::EMRServerless::MonitoringConfiguration>




=head2 Name => Str

The name of the application.


=head2 NetworkConfiguration => L<Paws::EMRServerless::NetworkConfiguration>

The network configuration for customer VPC connectivity for the
application.


=head2 B<REQUIRED> ReleaseLabel => Str

The Amazon EMR release associated with the application.


=head2 RuntimeConfiguration => ArrayRef[L<Paws::EMRServerless::Configuration>]

The Configuration
(https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_Configuration.html)
specifications of an application. Each configuration consists of a
classification and properties. You use this parameter when creating or
updating an application. To see the runtimeConfiguration object of an
application, run the GetApplication
(https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_GetApplication.html)
API operation.


=head2 SchedulerConfiguration => L<Paws::EMRServerless::SchedulerConfiguration>

The scheduler configuration for batch and streaming jobs running on
this application. Supported with release labels emr-7.0.0 and above.


=head2 B<REQUIRED> State => Str

The state of the application.


=head2 StateDetails => Str

The state details of the application.


=head2 Tags => L<Paws::EMRServerless::TagMap>

The tags assigned to the application.


=head2 B<REQUIRED> Type => Str

The type of application, such as Spark or Hive.


=head2 B<REQUIRED> UpdatedAt => Str

The date and time when the application run was last updated.


=head2 WorkerTypeSpecifications => L<Paws::EMRServerless::WorkerTypeSpecificationMap>

The specification applied to each worker type.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::EMRServerless>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

