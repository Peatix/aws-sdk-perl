# Generated by default/object.tt
package Paws::Ivschat::LoggingConfigurationSummary;
  use Moose;
  has Arn => (is => 'ro', isa => 'Str', request_name => 'arn', traits => ['NameInRequest']);
  has CreateTime => (is => 'ro', isa => 'Str', request_name => 'createTime', traits => ['NameInRequest']);
  has DestinationConfiguration => (is => 'ro', isa => 'Paws::Ivschat::DestinationConfiguration', request_name => 'destinationConfiguration', traits => ['NameInRequest']);
  has Id => (is => 'ro', isa => 'Str', request_name => 'id', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest']);
  has State => (is => 'ro', isa => 'Str', request_name => 'state', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'Paws::Ivschat::Tags', request_name => 'tags', traits => ['NameInRequest']);
  has UpdateTime => (is => 'ro', isa => 'Str', request_name => 'updateTime', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::Ivschat::LoggingConfigurationSummary

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::Ivschat::LoggingConfigurationSummary object:

  $service_obj->Method(Att1 => { Arn => $value, ..., UpdateTime => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::Ivschat::LoggingConfigurationSummary object:

  $result = $service_obj->Method(...);
  $result->Att1->Arn

=head1 DESCRIPTION

Summary information about a logging configuration.

=head1 ATTRIBUTES


=head2 Arn => Str

Logging-configuration ARN.


=head2 CreateTime => Str

Time when the logging configuration was created. This is an ISO 8601
timestamp; I<note that this is returned as a string>.


=head2 DestinationConfiguration => L<Paws::Ivschat::DestinationConfiguration>

A complex type that contains a destination configuration for where chat
content will be logged.


=head2 Id => Str

Logging-configuration ID, generated by the system. This is a relative
identifier, the part of the ARN that uniquely identifies the room.


=head2 Name => Str

Logging-configuration name. The value does not need to be unique.


=head2 State => Str

The state of the logging configuration. When this is C<ACTIVE>, the
configuration is ready for logging chat content.


=head2 Tags => L<Paws::Ivschat::Tags>

Tags to attach to the resource. Array of maps, each of the form
C<string:string (key:value)>. See Best practices and strategies
(https://docs.aws.amazon.com/tag-editor/latest/userguide/best-practices-and-strats.html)
in I<Tagging Amazon Web Services Resources and Tag Editor> for details,
including restrictions that apply to tags and "Tag naming limits and
requirements"; Amazon IVS Chat has no constraints on tags beyond what
is documented there.


=head2 UpdateTime => Str

Time of the logging configurationE<rsquo>s last update. This is an ISO
8601 timestamp; I<note that this is returned as a string>.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::Ivschat>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

