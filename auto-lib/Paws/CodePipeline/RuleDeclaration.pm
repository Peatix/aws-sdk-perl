# Generated by default/object.tt
package Paws::CodePipeline::RuleDeclaration;
  use Moose;
  has Commands => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'commands', traits => ['NameInRequest']);
  has Configuration => (is => 'ro', isa => 'Paws::CodePipeline::RuleConfigurationMap', request_name => 'configuration', traits => ['NameInRequest']);
  has InputArtifacts => (is => 'ro', isa => 'ArrayRef[Paws::CodePipeline::InputArtifact]', request_name => 'inputArtifacts', traits => ['NameInRequest']);
  has Name => (is => 'ro', isa => 'Str', request_name => 'name', traits => ['NameInRequest'], required => 1);
  has Region => (is => 'ro', isa => 'Str', request_name => 'region', traits => ['NameInRequest']);
  has RoleArn => (is => 'ro', isa => 'Str', request_name => 'roleArn', traits => ['NameInRequest']);
  has RuleTypeId => (is => 'ro', isa => 'Paws::CodePipeline::RuleTypeId', request_name => 'ruleTypeId', traits => ['NameInRequest'], required => 1);
  has TimeoutInMinutes => (is => 'ro', isa => 'Int', request_name => 'timeoutInMinutes', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::CodePipeline::RuleDeclaration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::CodePipeline::RuleDeclaration object:

  $service_obj->Method(Att1 => { Commands => $value, ..., TimeoutInMinutes => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::CodePipeline::RuleDeclaration object:

  $result = $service_obj->Method(...);
  $result->Att1->Commands

=head1 DESCRIPTION

Represents information about the rule to be created for an associated
condition. An example would be creating a new rule for an entry
condition, such as a rule that checks for a test result before allowing
the run to enter the deployment stage. For more information about
conditions, see Stage conditions
(https://docs.aws.amazon.com/codepipeline/latest/userguide/stage-conditions.html)
and How do stage conditions work?
(https://docs.aws.amazon.com/codepipeline/latest/userguide/concepts-how-it-works-conditions.html).
For more information about rules, see the CodePipeline rule reference
(https://docs.aws.amazon.com/codepipeline/latest/userguide/rule-reference.html).

=head1 ATTRIBUTES


=head2 Commands => ArrayRef[Str|Undef]

The shell commands to run with your commands rule in CodePipeline. All
commands are supported except multi-line formats. While CodeBuild logs
and permissions are used, you do not need to create any resources in
CodeBuild.

Using compute time for this action will incur separate charges in
CodeBuild.


=head2 Configuration => L<Paws::CodePipeline::RuleConfigurationMap>

The action configuration fields for the rule.


=head2 InputArtifacts => ArrayRef[L<Paws::CodePipeline::InputArtifact>]

The input artifacts fields for the rule, such as specifying an input
file for the rule.


=head2 B<REQUIRED> Name => Str

The name of the rule that is created for the condition, such as
C<VariableCheck>.


=head2 Region => Str

The Region for the condition associated with the rule.


=head2 RoleArn => Str

The pipeline role ARN associated with the rule.


=head2 B<REQUIRED> RuleTypeId => L<Paws::CodePipeline::RuleTypeId>

The ID for the rule type, which is made up of the combined values for
category, owner, provider, and version.


=head2 TimeoutInMinutes => Int

The action timeout for the rule.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::CodePipeline>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

