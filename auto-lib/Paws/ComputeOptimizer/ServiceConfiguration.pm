# Generated by default/object.tt
package Paws::ComputeOptimizer::ServiceConfiguration;
  use Moose;
  has AutoScalingConfiguration => (is => 'ro', isa => 'Str', request_name => 'autoScalingConfiguration', traits => ['NameInRequest']);
  has ContainerConfigurations => (is => 'ro', isa => 'ArrayRef[Paws::ComputeOptimizer::ContainerConfiguration]', request_name => 'containerConfigurations', traits => ['NameInRequest']);
  has Cpu => (is => 'ro', isa => 'Int', request_name => 'cpu', traits => ['NameInRequest']);
  has Memory => (is => 'ro', isa => 'Int', request_name => 'memory', traits => ['NameInRequest']);
  has TaskDefinitionArn => (is => 'ro', isa => 'Str', request_name => 'taskDefinitionArn', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ComputeOptimizer::ServiceConfiguration

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ComputeOptimizer::ServiceConfiguration object:

  $service_obj->Method(Att1 => { AutoScalingConfiguration => $value, ..., TaskDefinitionArn => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ComputeOptimizer::ServiceConfiguration object:

  $result = $service_obj->Method(...);
  $result->Att1->AutoScalingConfiguration

=head1 DESCRIPTION

The Amazon ECS service configurations used for recommendations.

=head1 ATTRIBUTES


=head2 AutoScalingConfiguration => Str

Describes the Auto Scaling configuration methods for an Amazon ECS
service. This affects the generated recommendations. For example, if
Auto Scaling is configured on a serviceE<rsquo>s CPU, then Compute
Optimizer doesnE<rsquo>t generate CPU size recommendations.

The Auto Scaling configuration methods include:

=over

=item *

C<TARGET_TRACKING_SCALING_CPU> E<mdash> If the Amazon ECS service is
configured to use target scaling on CPU, Compute Optimizer doesn't
generate CPU recommendations.

=item *

C<TARGET_TRACKING_SCALING_MEMORY> E<mdash> If the Amazon ECS service is
configured to use target scaling on memory, Compute Optimizer doesn't
generate memory recommendations.

=back

For more information about step scaling and target scaling, see Step
scaling policies for Application Auto Scaling
(https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-step-scaling-policies.html)
and Target tracking scaling policies for Application Auto Scaling
(https://docs.aws.amazon.com/autoscaling/application/userguide/application-auto-scaling-target-tracking.html)
in the I<Application Auto Scaling User Guide>.


=head2 ContainerConfigurations => ArrayRef[L<Paws::ComputeOptimizer::ContainerConfiguration>]

The container configurations within a task of an Amazon ECS service.


=head2 Cpu => Int

The number of CPU units used by the tasks in the Amazon ECS service.


=head2 Memory => Int

The amount of memory used by the tasks in the Amazon ECS service.


=head2 TaskDefinitionArn => Str

The task definition ARN used by the tasks in the Amazon ECS service.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ComputeOptimizer>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

