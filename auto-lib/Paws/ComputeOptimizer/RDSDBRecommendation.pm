# Generated by default/object.tt
package Paws::ComputeOptimizer::RDSDBRecommendation;
  use Moose;
  has AccountId => (is => 'ro', isa => 'Str', request_name => 'accountId', traits => ['NameInRequest']);
  has CurrentDBInstanceClass => (is => 'ro', isa => 'Str', request_name => 'currentDBInstanceClass', traits => ['NameInRequest']);
  has CurrentInstancePerformanceRisk => (is => 'ro', isa => 'Str', request_name => 'currentInstancePerformanceRisk', traits => ['NameInRequest']);
  has CurrentStorageConfiguration => (is => 'ro', isa => 'Paws::ComputeOptimizer::DBStorageConfiguration', request_name => 'currentStorageConfiguration', traits => ['NameInRequest']);
  has DbClusterIdentifier => (is => 'ro', isa => 'Str', request_name => 'dbClusterIdentifier', traits => ['NameInRequest']);
  has EffectiveRecommendationPreferences => (is => 'ro', isa => 'Paws::ComputeOptimizer::RDSEffectiveRecommendationPreferences', request_name => 'effectiveRecommendationPreferences', traits => ['NameInRequest']);
  has Engine => (is => 'ro', isa => 'Str', request_name => 'engine', traits => ['NameInRequest']);
  has EngineVersion => (is => 'ro', isa => 'Str', request_name => 'engineVersion', traits => ['NameInRequest']);
  has Idle => (is => 'ro', isa => 'Str', request_name => 'idle', traits => ['NameInRequest']);
  has InstanceFinding => (is => 'ro', isa => 'Str', request_name => 'instanceFinding', traits => ['NameInRequest']);
  has InstanceFindingReasonCodes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'instanceFindingReasonCodes', traits => ['NameInRequest']);
  has InstanceRecommendationOptions => (is => 'ro', isa => 'ArrayRef[Paws::ComputeOptimizer::RDSDBInstanceRecommendationOption]', request_name => 'instanceRecommendationOptions', traits => ['NameInRequest']);
  has LastRefreshTimestamp => (is => 'ro', isa => 'Str', request_name => 'lastRefreshTimestamp', traits => ['NameInRequest']);
  has LookbackPeriodInDays => (is => 'ro', isa => 'Num', request_name => 'lookbackPeriodInDays', traits => ['NameInRequest']);
  has PromotionTier => (is => 'ro', isa => 'Int', request_name => 'promotionTier', traits => ['NameInRequest']);
  has ResourceArn => (is => 'ro', isa => 'Str', request_name => 'resourceArn', traits => ['NameInRequest']);
  has StorageFinding => (is => 'ro', isa => 'Str', request_name => 'storageFinding', traits => ['NameInRequest']);
  has StorageFindingReasonCodes => (is => 'ro', isa => 'ArrayRef[Str|Undef]', request_name => 'storageFindingReasonCodes', traits => ['NameInRequest']);
  has StorageRecommendationOptions => (is => 'ro', isa => 'ArrayRef[Paws::ComputeOptimizer::RDSDBStorageRecommendationOption]', request_name => 'storageRecommendationOptions', traits => ['NameInRequest']);
  has Tags => (is => 'ro', isa => 'ArrayRef[Paws::ComputeOptimizer::Tag]', request_name => 'tags', traits => ['NameInRequest']);
  has UtilizationMetrics => (is => 'ro', isa => 'ArrayRef[Paws::ComputeOptimizer::RDSDBUtilizationMetric]', request_name => 'utilizationMetrics', traits => ['NameInRequest']);

1;

### main pod documentation begin ###

=head1 NAME

Paws::ComputeOptimizer::RDSDBRecommendation

=head1 USAGE

This class represents one of two things:

=head3 Arguments in a call to a service

Use the attributes of this class as arguments to methods. You shouldn't make instances of this class. 
Each attribute should be used as a named argument in the calls that expect this type of object.

As an example, if Att1 is expected to be a Paws::ComputeOptimizer::RDSDBRecommendation object:

  $service_obj->Method(Att1 => { AccountId => $value, ..., UtilizationMetrics => $value  });

=head3 Results returned from an API call

Use accessors for each attribute. If Att1 is expected to be an Paws::ComputeOptimizer::RDSDBRecommendation object:

  $result = $service_obj->Method(...);
  $result->Att1->AccountId

=head1 DESCRIPTION

Describes an Amazon RDS recommendation.

=head1 ATTRIBUTES


=head2 AccountId => Str

The Amazon Web Services account ID of the Amazon RDS.


=head2 CurrentDBInstanceClass => Str

The DB instance class of the current RDS instance.


=head2 CurrentInstancePerformanceRisk => Str

The performance risk for the current DB instance.


=head2 CurrentStorageConfiguration => L<Paws::ComputeOptimizer::DBStorageConfiguration>

The configuration of the current RDS storage.


=head2 DbClusterIdentifier => Str

The identifier for DB cluster.


=head2 EffectiveRecommendationPreferences => L<Paws::ComputeOptimizer::RDSEffectiveRecommendationPreferences>

Describes the effective recommendation preferences for Amazon RDS.


=head2 Engine => Str

The engine of the RDS instance.


=head2 EngineVersion => Str

The database engine version.


=head2 Idle => Str

This indicates if the RDS instance is idle or not.


=head2 InstanceFinding => Str

The finding classification of an Amazon RDS instance.

Findings for Amazon RDS instance include:

=over

=item *

B<C<Underprovisioned> > E<mdash> When Compute Optimizer detects that
thereE<rsquo>s not enough resource specifications, an Amazon RDS is
considered under-provisioned.

=item *

B<C<Overprovisioned> > E<mdash> When Compute Optimizer detects that
thereE<rsquo>s excessive resource specifications, an Amazon RDS is
considered over-provisioned.

=item *

B<C<Optimized> > E<mdash> When the specifications of your Amazon RDS
instance meet the performance requirements of your workload, the
service is considered optimized.

=back



=head2 InstanceFindingReasonCodes => ArrayRef[Str|Undef]

The reason for the finding classification of an Amazon RDS instance.


=head2 InstanceRecommendationOptions => ArrayRef[L<Paws::ComputeOptimizer::RDSDBInstanceRecommendationOption>]

An array of objects that describe the recommendation options for the
Amazon RDS instance.


=head2 LastRefreshTimestamp => Str

The timestamp of when the Amazon RDS recommendation was last generated.


=head2 LookbackPeriodInDays => Num

The number of days the Amazon RDS utilization metrics were analyzed.


=head2 PromotionTier => Int

The promotion tier for the Aurora instance.


=head2 ResourceArn => Str

The ARN of the current Amazon RDS.

The following is the format of the ARN:

C<arn:aws:rds:{region}:{accountId}:db:{resourceName}>


=head2 StorageFinding => Str

The finding classification of Amazon RDS storage.

Findings for Amazon RDS instance include:

=over

=item *

B<C<Underprovisioned> > E<mdash> When Compute Optimizer detects that
thereE<rsquo>s not enough storage, an Amazon RDS is considered
under-provisioned.

=item *

B<C<Overprovisioned> > E<mdash> When Compute Optimizer detects that
thereE<rsquo>s excessive storage, an Amazon RDS is considered
over-provisioned.

=item *

B<C<Optimized> > E<mdash> When the storage of your Amazon RDS meet the
performance requirements of your workload, the service is considered
optimized.

=back



=head2 StorageFindingReasonCodes => ArrayRef[Str|Undef]

The reason for the finding classification of Amazon RDS storage.


=head2 StorageRecommendationOptions => ArrayRef[L<Paws::ComputeOptimizer::RDSDBStorageRecommendationOption>]

An array of objects that describe the recommendation options for Amazon
RDS storage.


=head2 Tags => ArrayRef[L<Paws::ComputeOptimizer::Tag>]

A list of tags assigned to your Amazon RDS recommendations.


=head2 UtilizationMetrics => ArrayRef[L<Paws::ComputeOptimizer::RDSDBUtilizationMetric>]

An array of objects that describe the utilization metrics of the Amazon
RDS.



=head1 SEE ALSO

This class forms part of L<Paws>, describing an object used in L<Paws::ComputeOptimizer>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut

